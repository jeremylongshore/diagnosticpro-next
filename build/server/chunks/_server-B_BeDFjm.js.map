{"version":3,"file":"_server-B_BeDFjm.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/submit-diagnosis/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport \"@google-cloud/vertexai\";\nimport \"@google/generative-ai\";\nimport pkg from \"pg\";\nconst { Pool } = pkg;\nclass DatabaseService {\n  constructor() {\n    this.pool = null;\n    this.initialized = false;\n  }\n  async initialize() {\n    if (this.initialized) return;\n    const connectionString = process.env.DATABASE_URL || \"postgresql://postgres:password@localhost:5432/diagnosticpro_mvp\";\n    try {\n      this.pool = new Pool({\n        connectionString,\n        ssl: process.env.NODE_ENV === \"production\" ? { rejectUnauthorized: false } : false,\n        max: 10,\n        idleTimeoutMillis: 3e4,\n        connectionTimeoutMillis: 2e3\n      });\n      const client = await this.pool.connect();\n      console.log(\"‚úÖ Database connected successfully\");\n      client.release();\n      await this.createTables();\n      this.initialized = true;\n    } catch (error) {\n      console.error(\"‚ùå Database connection failed:\", error);\n      console.log(\"üîÑ Falling back to file-based storage due to database connection failure\");\n      console.log(`Database URL attempted: ${\"Set\"}`);\n      this.pool = null;\n      this.initialized = true;\n      return;\n    }\n  }\n  async createTables() {\n    const createSubmissionsTable = `\n      CREATE TABLE IF NOT EXISTS diagnostic_submissions (\n        id SERIAL PRIMARY KEY,\n        submission_id VARCHAR(50) UNIQUE NOT NULL,\n        full_name VARCHAR(255) NOT NULL,\n        email VARCHAR(255) NOT NULL,\n        phone VARCHAR(20),\n        selected_service VARCHAR(50) NOT NULL,\n        equipment_type VARCHAR(100),\n        make VARCHAR(100),\n        model VARCHAR(100),\n        year INTEGER,\n        vin VARCHAR(50),\n        mileage INTEGER,\n        error_codes TEXT,\n        problem_description TEXT NOT NULL,\n        shop_quote DECIMAL(10,2),\n        ai_analysis JSONB,\n        email_sent BOOLEAN DEFAULT FALSE,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      );\n    `;\n    const createPaymentsTable = `\n      CREATE TABLE IF NOT EXISTS payments (\n        id SERIAL PRIMARY KEY,\n        submission_id VARCHAR(50) REFERENCES diagnostic_submissions(submission_id),\n        payment_intent_id VARCHAR(255),\n        amount INTEGER NOT NULL,\n        currency VARCHAR(3) DEFAULT 'usd',\n        status VARCHAR(50) NOT NULL,\n        stripe_customer_id VARCHAR(255),\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      );\n    `;\n    try {\n      await this.pool.query(createSubmissionsTable);\n      await this.pool.query(createPaymentsTable);\n      console.log(\"‚úÖ Database tables created/verified\");\n    } catch (error) {\n      console.error(\"‚ùå Failed to create tables:\", error);\n      throw error;\n    }\n  }\n  /**\n   * @param {Object} formData\n   * @param {string} formData.fullName\n   * @param {string} formData.email\n   * @param {string} formData.phone\n   * @param {string} formData.selectedService\n   * @param {string} formData.equipmentType\n   * @param {string} formData.make\n   * @param {string} formData.model\n   * @param {string} formData.year\n   * @param {string} formData.vin\n   * @param {string} formData.mileage\n   * @param {string} formData.errorCodes\n   * @param {string} formData.problemDescription\n   * @param {string} formData.shopQuote\n   * @returns {Promise<Object>}\n   */\n  async saveSubmission(formData) {\n    await this.initialize();\n    if (!this.pool) {\n      return this.saveToFile(formData);\n    }\n    const submissionId = `diag_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const query = `\n      INSERT INTO diagnostic_submissions (\n        submission_id, full_name, email, phone, selected_service,\n        equipment_type, make, model, year, vin, mileage,\n        error_codes, problem_description, shop_quote\n      ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14)\n      RETURNING *;\n    `;\n    const values = [\n      submissionId,\n      formData.fullName,\n      formData.email,\n      formData.phone,\n      formData.selectedService,\n      formData.equipmentType,\n      formData.make,\n      formData.model,\n      formData.year ? parseInt(formData.year) : null,\n      formData.vin,\n      formData.mileage ? parseInt(formData.mileage) : null,\n      formData.errorCodes,\n      formData.problemDescription,\n      formData.shopQuote ? parseFloat(formData.shopQuote) : null\n    ];\n    try {\n      const result = await this.pool.query(query, values);\n      console.log(`‚úÖ Submission saved to database: ${submissionId}`);\n      return { id: submissionId, ...result.rows[0] };\n    } catch (error) {\n      console.error(\"‚ùå Failed to save submission:\", error);\n      return this.saveToFile(formData);\n    }\n  }\n  /**\n   * @param {string} submissionId\n   * @param {Object} aiAnalysis\n   * @returns {Promise<Object|void>}\n   */\n  async updateAnalysis(submissionId, aiAnalysis) {\n    await this.initialize();\n    if (!this.pool) {\n      console.log(\"üîÑ Database not available, analysis stored in memory\");\n      return;\n    }\n    const query = `\n      UPDATE diagnostic_submissions \n      SET ai_analysis = $1, updated_at = CURRENT_TIMESTAMP\n      WHERE submission_id = $2\n      RETURNING *;\n    `;\n    try {\n      const result = await this.pool.query(query, [JSON.stringify(aiAnalysis), submissionId]);\n      console.log(`‚úÖ AI analysis updated for ${submissionId}`);\n      return result.rows[0];\n    } catch (error) {\n      console.error(\"‚ùå Failed to update analysis:\", error);\n    }\n  }\n  /**\n   * @param {string} submissionId\n   * @returns {Promise<void>}\n   */\n  async markEmailSent(submissionId) {\n    await this.initialize();\n    if (!this.pool) return;\n    const query = `\n      UPDATE diagnostic_submissions \n      SET email_sent = TRUE, updated_at = CURRENT_TIMESTAMP\n      WHERE submission_id = $1;\n    `;\n    try {\n      await this.pool.query(query, [submissionId]);\n      console.log(`‚úÖ Email status updated for ${submissionId}`);\n    } catch (error) {\n      console.error(\"‚ùå Failed to update email status:\", error);\n    }\n  }\n  // File-based fallback for development\n  /**\n   * @param {Object} formData\n   * @returns {Promise<Object>}\n   */\n  async saveToFile(formData) {\n    const fs = await import(\"fs/promises\");\n    const path = await import(\"path\");\n    const submissionId = `diag_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const dataDir = \"/tmp/diagnosticpro-data\";\n    try {\n      await fs.mkdir(dataDir, { recursive: true });\n      const submission = {\n        id: submissionId,\n        ...formData,\n        created_at: (/* @__PURE__ */ new Date()).toISOString()\n      };\n      await fs.writeFile(\n        path.join(dataDir, `${submissionId}.json`),\n        JSON.stringify(submission, null, 2)\n      );\n      console.log(`‚úÖ Submission saved to file: ${submissionId}`);\n      return submission;\n    } catch (error) {\n      console.error(\"‚ùå Failed to save to file:\", error);\n      throw error;\n    }\n  }\n  /**\n   * @param {string} submissionId\n   * @returns {Promise<Object|null>}\n   */\n  async getSubmission(submissionId) {\n    await this.initialize();\n    if (!this.pool) {\n      try {\n        const fs = await import(\"fs/promises\");\n        const path = await import(\"path\");\n        const filePath = path.join(\"/tmp/diagnosticpro-data\", `${submissionId}.json`);\n        const data = await fs.readFile(filePath, \"utf8\");\n        return JSON.parse(data);\n      } catch {\n        return null;\n      }\n    }\n    const query = \"SELECT * FROM diagnostic_submissions WHERE submission_id = $1\";\n    try {\n      const result = await this.pool.query(query, [submissionId]);\n      return result.rows[0] || null;\n    } catch (error) {\n      console.error(\"‚ùå Failed to get submission:\", error);\n      return null;\n    }\n  }\n  async close() {\n    if (this.pool) {\n      await this.pool.end();\n      console.log(\"üîå Database connection closed\");\n    }\n  }\n}\nconst databaseService = new DatabaseService();\nasync function POST({ request }) {\n  try {\n    console.log(\"üìù New diagnostic form submission received\");\n    const formData = await request.json();\n    if (!formData.problemDescription || !formData.email || !formData.fullName) {\n      return json(\n        { success: false, error: \"Missing required fields\" },\n        { status: 400 }\n      );\n    }\n    console.log(`üîç Processing ${formData.selectedService} request for ${formData.fullName}`);\n    console.log(\"üíæ Saving submission to database...\");\n    let savedSubmission;\n    try {\n      savedSubmission = await databaseService.saveSubmission(formData);\n      console.log(`‚úÖ Submission saved to database with ID: ${savedSubmission.id}`);\n    } catch (dbError) {\n      console.error(\"‚ùå DATABASE SAVE FAILED:\", dbError);\n      return json(\n        {\n          success: false,\n          error: \"Failed to save submission to database. Please try again.\",\n          details: dbError.message\n        },\n        { status: 500 }\n      );\n    }\n    console.log(\"üí≥ Payment required - preparing checkout session...\");\n    return json({\n      success: true,\n      message: \"Submission saved. Redirecting to payment...\",\n      submissionId: savedSubmission.id,\n      requiresPayment: true,\n      paymentRequired: true\n    });\n  } catch (error) {\n    console.error(\"‚ùå Diagnostic submission failed:\", error);\n    return json(\n      {\n        success: false,\n        error: \"Analysis failed. Please try again or contact support.\",\n        details: error.message\n      },\n      { status: 500 }\n    );\n  }\n}\nasync function OPTIONS() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Methods\": \"POST, OPTIONS\",\n      \"Access-Control-Allow-Headers\": \"Content-Type\"\n    }\n  });\n}\nexport {\n  OPTIONS,\n  POST\n};\n"],"names":[],"mappings":"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"}