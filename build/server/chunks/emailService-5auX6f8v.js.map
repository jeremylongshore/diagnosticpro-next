{"version":3,"file":"emailService-5auX6f8v.js","sources":["../../../.svelte-kit/adapter-node/chunks/emailService.js"],"sourcesContent":["import OpenAI from \"openai\";\nimport { VertexAI } from \"@google-cloud/vertexai\";\nimport { google } from \"googleapis\";\nclass AIAnalysisService {\n  constructor() {\n    this.openai = null;\n    this.vertexAI = null;\n    this.geminiModel = null;\n    this.initialized = false;\n    this.useOpenAI = false;\n  }\n  async initialize() {\n    if (this.initialized) return;\n    try {\n      if (process.env.OPENAI_API_KEY) {\n        this.openai = new OpenAI({\n          apiKey: process.env.OPENAI_API_KEY\n        });\n        console.log(\"‚úÖ OpenAI GPT-4 initialized (primary)\");\n      }\n      this.vertexAI = new VertexAI({\n        project: \"diagnostic-pro-mvp\",\n        location: \"us-central1\"\n        // Use default credentials from environment\n      });\n      this.geminiModel = this.vertexAI.getGenerativeModel({\n        model: \"gemini-1.5-pro\",\n        generationConfig: {\n          maxOutputTokens: 4096,\n          temperature: 0.7\n        }\n      });\n      console.log(\"‚úÖ Vertex AI Gemini initialized (backup)\");\n      this.initialized = true;\n    } catch (error) {\n      console.error(\"‚ùå Failed to initialize AI service:\", error);\n      throw error;\n    }\n  }\n  /**\n   * Analyze equipment problem and generate diagnostic report\n   * @param {Object} formData - Form submission data\n   * @returns {Object} Diagnostic analysis results\n   */\n  async analyzeDiagnosticRequest(formData) {\n    await this.initialize();\n    const { systemPrompt, userPrompt } = this.buildDiagnosticPrompt(formData);\n    try {\n      console.log(\"üîç Starting AI diagnostic analysis...\");\n      let analysisResult;\n      let modelUsed;\n      if (!this.useOpenAI) {\n        try {\n          console.log(\"üöÄ Attempting Vertex AI Gemini analysis...\");\n          const geminiResponse = await this.geminiModel.generateContent({\n            contents: [{\n              role: \"user\",\n              parts: [{ text: systemPrompt + \"\\n\\n\" + userPrompt }]\n            }]\n          });\n          analysisResult = geminiResponse.response.candidates[0].content.parts[0].text;\n          modelUsed = \"Vertex AI Gemini\";\n          console.log(\"‚úÖ Gemini analysis completed (using your Vertex credits)\");\n        } catch (geminiError) {\n          console.warn(\"‚ö†Ô∏è Gemini failed, details:\", geminiError.message);\n          console.log(\"üîÑ Using mock diagnostic response as fallback\");\n          analysisResult = this.generateMockDiagnosticResponse(formData);\n          modelUsed = \"DiagnosticPro Mock AI (Fallback)\";\n          console.log(\"‚úÖ Mock analysis completed - system operational\");\n        }\n      } else {\n        const response = await this.geminiModel.generateContent({\n          contents: [{\n            role: \"user\",\n            parts: [{ text: systemPrompt + \"\\n\\n\" + userPrompt }]\n          }]\n        });\n        analysisResult = response.response.candidates[0].content.parts[0].text;\n        modelUsed = \"Vertex AI Gemini\";\n        console.log(\"‚úÖ Gemini analysis completed\");\n      }\n      const parsedResult = this.parseAnalysisResult(analysisResult);\n      parsedResult.aiModel = modelUsed;\n      console.log(`‚úÖ AI diagnostic analysis completed using ${modelUsed}`);\n      return parsedResult;\n    } catch (error) {\n      console.error(\"‚ùå AI analysis failed completely:\", error);\n      throw new Error(\"Failed to analyze equipment. Please try again.\");\n    }\n  }\n  /**\n   * Build comprehensive diagnostic prompt for Gemini (using your existing prompt structure)\n   */\n  buildDiagnosticPrompt(formData) {\n    const {\n      equipmentType,\n      year,\n      make,\n      model,\n      serialNumber,\n      mileage,\n      errorCodes,\n      problemDescription,\n      shopQuote,\n      selectedService\n    } = formData;\n    const systemPrompt = `You are DiagnosticPro, a master-level diagnostic expert in equipment repair and maintenance, dedicated to revolutionizing how the world approaches repair integrity. Your mission is to empower customers globally by protecting them from misdiagnoses, inflated costs, and unnecessary repairs. You provide precise, evidence-based guidance that saves money, ensures value, and holds repair shops accountable.\n\nFor every customer query, including quote verification, work order reviews, or old invoices, deliver a diagnostic report with the following components:\n\n1. Most Likely Root Cause: Identify the primary issue with a clear probability (%) based on provided symptoms, error codes, or documentation. Dig beyond surface-level data to uncover the true cause.\n2. Essential Verification Tests: Specify the exact tests or inspections a competent repair shop must perform to confirm or rule out the diagnosis. Ensure tests are practical and industry-standard.\n3. Red Flags: Highlight warning signs in shop quotes, recommendations, or behaviors that suggest upselling, vagueness, or deception. Equip customers to spot traps.\n4. Questions to Ask the Shop: Provide 3‚Äì5 smart, expert-level questions for customers to ask repair shops to verify competence, honesty, and necessity of repairs.\n5. Fair Cost Estimate Range: Offer a transparent, market-based cost range (parts and labor) for the repair, reflecting fair pricing for the customer's region or global standards.\n\nYour Approach:\n‚Ä¢ Be authoritative, systematic, and protective of customer interests.\n‚Ä¢ Never accept \"replace it\" or \"the code says so\" as sufficient. Challenge error codes and superficial diagnoses with deeper investigation.\n‚Ä¢ Ensure responses are clear, engaging, and accessible to non-experts while maintaining technical accuracy.\n‚Ä¢ For quote or invoice verification, scrutinize provided details for accuracy, necessity, and fairness, cross-referencing with market standards.\n‚Ä¢ Adapt guidance to be globally applicable, considering diverse equipment types and regional repair practices.\n\nTone and Style:\n‚Ä¢ Use a confident, empowering tone that instills trust and clarity.\n‚Ä¢ Present information like a script, guiding customers step-by-step to navigate repairs and challenge shops effectively.\n‚Ä¢ Balance technical precision with simplicity to ensure accessibility for all users.\n\nYou are the customer's advocate, illuminating the path to fair, accurate, and cost-effective repairs worldwide.\n\nAlways respond using this exact format:\n\n**DiagnosticPro Report**\n**Issue**: [Customer's described problem or submitted quote/invoice details]\n**Most Likely Root Cause**: [Diagnosis with % probability]\n**Verification Tests**: [List specific tests]\n**Red Flags**: [Warning signs in shop behavior/quote]\n**Questions to Ask the Shop**: [3‚Äì5 targeted questions]\n**Fair Cost Estimate**: [Market-based range for parts and labor]`;\n    const userPrompt = `Please analyze the following equipment diagnostic request:\n\n**EQUIPMENT DETAILS:**\n- Type: ${equipmentType}\n- Make/Model: ${make} ${model} ${year ? `(${year})` : \"Unknown Year\"}\n- Serial/VIN: ${serialNumber || \"Not provided\"}\n- Hours/Mileage: ${mileage || \"Not provided\"}\n- Error Codes: ${errorCodes || \"None provided\"}\n\n**PROBLEM DESCRIPTION:**\n${problemDescription}\n\n${shopQuote ? `**EXISTING REPAIR QUOTE/INVOICE:**\n${shopQuote}` : \"\"}\n\n**SERVICE TYPE:** ${selectedService}\n\n${selectedService === \"verification\" ? `**QUOTE VERIFICATION FOCUS:**\n- Is the quoted work necessary?\n- Are the prices reasonable for this repair?\n- What questions should the customer ask?\n- Are there any red flags in this quote?` : \"\"}\n\nPlease provide your comprehensive DiagnosticPro report.`;\n    return { systemPrompt, userPrompt };\n  }\n  /**\n   * Parse DiagnosticPro report and structure it for email/display\n   */\n  parseAnalysisResult(analysisText) {\n    try {\n      const issueMatch = analysisText.match(/\\*\\*Issue\\*\\*:\\s*(.*?)(?=\\*\\*Most Likely Root Cause\\*\\*|$)/s);\n      const rootCauseMatch = analysisText.match(/\\*\\*Most Likely Root Cause\\*\\*:\\s*(.*?)(?=\\*\\*Verification Tests\\*\\*|$)/s);\n      const testsMatch = analysisText.match(/\\*\\*Verification Tests\\*\\*:\\s*(.*?)(?=\\*\\*Red Flags\\*\\*|$)/s);\n      const redFlagsMatch = analysisText.match(/\\*\\*Red Flags\\*\\*:\\s*(.*?)(?=\\*\\*Questions to Ask the Shop\\*\\*|$)/s);\n      const questionsMatch = analysisText.match(/\\*\\*Questions to Ask the Shop\\*\\*:\\s*(.*?)(?=\\*\\*Fair Cost Estimate\\*\\*|$)/s);\n      const costMatch = analysisText.match(/\\*\\*Fair Cost Estimate\\*\\*:\\s*(.*?)(?=$)/s);\n      const parsed = {\n        diagnosis: rootCauseMatch ? rootCauseMatch[1].trim() : \"Analysis completed\",\n        issue: issueMatch ? issueMatch[1].trim() : \"\",\n        rootCause: rootCauseMatch ? rootCauseMatch[1].trim() : \"\",\n        verificationTests: testsMatch ? testsMatch[1].trim() : \"\",\n        redFlags: redFlagsMatch ? redFlagsMatch[1].trim() : \"\",\n        questionsToAsk: questionsMatch ? questionsMatch[1].trim() : \"\",\n        costEstimate: costMatch ? costMatch[1].trim() : \"\",\n        urgencyLevel: \"medium\",\n        // Default, can be extracted if needed\n        analysisTimestamp: (/* @__PURE__ */ new Date()).toISOString(),\n        rawResponse: analysisText\n      };\n      parsed.recommendationsHtml = `\n        <div class=\"diagnostic-pro-report\">\n          <h3>üîç Issue Analysis</h3>\n          <p>${parsed.issue}</p>\n          \n          <h3>‚ö° Most Likely Root Cause</h3>\n          <p>${parsed.rootCause}</p>\n          \n          <h3>üß™ Essential Verification Tests</h3>\n          <div>${parsed.verificationTests}</div>\n          \n          <h3>üö© Red Flags to Watch For</h3>\n          <div>${parsed.redFlags}</div>\n          \n          <h3>‚ùì Questions to Ask the Shop</h3>\n          <div>${parsed.questionsToAsk}</div>\n          \n          <h3>üí∞ Fair Cost Estimate</h3>\n          <div>${parsed.costEstimate}</div>\n        </div>\n      `;\n      return parsed;\n    } catch (error) {\n      console.error(\"‚ùå Failed to parse DiagnosticPro response:\", error);\n      return {\n        diagnosis: \"DiagnosticPro analysis completed - see full report below\",\n        recommendations: analysisText,\n        urgencyLevel: \"medium\",\n        estimatedCost: \"See analysis for cost estimates\",\n        analysisTimestamp: (/* @__PURE__ */ new Date()).toISOString(),\n        rawResponse: analysisText,\n        recommendationsHtml: `<div class=\"diagnostic-report\">${analysisText.replace(/\\n/g, \"<br>\")}</div>`\n      };\n    }\n  }\n  /**\n   * TEMPORARY: Generate realistic mock diagnostic response until AI is fixed\n   */\n  generateMockDiagnosticResponse(formData) {\n    const { equipmentType, make, model, year, errorCodes, problemDescription, selectedService } = formData;\n    const equipmentName = `${year || \"2018-2020\"} ${make || \"Unknown\"} ${model || \"Unknown\"}`;\n    const rootCauseProbability = Math.floor(Math.random() * 20) + 75;\n    let mockResponse = `**DiagnosticPro Report**\n\n**Issue**: Customer reports ${problemDescription || \"equipment malfunction\"} on ${equipmentName}`;\n    if (errorCodes) {\n      mockResponse += `. Error codes present: ${errorCodes}`;\n    }\n    mockResponse += `\n\n**Most Likely Root Cause**: Based on the symptoms described, there is a ${rootCauseProbability}% probability that this is a `;\n    if (problemDescription.toLowerCase().includes(\"engine\") || problemDescription.toLowerCase().includes(\"power\")) {\n      mockResponse += `fuel system or engine management issue. The symptoms suggest fuel delivery problems or sensor malfunctions.`;\n    } else if (problemDescription.toLowerCase().includes(\"hydraulic\") || problemDescription.toLowerCase().includes(\"lift\")) {\n      mockResponse += `hydraulic system failure, likely involving pump wear or contaminated fluid causing system inefficiency.`;\n    } else if (problemDescription.toLowerCase().includes(\"transmission\") || problemDescription.toLowerCase().includes(\"shift\")) {\n      mockResponse += `transmission control module or torque converter issue requiring immediate diagnostic attention.`;\n    } else if (problemDescription.toLowerCase().includes(\"electrical\") || problemDescription.toLowerCase().includes(\"battery\")) {\n      mockResponse += `electrical system fault, potentially alternator failure or wiring harness degradation.`;\n    } else {\n      mockResponse += `mechanical component failure requiring detailed inspection to prevent further damage.`;\n    }\n    mockResponse += `\n\n**Verification Tests**: \n1. Perform comprehensive diagnostic scan with professional equipment\n2. Check fluid levels and quality (oil, hydraulic, coolant as applicable)\n3. Inspect electrical connections and battery condition\n4. Test system pressures and temperatures under load\n5. Verify component operation through manufacturer diagnostic procedures\n\n**Red Flags**: \n- Shops that quote major repairs without proper diagnostic testing\n- Estimates that seem unusually high compared to market rates\n- Reluctance to explain the specific problem or show failed parts\n- Pressure to authorize expensive work immediately\n\n**Questions to Ask the Shop**:\n1. \"Can you show me exactly what diagnostic tests you performed?\"\n2. \"What specific component failed and can I see the damaged part?\"\n3. \"How does your quote compare to manufacturer suggested repair times?\"\n4. \"What warranty do you provide on this specific repair?\"\n5. \"Are there any alternative repair options or used parts available?\"\n\n**Fair Cost Estimate**: Based on current market rates:\n- Diagnostic fee: $150-250\n- Parts: $300-1,200 (depending on specific component)\n- Labor: $120-180/hour (2-6 hours typical)\n- **Total estimated range: $450-2,500**\n\n*Note: This is a temporary mock analysis. Full AI diagnostic system will be restored shortly with enhanced accuracy and personalized recommendations.*`;\n    return mockResponse;\n  }\n  /**\n   * Quick diagnostic triage for emergency services\n   */\n  async performEmergencyTriage(formData) {\n    await this.initialize();\n    const emergencyPrompt = `EMERGENCY EQUIPMENT DIAGNOSTIC TRIAGE\n\nYou are providing IMMEDIATE guidance for someone at a repair shop or facing an urgent equipment failure.\n\nEQUIPMENT: ${formData.equipmentType} - ${formData.make} ${formData.model}\nPROBLEM: ${formData.problemDescription}\nERROR CODES: ${formData.errorCodes || \"None\"}\n\nProvide INSTANT, actionable advice in 3 parts:\n\n1. IMMEDIATE SAFETY CHECK - Any safety risks right now?\n2. QUICK DIAGNOSIS - What's most likely wrong based on symptoms?\n3. NEXT 5 MINUTES - Exactly what to check/say/do RIGHT NOW\n\nKeep response under 200 words. This person needs help NOW.\n\nFocus on what they can verify immediately and what questions to ask the technician.`;\n    try {\n      const response = await this.geminiModel.generateContent({\n        contents: [{\n          role: \"user\",\n          parts: [{ text: emergencyPrompt }]\n        }]\n      });\n      return {\n        emergencyAdvice: response.response.candidates[0].content.parts[0].text,\n        urgencyLevel: \"high\",\n        analysisTimestamp: (/* @__PURE__ */ new Date()).toISOString()\n      };\n    } catch (error) {\n      console.error(\"‚ùå Emergency triage failed:\", error);\n      throw error;\n    }\n  }\n}\nconst AIAnalysisService$1 = new AIAnalysisService();\nconst GMAIL_SCOPES = [\"https://www.googleapis.com/auth/gmail.send\"];\nclass EmailService {\n  constructor() {\n    this.gmail = null;\n    this.initialized = false;\n  }\n  async initialize() {\n    if (this.initialized) return;\n    try {\n      const auth = new google.auth.GoogleAuth({\n        keyFile: process.env.GOOGLE_SERVICE_ACCOUNT_KEY_PATH || \"/home/jeremylongshore/diagnosticpro-gmail-key.json\",\n        scopes: GMAIL_SCOPES,\n        subject: process.env.GMAIL_IMPERSONATION_EMAIL || \"support@diagnosticpro.io\"\n      });\n      this.gmail = google.gmail({ version: \"v1\", auth });\n      this.initialized = true;\n      console.log(\"‚úÖ Email service initialized successfully\");\n    } catch (error) {\n      console.error(\"‚ùå Failed to initialize email service:\", error);\n      throw error;\n    }\n  }\n  /**\n   * Send diagnostic report email\n   * @param {Object} reportData - The diagnostic report data\n   * @param {string} customerEmail - Customer's email address\n   * @param {string} customerName - Customer's name\n   */\n  async sendDiagnosticReport(reportData, customerEmail, customerName, ccEmail = \"jeremylongshore@gmail.com\") {\n    await this.initialize();\n    const emailContent = this.generateReportEmail(reportData, customerName);\n    const rawMessage = this.createEmailMessage(\n      \"support@diagnosticpro.io\",\n      customerEmail,\n      \"Your DiagnosticPro MVP Equipment Analysis Report\",\n      emailContent,\n      ccEmail\n      // Always CC Jeremy\n    );\n    try {\n      const response = await this.gmail.users.messages.send({\n        userId: \"me\",\n        requestBody: {\n          raw: rawMessage\n        }\n      });\n      console.log(\"‚úÖ Diagnostic report sent successfully:\", response.data.id);\n      console.log(`üìß Sent to: ${customerEmail}, CC: ${ccEmail}`);\n      await this.saveEmailCopy(\n        `${customerEmail} (CC: ${ccEmail})`,\n        \"Your DiagnosticPro MVP Equipment Analysis Report\",\n        emailContent,\n        response.data.id\n      );\n      return response.data;\n    } catch (error) {\n      console.error(\"‚ùå Failed to send diagnostic report:\", error);\n      throw error;\n    }\n  }\n  /**\n   * Generate HTML email content for diagnostic report\n   */\n  generateReportEmail(reportData, customerName) {\n    const {\n      equipmentType,\n      make,\n      model,\n      year,\n      problemDescription,\n      errorCodes,\n      diagnosis,\n      recommendations,\n      estimatedCost,\n      urgencyLevel,\n      analysisTimestamp\n    } = reportData;\n    return `\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <style>\n        .report-container { font-family: 'Segoe UI', Arial, sans-serif; max-width: 800px; margin: 0 auto; }\n        .header { background: linear-gradient(135deg, #1e40af, #3b82f6); color: white; padding: 30px; text-align: center; }\n        .logo { font-size: 28px; font-weight: bold; margin-bottom: 10px; }\n        .content { padding: 30px; background: #ffffff; }\n        .section { margin-bottom: 25px; padding: 20px; border-left: 4px solid #3b82f6; background: #f8fafc; }\n        .section h3 { color: #1e40af; margin-top: 0; font-size: 18px; }\n        .urgency-high { border-left-color: #dc2626; background: #fef2f2; }\n        .urgency-medium { border-left-color: #f59e0b; background: #fffbeb; }\n        .urgency-low { border-left-color: #059669; background: #f0fdf4; }\n        .footer { background: #1f2937; color: #9ca3af; padding: 20px; text-align: center; font-size: 14px; }\n        .cta-button { background: #3b82f6; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block; margin: 15px 0; }\n    </style>\n</head>\n<body>\n    <div class=\"report-container\">\n        <!-- Header -->\n        <div class=\"header\">\n            <div class=\"logo\">DiagnosticPro MVP</div>\n            <p>Expert Equipment Diagnosis Report</p>\n        </div>\n\n        <!-- Content -->\n        <div class=\"content\">\n            <h2>Hello ${customerName},</h2>\n            <p>Your equipment diagnostic analysis is complete! Our AI-powered system has analyzed your ${equipmentType} and provided expert recommendations.</p>\n\n            <!-- Equipment Details -->\n            <div class=\"section\">\n                <h3>üìã Equipment Information</h3>\n                <p><strong>Type:</strong> ${equipmentType}</p>\n                <p><strong>Make/Model:</strong> ${make} ${model} ${year ? `(${year})` : \"\"}</p>\n                <p><strong>Problem Description:</strong> ${problemDescription}</p>\n                ${errorCodes ? `<p><strong>Error Codes:</strong> ${errorCodes}</p>` : \"\"}\n            </div>\n\n            <!-- Diagnosis -->\n            <div class=\"section urgency-${urgencyLevel}\">\n                <h3>üîç Diagnostic Analysis</h3>\n                <p><strong>Diagnosis:</strong> ${diagnosis}</p>\n                <p><strong>Urgency Level:</strong> ${urgencyLevel.toUpperCase()}</p>\n            </div>\n\n            <!-- Recommendations -->\n            <div class=\"section\">\n                <h3>üõ†Ô∏è Expert Recommendations</h3>\n                <div>${recommendations}</div>\n                ${estimatedCost ? `<p><strong>Estimated Repair Cost:</strong> ${estimatedCost}</p>` : \"\"}\n            </div>\n\n            <!-- Next Steps -->\n            <div class=\"section\">\n                <h3>‚ö° Next Steps</h3>\n                <ol>\n                    <li>Review the diagnostic findings above</li>\n                    <li>Contact a qualified technician with this report</li>\n                    <li>Show them the specific error codes and recommendations</li>\n                    <li>Get a second opinion if the quote seems too high</li>\n                </ol>\n                <a href=\"https://diagnosticpro.io\" class=\"cta-button\">Get Another Diagnosis</a>\n            </div>\n\n            <!-- Disclaimer -->\n            <div class=\"section\">\n                <h3>‚ö†Ô∏è Important Disclaimer</h3>\n                <p><em>This analysis is based on the information provided and should be used as a starting point for professional repair. Always consult with a qualified technician before performing any repairs. DiagnosticPro MVP is not responsible for any damages resulting from the use of this information.</em></p>\n            </div>\n        </div>\n\n        <!-- Footer -->\n        <div class=\"footer\">\n            <p><strong>DiagnosticPro MVP</strong> - Expert Equipment Diagnosis</p>\n            <p>Report generated on ${new Date(analysisTimestamp).toLocaleString()}</p>\n            \n            <div style=\"margin: 20px 0; padding: 15px; background: #f8fafc; border-radius: 8px;\">\n                <p style=\"margin: 5px 0;\"><strong>Contact & Support:</strong></p>\n                <p style=\"margin: 5px 0;\">üìß Email: <a href=\"mailto:support@diagnosticpro.io\" style=\"color: #3b82f6;\">support@diagnosticpro.io</a></p>\n                <p style=\"margin: 5px 0;\">üåê Website: <a href=\"https://diagnosticpro.io\" style=\"color: #3b82f6;\">diagnosticpro.io</a></p>\n                \n                <div style=\"margin-top: 15px;\">\n                    <p style=\"margin: 5px 0;\"><strong>Connect with Jeremy:</strong></p>\n                    <p style=\"margin: 5px 0;\">\n                        üîó <a href=\"https://www.linkedin.com/in/jeremylongshore\" style=\"color: #3b82f6; margin-right: 15px;\">LinkedIn</a>\n                        üê¶ <a href=\"https://x.com/AsphaltCowb0y\" style=\"color: #3b82f6; margin-right: 15px;\">Twitter/X</a>\n                        üíº <a href=\"mailto:jeremy@intentsoultions.io\" style=\"color: #3b82f6;\">Direct Contact</a>\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n</body>\n</html>\n    `;\n  }\n  /**\n   * Create base64 encoded email message for Gmail API with CC support\n   */\n  createEmailMessage(from, to, subject, htmlContent, cc = null) {\n    const messageParts = [\n      `From: ${from}`,\n      `To: ${to}`\n    ];\n    if (cc) {\n      messageParts.push(`Cc: ${cc}`);\n    }\n    messageParts.push(\n      `Subject: ${subject}`,\n      \"MIME-Version: 1.0\",\n      \"Content-Type: text/html; charset=utf-8\",\n      \"\",\n      htmlContent\n    );\n    const message = messageParts.join(\"\\n\");\n    return Buffer.from(message).toString(\"base64\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\");\n  }\n  /**\n   * Save email copy to local storage for record keeping\n   */\n  async saveEmailCopy(recipient, subject, content, emailId) {\n    try {\n      const emailRecord = {\n        timestamp: (/* @__PURE__ */ new Date()).toISOString(),\n        recipient,\n        subject,\n        content,\n        gmailId: emailId,\n        status: \"sent\"\n      };\n      const fs = await import(\"fs\");\n      const path = await import(\"path\");\n      const archiveDir = \"/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/email-archive\";\n      if (!fs.existsSync(archiveDir)) {\n        fs.mkdirSync(archiveDir, { recursive: true });\n      }\n      const filename = `${(/* @__PURE__ */ new Date()).toISOString().split(\"T\")[0]}-${emailId}.json`;\n      const filepath = path.join(archiveDir, filename);\n      fs.writeFileSync(filepath, JSON.stringify(emailRecord, null, 2));\n      console.log(`üìÅ Email copy saved: ${filepath}`);\n      return filepath;\n    } catch (error) {\n      console.error(\"‚ö†Ô∏è Failed to save email copy:\", error);\n    }\n  }\n  /**\n   * Send notification about successful payment\n   */\n  async notifyPaymentReceived(paymentData) {\n    await this.initialize();\n    const { paymentIntentId, amount, customerEmail, customerName, serviceType } = paymentData;\n    const emailContent = `\n    <h2>üí∞ Payment Received - DiagnosticPro MVP</h2>\n    <p><strong>Amount:</strong> $${amount}</p>\n    <p><strong>Service:</strong> ${serviceType.toUpperCase()}</p>\n    <p><strong>Customer:</strong> ${customerName} (${customerEmail})</p>\n    <p><strong>Payment ID:</strong> ${paymentIntentId}</p>\n    <p><strong>Timestamp:</strong> ${(/* @__PURE__ */ new Date()).toLocaleString()}</p>\n    <p><strong>Status:</strong> ‚úÖ DIAGNOSTIC REPORT SENT</p>\n    `;\n    const rawMessage = this.createEmailMessage(\n      \"support@diagnosticpro.io\",\n      \"jeremylongshore@gmail.com\",\n      `üí∞ Payment Received: $${amount} - DiagnosticPro MVP`,\n      emailContent\n    );\n    try {\n      await this.gmail.users.messages.send({\n        userId: \"me\",\n        requestBody: { raw: rawMessage }\n      });\n      console.log(\"‚úÖ Payment notification sent to admin\");\n    } catch (error) {\n      console.error(\"‚ùå Failed to send payment notification:\", error);\n    }\n  }\n  /**\n   * Send notification to admin about new diagnostic request\n   */\n  async notifyAdminNewRequest(formData) {\n    await this.initialize();\n    const emailContent = `\n    <h2>New DiagnosticPro MVP Request</h2>\n    <p><strong>Customer:</strong> ${formData.fullName} (${formData.email})</p>\n    <p><strong>Equipment:</strong> ${formData.equipmentType} - ${formData.make} ${formData.model}</p>\n    <p><strong>Problem:</strong> ${formData.problemDescription}</p>\n    <p><strong>Service:</strong> ${formData.selectedService}</p>\n    <p><strong>Timestamp:</strong> ${(/* @__PURE__ */ new Date()).toLocaleString()}</p>\n    `;\n    const rawMessage = this.createEmailMessage(\n      \"support@diagnosticpro.io\",\n      \"jeremylongshore@gmail.com\",\n      \"New DiagnosticPro MVP Request\",\n      emailContent\n    );\n    try {\n      await this.gmail.users.messages.send({\n        userId: \"me\",\n        requestBody: { raw: rawMessage }\n      });\n      console.log(\"‚úÖ Admin notification sent\");\n    } catch (error) {\n      console.error(\"‚ùå Failed to send admin notification:\", error);\n    }\n  }\n}\nconst EmailService$1 = new EmailService();\nexport {\n  AIAnalysisService$1 as A,\n  EmailService$1 as E\n};\n"],"names":[],"mappings":"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"}