
> diagnosticpro-legendary@5.0.0 dev
> vite dev --host 0.0.0.0


  VITE v5.4.19  ready in 3391 ms

  ‚ûú  Local:   http://localhost:5173/
  ‚ûú  Network: http://10.128.0.2:5173/
üìù New diagnostic form submission received
üîç Processing diagnostic request for Test User
‚úÖ Email service initialized successfully
‚ùå Failed to send admin notification: GaxiosError: Precondition check failed.
    at Gaxios._request (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/gaxios/build/src/gaxios.js:142:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async JWT.requestAsync (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/google-auth-library/build/src/auth/oauth2client.js:429:18)
    at async EmailService.notifyAdminNewRequest (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/emailService.js:285:7)
    at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:33:13)
    at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
    at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
    at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
    at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
  config: {
    url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
    method: 'POST',
    apiVersion: '',
    userAgentDirectives: [ [Object] ],
    paramsSerializer: [Function (anonymous)],
    data: {
      raw: 'RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogamVyZW15bG9uZ3Nob3JlQGdtYWlsLmNvbQpTdWJqZWN0OiBOZXcgRGlhZ25vc3RpY1BybyBNVlAgUmVxdWVzdApNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVR5cGU6IHRleHQvaHRtbDsgY2hhcnNldD11dGYtOAoKCiAgICA8aDI-TmV3IERpYWdub3N0aWNQcm8gTVZQIFJlcXVlc3Q8L2gyPgogICAgPHA-PHN0cm9uZz5DdXN0b21lcjo8L3N0cm9uZz4gVGVzdCBVc2VyIChqZXJlbXlsb25nc2hvcmVAZ21haWwuY29tKTwvcD4KICAgIDxwPjxzdHJvbmc-RXF1aXBtZW50Ojwvc3Ryb25nPiBUZXN0IC0gdW5kZWZpbmVkIHVuZGVmaW5lZDwvcD4KICAgIDxwPjxzdHJvbmc-UHJvYmxlbTo8L3N0cm9uZz4gVGVzdCBpc3N1ZTwvcD4KICAgIDxwPjxzdHJvbmc-U2VydmljZTo8L3N0cm9uZz4gZGlhZ25vc3RpYzwvcD4KICAgIDxwPjxzdHJvbmc-VGltZXN0YW1wOjwvc3Ryb25nPiA3LzMxLzIwMjUsIDQ6MjM6NTAgQU08L3A-CiAgICA'
    },
    headers: {
      'x-goog-api-client': 'gdcl/7.2.0 gl-node/20.19.4',
      'Accept-Encoding': 'gzip',
      'User-Agent': 'google-api-nodejs-client/7.2.0 (gzip)',
      Authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
      'Content-Type': 'application/json'
    },
    params: {},
    validateStatus: [Function (anonymous)],
    retry: true,
    body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogamVyZW15bG9uZ3Nob3JlQGdtYWlsLmNvbQpTdWJqZWN0OiBOZXcgRGlhZ25vc3RpY1BybyBNVlAgUmVxdWVzdApNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVR5cGU6IHRleHQvaHRtbDsgY2hhcnNldD11dGYtOAoKCiAgICA8aDI-TmV3IERpYWdub3N0aWNQcm8gTVZQIFJlcXVlc3Q8L2gyPgogICAgPHA-PHN0cm9uZz5DdXN0b21lcjo8L3N0cm9uZz4gVGVzdCBVc2VyIChqZXJlbXlsb25nc2hvcmVAZ21haWwuY29tKTwvcD4KICAgIDxwPjxzdHJvbmc-RXF1aXBtZW50Ojwvc3Ryb25nPiBUZXN0IC0gdW5kZWZpbmVkIHVuZGVmaW5lZDwvcD4KICAgIDxwPjxzdHJvbmc-UHJvYmxlbTo8L3N0cm9uZz4gVGVzdCBpc3N1ZTwvcD4KICAgIDxwPjxzdHJvbmc-U2VydmljZTo8L3N0cm9uZz4gZGlhZ25vc3RpYzwvcD4KICAgIDxwPjxzdHJvbmc-VGltZXN0YW1wOjwvc3Ryb25nPiA3LzMxLzIwMjUsIDQ6MjM6NTAgQU08L3A-CiAgICA"}',
    responseType: 'unknown',
    errorRedactor: [Function: defaultErrorRedactor],
    retryConfig: {
      currentRetryAttempt: 0,
      retry: 3,
      httpMethodsToRetry: [Array],
      noResponseRetries: 2,
      retryDelayMultiplier: 2,
      timeOfFirstRequest: 1753935832155,
      totalTimeout: 9007199254740991,
      maxRetryDelay: 9007199254740991,
      statusCodesToRetry: [Array]
    }
  },
  response: {
    config: {
      url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
      method: 'POST',
      apiVersion: '',
      userAgentDirectives: [Array],
      paramsSerializer: [Function (anonymous)],
      data: [Object],
      headers: [Object],
      params: {},
      validateStatus: [Function (anonymous)],
      retry: true,
      body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogamVyZW15bG9uZ3Nob3JlQGdtYWlsLmNvbQpTdWJqZWN0OiBOZXcgRGlhZ25vc3RpY1BybyBNVlAgUmVxdWVzdApNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVR5cGU6IHRleHQvaHRtbDsgY2hhcnNldD11dGYtOAoKCiAgICA8aDI-TmV3IERpYWdub3N0aWNQcm8gTVZQIFJlcXVlc3Q8L2gyPgogICAgPHA-PHN0cm9uZz5DdXN0b21lcjo8L3N0cm9uZz4gVGVzdCBVc2VyIChqZXJlbXlsb25nc2hvcmVAZ21haWwuY29tKTwvcD4KICAgIDxwPjxzdHJvbmc-RXF1aXBtZW50Ojwvc3Ryb25nPiBUZXN0IC0gdW5kZWZpbmVkIHVuZGVmaW5lZDwvcD4KICAgIDxwPjxzdHJvbmc-UHJvYmxlbTo8L3N0cm9uZz4gVGVzdCBpc3N1ZTwvcD4KICAgIDxwPjxzdHJvbmc-U2VydmljZTo8L3N0cm9uZz4gZGlhZ25vc3RpYzwvcD4KICAgIDxwPjxzdHJvbmc-VGltZXN0YW1wOjwvc3Ryb25nPiA3LzMxLzIwMjUsIDQ6MjM6NTAgQU08L3A-CiAgICA"}',
      responseType: 'unknown',
      errorRedactor: [Function: defaultErrorRedactor]
    },
    data: { error: [Object] },
    headers: {
      'content-encoding': 'gzip',
      'content-type': 'application/json; charset=UTF-8',
      date: 'Thu, 31 Jul 2025 04:23:51 GMT',
      server: 'ESF',
      'transfer-encoding': 'chunked',
      vary: 'Origin, X-Origin, Referer',
      'x-content-type-options': 'nosniff',
      'x-frame-options': 'SAMEORIGIN',
      'x-xss-protection': '0'
    },
    status: 400,
    statusText: 'Bad Request',
    request: {
      responseURL: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send'
    }
  },
  error: undefined,
  status: 400,
  code: 400,
  errors: [
    {
      message: 'Precondition check failed.',
      domain: 'global',
      reason: 'failedPrecondition'
    }
  ],
  [Symbol(gaxios-gaxios-error)]: '6.7.1'
}
‚úÖ Vertex AI Gemini initialized (backup)
üîç Starting AI diagnostic analysis...
‚ö†Ô∏è Gemini failed, falling back to OpenAI: [VertexAI.ClientError]: got status: 403 Forbidden. {"error":{"code":403,"message":"Permission 'aiplatform.endpoints.predict' denied on resource '//aiplatform.googleapis.com/projects/diagnostic-pro-mvp/locations/us-central1/publishers/google/models/gemini-1.5-pro' (or it may not exist).","status":"PERMISSION_DENIED","details":[{"@type":"type.googleapis.com/google.rpc.ErrorInfo","reason":"IAM_PERMISSION_DENIED","domain":"aiplatform.googleapis.com","metadata":{"resource":"projects/diagnostic-pro-mvp/locations/us-central1/publishers/google/models/gemini-1.5-pro","permission":"aiplatform.endpoints.predict"}}]}}
‚ùå AI analysis failed completely: Error: OpenAI not available as backup - no API key provided
    at AIAnalysisService.analyzeDiagnosticRequest (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/aiAnalysisService.js:91:19)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:48:30)
    at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
    at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
    at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
    at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22
‚ùå Diagnostic submission failed: Error: Failed to analyze equipment. Please try again.
    at AIAnalysisService.analyzeDiagnosticRequest (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/aiAnalysisService.js:130:13)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:48:30)
    at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
    at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
    at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
    at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22
4:24:38 AM [vite] page reload src/lib/services/aiAnalysisService.js
4:25:02 AM [vite] page reload src/lib/services/aiAnalysisService.js
4:25:09 AM [vite] page reload src/routes/api/submit-diagnosis/+server.js
4:25:24 AM [vite] page reload src/lib/services/aiAnalysisService.js
üìù New diagnostic form submission received
üîç Processing diagnostic request for Anonymous Concerned Husband
üìß Skipping admin notification to prioritize AI analysis
‚úÖ Vertex AI Gemini initialized (backup)
üîç Starting AI diagnostic analysis...
üöÄ Attempting Vertex AI Gemini analysis...
‚ö†Ô∏è Gemini failed, details: [VertexAI.ClientError]: got status: 404 Not Found. {"error":{"code":404,"message":"Publisher Model `projects/diagnostic-pro-mvp/locations/us-central1/publishers/google/models/gemini-1.5-pro` was not found or your project does not have access to it. Please ensure you are using a valid model version. For more information, see: https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versions","status":"NOT_FOUND"}}
üîÑ Using mock diagnostic response as fallback
‚úÖ Mock analysis completed - system operational
‚úÖ AI diagnostic analysis completed using DiagnosticPro Mock AI (Fallback)
üéØ Full diagnostic analysis completed
‚ùå Failed to send diagnostic report: GaxiosError: Precondition check failed.
    at Gaxios._request (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/gaxios/build/src/gaxios.js:142:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async JWT.requestAsync (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/google-auth-library/build/src/auth/oauth2client.js:429:18)
    at async EmailService.sendDiagnosticReport (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/emailService.js:58:24)
    at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:61:13)
    at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
    at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
    at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
    at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
  config: {
    url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
    method: 'POST',
    apiVersion: '',
    userAgentDirectives: [ [Object] ],
    paramsSerializer: [Function (anonymous)],
    data: {
      raw: 'RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBBbm9ueW1vdXMgQ29uY2VybmVkIEh1c2JhbmQsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRnVlbCBwdW1wIG1ha2luZyB3ZWlyZCB3aGluaW5nIG5vaXNlczwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlhZ25vc2lzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIHVyZ2VuY3ktbWVkaXVtIj4KICAgICAgICAgICAgICAgIDxoMz7wn5SNIERpYWdub3N0aWMgQW5hbHlzaXM8L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zaXM6PC9zdHJvbmc-IEJhc2VkIG9uIHRoZSBzeW1wdG9tcyBkZXNjcmliZWQsIHRoZXJlIGlzIGEgOTElIHByb2JhYmlsaXR5IHRoYXQgdGhpcyBpcyBhIG1lY2hhbmljYWwgY29tcG9uZW50IGZhaWx1cmUgcmVxdWlyaW5nIGRldGFpbGVkIGluc3BlY3Rpb24gdG8gcHJldmVudCBmdXJ0aGVyIGRhbWFnZS48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlVyZ2VuY3kgTGV2ZWw6PC9zdHJvbmc-IE1FRElVTTwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIFJlY29tbWVuZGF0aW9ucyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-boO-4jyBFeHBlcnQgUmVjb21tZW5kYXRpb25zPC9oMz4KICAgICAgICAgICAgICAgIDxkaXY-dW5kZWZpbmVkPC9kaXY-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIE5leHQgU3RlcHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoSBOZXh0IFN0ZXBzPC9oMz4KICAgICAgICAgICAgICAgIDxvbD4KICAgICAgICAgICAgICAgICAgICA8bGk-UmV2aWV3IHRoZSBkaWFnbm9zdGljIGZpbmRpbmdzIGFib3ZlPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-Q29udGFjdCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIHdpdGggdGhpcyByZXBvcnQ8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5TaG93IHRoZW0gdGhlIHNwZWNpZmljIGVycm9yIGNvZGVzIGFuZCByZWNvbW1lbmRhdGlvbnM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5HZXQgYSBzZWNvbmQgb3BpbmlvbiBpZiB0aGUgcXVvdGUgc2VlbXMgdG9vIGhpZ2g8L2xpPgogICAgICAgICAgICAgICAgPC9vbD4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgY2xhc3M9ImN0YS1idXR0b24iPkdldCBBbm90aGVyIERpYWdub3NpczwvYT4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpc2NsYWltZXIgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoO-4jyBJbXBvcnRhbnQgRGlzY2xhaW1lcjwvaDM-CiAgICAgICAgICAgICAgICA8cD48ZW0-VGhpcyBhbmFseXNpcyBpcyBiYXNlZCBvbiB0aGUgaW5mb3JtYXRpb24gcHJvdmlkZWQgYW5kIHNob3VsZCBiZSB1c2VkIGFzIGEgc3RhcnRpbmcgcG9pbnQgZm9yIHByb2Zlc3Npb25hbCByZXBhaXIuIEFsd2F5cyBjb25zdWx0IHdpdGggYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiBiZWZvcmUgcGVyZm9ybWluZyBhbnkgcmVwYWlycy4gRGlhZ25vc3RpY1BybyBNVlAgaXMgbm90IHJlc3BvbnNpYmxlIGZvciBhbnkgZGFtYWdlcyByZXN1bHRpbmcgZnJvbSB0aGUgdXNlIG9mIHRoaXMgaW5mb3JtYXRpb24uPC9lbT48L3A-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIEZvb3RlciAtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXIiPgogICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3N0aWNQcm8gTVZQPC9zdHJvbmc-IC0gRXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXM8L3A-CiAgICAgICAgICAgIDxwPlJlcG9ydCBnZW5lcmF0ZWQgb24gNy8zMS8yMDI1LCA0OjI1OjMyIEFNPC9wPgogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luOiAyMHB4IDA7IHBhZGRpbmc6IDE1cHg7IGJhY2tncm91bmQ6ICNmOGZhZmM7IGJvcmRlci1yYWRpdXM6IDhweDsiPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbnRhY3QgJiBTdXBwb3J0Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-TpyBFbWFpbDogPGEgaHJlZj0ibWFpbHRvOnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-MkCBXZWJzaXRlOiA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPmRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW4tdG9wOiAxNXB4OyI-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbm5lY3Qgd2l0aCBKZXJlbXk6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-CiAgICAgICAgICAgICAgICAgICAgICAgIPCflJcgPGEgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2plcmVteWxvbmdzaG9yZSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5MaW5rZWRJbjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-QpiA8YSBocmVmPSJodHRwczovL3guY29tL0FzcGhhbHRDb3diMHkiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-VHdpdHRlci9YPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5K8IDxhIGhyZWY9Im1haWx0bzpqZXJlbXlAaW50ZW50c291bHRpb25zLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5EaXJlY3QgQ29udGFjdDwvYT4KICAgICAgICAgICAgICAgICAgICA8L3A-CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CiAgICA8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw-CiAgICA'
    },
    headers: {
      'x-goog-api-client': 'gdcl/7.2.0 gl-node/20.19.4',
      'Accept-Encoding': 'gzip',
      'User-Agent': 'google-api-nodejs-client/7.2.0 (gzip)',
      Authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
      'Content-Type': 'application/json'
    },
    params: {},
    validateStatus: [Function (anonymous)],
    retry: true,
    body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBBbm9ueW1vdXMgQ29uY2VybmVkIEh1c2JhbmQsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRnVlbCBwdW1wIG1ha2luZyB3ZWlyZCB3aGluaW5nIG5vaXNlczwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlhZ25vc2lzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIHVyZ2VuY3ktbWVkaXVtIj4KICAgICAgICAgICAgICAgIDxoMz7wn5SNIERpYWdub3N0aWMgQW5hbHlzaXM8L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zaXM6PC9zdHJvbmc-IEJhc2VkIG9uIHRoZSBzeW1wdG9tcyBkZXNjcmliZWQsIHRoZXJlIGlzIGEgOTElIHByb2JhYmlsaXR5IHRoYXQgdGhpcyBpcyBhIG1lY2hhbmljYWwgY29tcG9uZW50IGZhaWx1cmUgcmVxdWlyaW5nIGRldGFpbGVkIGluc3BlY3Rpb24gdG8gcHJldmVudCBmdXJ0aGVyIGRhbWFnZS48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlVyZ2VuY3kgTGV2ZWw6PC9zdHJvbmc-IE1FRElVTTwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIFJlY29tbWVuZGF0aW9ucyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-boO-4jyBFeHBlcnQgUmVjb21tZW5kYXRpb25zPC9oMz4KICAgICAgICAgICAgICAgIDxkaXY-dW5kZWZpbmVkPC9kaXY-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIE5leHQgU3RlcHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoSBOZXh0IFN0ZXBzPC9oMz4KICAgICAgICAgICAgICAgIDxvbD4KICAgICAgICAgICAgICAgICAgICA8bGk-UmV2aWV3IHRoZSBkaWFnbm9zdGljIGZpbmRpbmdzIGFib3ZlPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-Q29udGFjdCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIHdpdGggdGhpcyByZXBvcnQ8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5TaG93IHRoZW0gdGhlIHNwZWNpZmljIGVycm9yIGNvZGVzIGFuZCByZWNvbW1lbmRhdGlvbnM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5HZXQgYSBzZWNvbmQgb3BpbmlvbiBpZiB0aGUgcXVvdGUgc2VlbXMgdG9vIGhpZ2g8L2xpPgogICAgICAgICAgICAgICAgPC9vbD4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgY2xhc3M9ImN0YS1idXR0b24iPkdldCBBbm90aGVyIERpYWdub3NpczwvYT4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpc2NsYWltZXIgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoO-4jyBJbXBvcnRhbnQgRGlzY2xhaW1lcjwvaDM-CiAgICAgICAgICAgICAgICA8cD48ZW0-VGhpcyBhbmFseXNpcyBpcyBiYXNlZCBvbiB0aGUgaW5mb3JtYXRpb24gcHJvdmlkZWQgYW5kIHNob3VsZCBiZSB1c2VkIGFzIGEgc3RhcnRpbmcgcG9pbnQgZm9yIHByb2Zlc3Npb25hbCByZXBhaXIuIEFsd2F5cyBjb25zdWx0IHdpdGggYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiBiZWZvcmUgcGVyZm9ybWluZyBhbnkgcmVwYWlycy4gRGlhZ25vc3RpY1BybyBNVlAgaXMgbm90IHJlc3BvbnNpYmxlIGZvciBhbnkgZGFtYWdlcyByZXN1bHRpbmcgZnJvbSB0aGUgdXNlIG9mIHRoaXMgaW5mb3JtYXRpb24uPC9lbT48L3A-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIEZvb3RlciAtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXIiPgogICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3N0aWNQcm8gTVZQPC9zdHJvbmc-IC0gRXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXM8L3A-CiAgICAgICAgICAgIDxwPlJlcG9ydCBnZW5lcmF0ZWQgb24gNy8zMS8yMDI1LCA0OjI1OjMyIEFNPC9wPgogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luOiAyMHB4IDA7IHBhZGRpbmc6IDE1cHg7IGJhY2tncm91bmQ6ICNmOGZhZmM7IGJvcmRlci1yYWRpdXM6IDhweDsiPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbnRhY3QgJiBTdXBwb3J0Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-TpyBFbWFpbDogPGEgaHJlZj0ibWFpbHRvOnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-MkCBXZWJzaXRlOiA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPmRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW4tdG9wOiAxNXB4OyI-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbm5lY3Qgd2l0aCBKZXJlbXk6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-CiAgICAgICAgICAgICAgICAgICAgICAgIPCflJcgPGEgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2plcmVteWxvbmdzaG9yZSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5MaW5rZWRJbjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-QpiA8YSBocmVmPSJodHRwczovL3guY29tL0FzcGhhbHRDb3diMHkiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-VHdpdHRlci9YPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5K8IDxhIGhyZWY9Im1haWx0bzpqZXJlbXlAaW50ZW50c291bHRpb25zLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5EaXJlY3QgQ29udGFjdDwvYT4KICAgICAgICAgICAgICAgICAgICA8L3A-CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CiAgICA8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw-CiAgICA"}',
    responseType: 'unknown',
    errorRedactor: [Function: defaultErrorRedactor],
    retryConfig: {
      currentRetryAttempt: 0,
      retry: 3,
      httpMethodsToRetry: [Array],
      noResponseRetries: 2,
      retryDelayMultiplier: 2,
      timeOfFirstRequest: 1753935933098,
      totalTimeout: 9007199254740991,
      maxRetryDelay: 9007199254740991,
      statusCodesToRetry: [Array]
    }
  },
  response: {
    config: {
      url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
      method: 'POST',
      apiVersion: '',
      userAgentDirectives: [Array],
      paramsSerializer: [Function (anonymous)],
      data: [Object],
      headers: [Object],
      params: {},
      validateStatus: [Function (anonymous)],
      retry: true,
      body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBBbm9ueW1vdXMgQ29uY2VybmVkIEh1c2JhbmQsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRnVlbCBwdW1wIG1ha2luZyB3ZWlyZCB3aGluaW5nIG5vaXNlczwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlhZ25vc2lzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIHVyZ2VuY3ktbWVkaXVtIj4KICAgICAgICAgICAgICAgIDxoMz7wn5SNIERpYWdub3N0aWMgQW5hbHlzaXM8L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zaXM6PC9zdHJvbmc-IEJhc2VkIG9uIHRoZSBzeW1wdG9tcyBkZXNjcmliZWQsIHRoZXJlIGlzIGEgOTElIHByb2JhYmlsaXR5IHRoYXQgdGhpcyBpcyBhIG1lY2hhbmljYWwgY29tcG9uZW50IGZhaWx1cmUgcmVxdWlyaW5nIGRldGFpbGVkIGluc3BlY3Rpb24gdG8gcHJldmVudCBmdXJ0aGVyIGRhbWFnZS48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlVyZ2VuY3kgTGV2ZWw6PC9zdHJvbmc-IE1FRElVTTwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIFJlY29tbWVuZGF0aW9ucyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-boO-4jyBFeHBlcnQgUmVjb21tZW5kYXRpb25zPC9oMz4KICAgICAgICAgICAgICAgIDxkaXY-dW5kZWZpbmVkPC9kaXY-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIE5leHQgU3RlcHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoSBOZXh0IFN0ZXBzPC9oMz4KICAgICAgICAgICAgICAgIDxvbD4KICAgICAgICAgICAgICAgICAgICA8bGk-UmV2aWV3IHRoZSBkaWFnbm9zdGljIGZpbmRpbmdzIGFib3ZlPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-Q29udGFjdCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIHdpdGggdGhpcyByZXBvcnQ8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5TaG93IHRoZW0gdGhlIHNwZWNpZmljIGVycm9yIGNvZGVzIGFuZCByZWNvbW1lbmRhdGlvbnM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5HZXQgYSBzZWNvbmQgb3BpbmlvbiBpZiB0aGUgcXVvdGUgc2VlbXMgdG9vIGhpZ2g8L2xpPgogICAgICAgICAgICAgICAgPC9vbD4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgY2xhc3M9ImN0YS1idXR0b24iPkdldCBBbm90aGVyIERpYWdub3NpczwvYT4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpc2NsYWltZXIgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoO-4jyBJbXBvcnRhbnQgRGlzY2xhaW1lcjwvaDM-CiAgICAgICAgICAgICAgICA8cD48ZW0-VGhpcyBhbmFseXNpcyBpcyBiYXNlZCBvbiB0aGUgaW5mb3JtYXRpb24gcHJvdmlkZWQgYW5kIHNob3VsZCBiZSB1c2VkIGFzIGEgc3RhcnRpbmcgcG9pbnQgZm9yIHByb2Zlc3Npb25hbCByZXBhaXIuIEFsd2F5cyBjb25zdWx0IHdpdGggYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiBiZWZvcmUgcGVyZm9ybWluZyBhbnkgcmVwYWlycy4gRGlhZ25vc3RpY1BybyBNVlAgaXMgbm90IHJlc3BvbnNpYmxlIGZvciBhbnkgZGFtYWdlcyByZXN1bHRpbmcgZnJvbSB0aGUgdXNlIG9mIHRoaXMgaW5mb3JtYXRpb24uPC9lbT48L3A-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIEZvb3RlciAtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXIiPgogICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3N0aWNQcm8gTVZQPC9zdHJvbmc-IC0gRXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXM8L3A-CiAgICAgICAgICAgIDxwPlJlcG9ydCBnZW5lcmF0ZWQgb24gNy8zMS8yMDI1LCA0OjI1OjMyIEFNPC9wPgogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luOiAyMHB4IDA7IHBhZGRpbmc6IDE1cHg7IGJhY2tncm91bmQ6ICNmOGZhZmM7IGJvcmRlci1yYWRpdXM6IDhweDsiPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbnRhY3QgJiBTdXBwb3J0Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-TpyBFbWFpbDogPGEgaHJlZj0ibWFpbHRvOnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-MkCBXZWJzaXRlOiA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPmRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW4tdG9wOiAxNXB4OyI-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbm5lY3Qgd2l0aCBKZXJlbXk6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-CiAgICAgICAgICAgICAgICAgICAgICAgIPCflJcgPGEgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2plcmVteWxvbmdzaG9yZSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5MaW5rZWRJbjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-QpiA8YSBocmVmPSJodHRwczovL3guY29tL0FzcGhhbHRDb3diMHkiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-VHdpdHRlci9YPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5K8IDxhIGhyZWY9Im1haWx0bzpqZXJlbXlAaW50ZW50c291bHRpb25zLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5EaXJlY3QgQ29udGFjdDwvYT4KICAgICAgICAgICAgICAgICAgICA8L3A-CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CiAgICA8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw-CiAgICA"}',
      responseType: 'unknown',
      errorRedactor: [Function: defaultErrorRedactor]
    },
    data: { error: [Object] },
    headers: {
      'content-encoding': 'gzip',
      'content-type': 'application/json; charset=UTF-8',
      date: 'Thu, 31 Jul 2025 04:25:32 GMT',
      server: 'ESF',
      'transfer-encoding': 'chunked',
      vary: 'Origin, X-Origin, Referer',
      'x-content-type-options': 'nosniff',
      'x-frame-options': 'SAMEORIGIN',
      'x-xss-protection': '0'
    },
    status: 400,
    statusText: 'Bad Request',
    request: {
      responseURL: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send'
    }
  },
  error: undefined,
  status: 400,
  code: 400,
  errors: [
    {
      message: 'Precondition check failed.',
      domain: 'global',
      reason: 'failedPrecondition'
    }
  ],
  [Symbol(gaxios-gaxios-error)]: '6.7.1'
}
‚ùå Failed to send customer email: GaxiosError: Precondition check failed.
    at Gaxios._request (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/gaxios/build/src/gaxios.js:142:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async JWT.requestAsync (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/google-auth-library/build/src/auth/oauth2client.js:429:18)
    at async EmailService.sendDiagnosticReport (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/emailService.js:58:24)
    at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:61:13)
    at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
    at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
    at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
    at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
  config: {
    url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
    method: 'POST',
    apiVersion: '',
    userAgentDirectives: [ [Object] ],
    paramsSerializer: [Function (anonymous)],
    data: {
      raw: 'RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBBbm9ueW1vdXMgQ29uY2VybmVkIEh1c2JhbmQsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRnVlbCBwdW1wIG1ha2luZyB3ZWlyZCB3aGluaW5nIG5vaXNlczwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlhZ25vc2lzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIHVyZ2VuY3ktbWVkaXVtIj4KICAgICAgICAgICAgICAgIDxoMz7wn5SNIERpYWdub3N0aWMgQW5hbHlzaXM8L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zaXM6PC9zdHJvbmc-IEJhc2VkIG9uIHRoZSBzeW1wdG9tcyBkZXNjcmliZWQsIHRoZXJlIGlzIGEgOTElIHByb2JhYmlsaXR5IHRoYXQgdGhpcyBpcyBhIG1lY2hhbmljYWwgY29tcG9uZW50IGZhaWx1cmUgcmVxdWlyaW5nIGRldGFpbGVkIGluc3BlY3Rpb24gdG8gcHJldmVudCBmdXJ0aGVyIGRhbWFnZS48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlVyZ2VuY3kgTGV2ZWw6PC9zdHJvbmc-IE1FRElVTTwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIFJlY29tbWVuZGF0aW9ucyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-boO-4jyBFeHBlcnQgUmVjb21tZW5kYXRpb25zPC9oMz4KICAgICAgICAgICAgICAgIDxkaXY-dW5kZWZpbmVkPC9kaXY-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIE5leHQgU3RlcHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoSBOZXh0IFN0ZXBzPC9oMz4KICAgICAgICAgICAgICAgIDxvbD4KICAgICAgICAgICAgICAgICAgICA8bGk-UmV2aWV3IHRoZSBkaWFnbm9zdGljIGZpbmRpbmdzIGFib3ZlPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-Q29udGFjdCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIHdpdGggdGhpcyByZXBvcnQ8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5TaG93IHRoZW0gdGhlIHNwZWNpZmljIGVycm9yIGNvZGVzIGFuZCByZWNvbW1lbmRhdGlvbnM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5HZXQgYSBzZWNvbmQgb3BpbmlvbiBpZiB0aGUgcXVvdGUgc2VlbXMgdG9vIGhpZ2g8L2xpPgogICAgICAgICAgICAgICAgPC9vbD4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgY2xhc3M9ImN0YS1idXR0b24iPkdldCBBbm90aGVyIERpYWdub3NpczwvYT4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpc2NsYWltZXIgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoO-4jyBJbXBvcnRhbnQgRGlzY2xhaW1lcjwvaDM-CiAgICAgICAgICAgICAgICA8cD48ZW0-VGhpcyBhbmFseXNpcyBpcyBiYXNlZCBvbiB0aGUgaW5mb3JtYXRpb24gcHJvdmlkZWQgYW5kIHNob3VsZCBiZSB1c2VkIGFzIGEgc3RhcnRpbmcgcG9pbnQgZm9yIHByb2Zlc3Npb25hbCByZXBhaXIuIEFsd2F5cyBjb25zdWx0IHdpdGggYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiBiZWZvcmUgcGVyZm9ybWluZyBhbnkgcmVwYWlycy4gRGlhZ25vc3RpY1BybyBNVlAgaXMgbm90IHJlc3BvbnNpYmxlIGZvciBhbnkgZGFtYWdlcyByZXN1bHRpbmcgZnJvbSB0aGUgdXNlIG9mIHRoaXMgaW5mb3JtYXRpb24uPC9lbT48L3A-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIEZvb3RlciAtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXIiPgogICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3N0aWNQcm8gTVZQPC9zdHJvbmc-IC0gRXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXM8L3A-CiAgICAgICAgICAgIDxwPlJlcG9ydCBnZW5lcmF0ZWQgb24gNy8zMS8yMDI1LCA0OjI1OjMyIEFNPC9wPgogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luOiAyMHB4IDA7IHBhZGRpbmc6IDE1cHg7IGJhY2tncm91bmQ6ICNmOGZhZmM7IGJvcmRlci1yYWRpdXM6IDhweDsiPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbnRhY3QgJiBTdXBwb3J0Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-TpyBFbWFpbDogPGEgaHJlZj0ibWFpbHRvOnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-MkCBXZWJzaXRlOiA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPmRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW4tdG9wOiAxNXB4OyI-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbm5lY3Qgd2l0aCBKZXJlbXk6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-CiAgICAgICAgICAgICAgICAgICAgICAgIPCflJcgPGEgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2plcmVteWxvbmdzaG9yZSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5MaW5rZWRJbjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-QpiA8YSBocmVmPSJodHRwczovL3guY29tL0FzcGhhbHRDb3diMHkiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-VHdpdHRlci9YPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5K8IDxhIGhyZWY9Im1haWx0bzpqZXJlbXlAaW50ZW50c291bHRpb25zLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5EaXJlY3QgQ29udGFjdDwvYT4KICAgICAgICAgICAgICAgICAgICA8L3A-CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CiAgICA8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw-CiAgICA'
    },
    headers: {
      'x-goog-api-client': 'gdcl/7.2.0 gl-node/20.19.4',
      'Accept-Encoding': 'gzip',
      'User-Agent': 'google-api-nodejs-client/7.2.0 (gzip)',
      Authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
      'Content-Type': 'application/json'
    },
    params: {},
    validateStatus: [Function (anonymous)],
    retry: true,
    body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBBbm9ueW1vdXMgQ29uY2VybmVkIEh1c2JhbmQsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRnVlbCBwdW1wIG1ha2luZyB3ZWlyZCB3aGluaW5nIG5vaXNlczwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlhZ25vc2lzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIHVyZ2VuY3ktbWVkaXVtIj4KICAgICAgICAgICAgICAgIDxoMz7wn5SNIERpYWdub3N0aWMgQW5hbHlzaXM8L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zaXM6PC9zdHJvbmc-IEJhc2VkIG9uIHRoZSBzeW1wdG9tcyBkZXNjcmliZWQsIHRoZXJlIGlzIGEgOTElIHByb2JhYmlsaXR5IHRoYXQgdGhpcyBpcyBhIG1lY2hhbmljYWwgY29tcG9uZW50IGZhaWx1cmUgcmVxdWlyaW5nIGRldGFpbGVkIGluc3BlY3Rpb24gdG8gcHJldmVudCBmdXJ0aGVyIGRhbWFnZS48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlVyZ2VuY3kgTGV2ZWw6PC9zdHJvbmc-IE1FRElVTTwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIFJlY29tbWVuZGF0aW9ucyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-boO-4jyBFeHBlcnQgUmVjb21tZW5kYXRpb25zPC9oMz4KICAgICAgICAgICAgICAgIDxkaXY-dW5kZWZpbmVkPC9kaXY-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIE5leHQgU3RlcHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoSBOZXh0IFN0ZXBzPC9oMz4KICAgICAgICAgICAgICAgIDxvbD4KICAgICAgICAgICAgICAgICAgICA8bGk-UmV2aWV3IHRoZSBkaWFnbm9zdGljIGZpbmRpbmdzIGFib3ZlPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-Q29udGFjdCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIHdpdGggdGhpcyByZXBvcnQ8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5TaG93IHRoZW0gdGhlIHNwZWNpZmljIGVycm9yIGNvZGVzIGFuZCByZWNvbW1lbmRhdGlvbnM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5HZXQgYSBzZWNvbmQgb3BpbmlvbiBpZiB0aGUgcXVvdGUgc2VlbXMgdG9vIGhpZ2g8L2xpPgogICAgICAgICAgICAgICAgPC9vbD4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgY2xhc3M9ImN0YS1idXR0b24iPkdldCBBbm90aGVyIERpYWdub3NpczwvYT4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpc2NsYWltZXIgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoO-4jyBJbXBvcnRhbnQgRGlzY2xhaW1lcjwvaDM-CiAgICAgICAgICAgICAgICA8cD48ZW0-VGhpcyBhbmFseXNpcyBpcyBiYXNlZCBvbiB0aGUgaW5mb3JtYXRpb24gcHJvdmlkZWQgYW5kIHNob3VsZCBiZSB1c2VkIGFzIGEgc3RhcnRpbmcgcG9pbnQgZm9yIHByb2Zlc3Npb25hbCByZXBhaXIuIEFsd2F5cyBjb25zdWx0IHdpdGggYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiBiZWZvcmUgcGVyZm9ybWluZyBhbnkgcmVwYWlycy4gRGlhZ25vc3RpY1BybyBNVlAgaXMgbm90IHJlc3BvbnNpYmxlIGZvciBhbnkgZGFtYWdlcyByZXN1bHRpbmcgZnJvbSB0aGUgdXNlIG9mIHRoaXMgaW5mb3JtYXRpb24uPC9lbT48L3A-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIEZvb3RlciAtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXIiPgogICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3N0aWNQcm8gTVZQPC9zdHJvbmc-IC0gRXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXM8L3A-CiAgICAgICAgICAgIDxwPlJlcG9ydCBnZW5lcmF0ZWQgb24gNy8zMS8yMDI1LCA0OjI1OjMyIEFNPC9wPgogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luOiAyMHB4IDA7IHBhZGRpbmc6IDE1cHg7IGJhY2tncm91bmQ6ICNmOGZhZmM7IGJvcmRlci1yYWRpdXM6IDhweDsiPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbnRhY3QgJiBTdXBwb3J0Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-TpyBFbWFpbDogPGEgaHJlZj0ibWFpbHRvOnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-MkCBXZWJzaXRlOiA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPmRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW4tdG9wOiAxNXB4OyI-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbm5lY3Qgd2l0aCBKZXJlbXk6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-CiAgICAgICAgICAgICAgICAgICAgICAgIPCflJcgPGEgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2plcmVteWxvbmdzaG9yZSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5MaW5rZWRJbjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-QpiA8YSBocmVmPSJodHRwczovL3guY29tL0FzcGhhbHRDb3diMHkiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-VHdpdHRlci9YPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5K8IDxhIGhyZWY9Im1haWx0bzpqZXJlbXlAaW50ZW50c291bHRpb25zLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5EaXJlY3QgQ29udGFjdDwvYT4KICAgICAgICAgICAgICAgICAgICA8L3A-CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CiAgICA8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw-CiAgICA"}',
    responseType: 'unknown',
    errorRedactor: [Function: defaultErrorRedactor],
    retryConfig: {
      currentRetryAttempt: 0,
      retry: 3,
      httpMethodsToRetry: [Array],
      noResponseRetries: 2,
      retryDelayMultiplier: 2,
      timeOfFirstRequest: 1753935933098,
      totalTimeout: 9007199254740991,
      maxRetryDelay: 9007199254740991,
      statusCodesToRetry: [Array]
    }
  },
  response: {
    config: {
      url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
      method: 'POST',
      apiVersion: '',
      userAgentDirectives: [Array],
      paramsSerializer: [Function (anonymous)],
      data: [Object],
      headers: [Object],
      params: {},
      validateStatus: [Function (anonymous)],
      retry: true,
      body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBBbm9ueW1vdXMgQ29uY2VybmVkIEh1c2JhbmQsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRnVlbCBwdW1wIG1ha2luZyB3ZWlyZCB3aGluaW5nIG5vaXNlczwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlhZ25vc2lzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIHVyZ2VuY3ktbWVkaXVtIj4KICAgICAgICAgICAgICAgIDxoMz7wn5SNIERpYWdub3N0aWMgQW5hbHlzaXM8L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zaXM6PC9zdHJvbmc-IEJhc2VkIG9uIHRoZSBzeW1wdG9tcyBkZXNjcmliZWQsIHRoZXJlIGlzIGEgOTElIHByb2JhYmlsaXR5IHRoYXQgdGhpcyBpcyBhIG1lY2hhbmljYWwgY29tcG9uZW50IGZhaWx1cmUgcmVxdWlyaW5nIGRldGFpbGVkIGluc3BlY3Rpb24gdG8gcHJldmVudCBmdXJ0aGVyIGRhbWFnZS48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlVyZ2VuY3kgTGV2ZWw6PC9zdHJvbmc-IE1FRElVTTwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIFJlY29tbWVuZGF0aW9ucyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-boO-4jyBFeHBlcnQgUmVjb21tZW5kYXRpb25zPC9oMz4KICAgICAgICAgICAgICAgIDxkaXY-dW5kZWZpbmVkPC9kaXY-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIE5leHQgU3RlcHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoSBOZXh0IFN0ZXBzPC9oMz4KICAgICAgICAgICAgICAgIDxvbD4KICAgICAgICAgICAgICAgICAgICA8bGk-UmV2aWV3IHRoZSBkaWFnbm9zdGljIGZpbmRpbmdzIGFib3ZlPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-Q29udGFjdCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIHdpdGggdGhpcyByZXBvcnQ8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5TaG93IHRoZW0gdGhlIHNwZWNpZmljIGVycm9yIGNvZGVzIGFuZCByZWNvbW1lbmRhdGlvbnM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5HZXQgYSBzZWNvbmQgb3BpbmlvbiBpZiB0aGUgcXVvdGUgc2VlbXMgdG9vIGhpZ2g8L2xpPgogICAgICAgICAgICAgICAgPC9vbD4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgY2xhc3M9ImN0YS1idXR0b24iPkdldCBBbm90aGVyIERpYWdub3NpczwvYT4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpc2NsYWltZXIgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoO-4jyBJbXBvcnRhbnQgRGlzY2xhaW1lcjwvaDM-CiAgICAgICAgICAgICAgICA8cD48ZW0-VGhpcyBhbmFseXNpcyBpcyBiYXNlZCBvbiB0aGUgaW5mb3JtYXRpb24gcHJvdmlkZWQgYW5kIHNob3VsZCBiZSB1c2VkIGFzIGEgc3RhcnRpbmcgcG9pbnQgZm9yIHByb2Zlc3Npb25hbCByZXBhaXIuIEFsd2F5cyBjb25zdWx0IHdpdGggYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiBiZWZvcmUgcGVyZm9ybWluZyBhbnkgcmVwYWlycy4gRGlhZ25vc3RpY1BybyBNVlAgaXMgbm90IHJlc3BvbnNpYmxlIGZvciBhbnkgZGFtYWdlcyByZXN1bHRpbmcgZnJvbSB0aGUgdXNlIG9mIHRoaXMgaW5mb3JtYXRpb24uPC9lbT48L3A-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIEZvb3RlciAtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXIiPgogICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3N0aWNQcm8gTVZQPC9zdHJvbmc-IC0gRXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXM8L3A-CiAgICAgICAgICAgIDxwPlJlcG9ydCBnZW5lcmF0ZWQgb24gNy8zMS8yMDI1LCA0OjI1OjMyIEFNPC9wPgogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luOiAyMHB4IDA7IHBhZGRpbmc6IDE1cHg7IGJhY2tncm91bmQ6ICNmOGZhZmM7IGJvcmRlci1yYWRpdXM6IDhweDsiPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbnRhY3QgJiBTdXBwb3J0Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-TpyBFbWFpbDogPGEgaHJlZj0ibWFpbHRvOnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-MkCBXZWJzaXRlOiA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPmRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW4tdG9wOiAxNXB4OyI-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbm5lY3Qgd2l0aCBKZXJlbXk6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-CiAgICAgICAgICAgICAgICAgICAgICAgIPCflJcgPGEgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2plcmVteWxvbmdzaG9yZSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5MaW5rZWRJbjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-QpiA8YSBocmVmPSJodHRwczovL3guY29tL0FzcGhhbHRDb3diMHkiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-VHdpdHRlci9YPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5K8IDxhIGhyZWY9Im1haWx0bzpqZXJlbXlAaW50ZW50c291bHRpb25zLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5EaXJlY3QgQ29udGFjdDwvYT4KICAgICAgICAgICAgICAgICAgICA8L3A-CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CiAgICA8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw-CiAgICA"}',
      responseType: 'unknown',
      errorRedactor: [Function: defaultErrorRedactor]
    },
    data: { error: [Object] },
    headers: {
      'content-encoding': 'gzip',
      'content-type': 'application/json; charset=UTF-8',
      date: 'Thu, 31 Jul 2025 04:25:32 GMT',
      server: 'ESF',
      'transfer-encoding': 'chunked',
      vary: 'Origin, X-Origin, Referer',
      'x-content-type-options': 'nosniff',
      'x-frame-options': 'SAMEORIGIN',
      'x-xss-protection': '0'
    },
    status: 400,
    statusText: 'Bad Request',
    request: {
      responseURL: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send'
    }
  },
  error: undefined,
  status: 400,
  code: 400,
  errors: [
    {
      message: 'Precondition check failed.',
      domain: 'global',
      reason: 'failedPrecondition'
    }
  ],
  [Symbol(gaxios-gaxios-error)]: '6.7.1'
}
4:25:47 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:407:12 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:25:47 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:429:14 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:25:47 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:439:14 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:25:47 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:452:14 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:25:47 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:462:14 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:25:47 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:473:12 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:25:47 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:492:12 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:25:47 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:503:12 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:25:47 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:515:12 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:25:47 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:534:10 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:25:47 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:578:10 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:25:47 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:649:12 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:25:47 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:660:12 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:25:47 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:673:12 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:25:47 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:695:10 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
[vite:css] @import must precede all other statements (besides @charset or empty @layer)
3  |  @tailwind utilities;
4  |  
5  |  @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');
   |  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
6  |  
7  |  /* Custom psychological design tokens */
[vite:css] @import must precede all other statements (besides @charset or empty @layer)
3  |  @tailwind utilities;
4  |  
5  |  @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');
   |  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
6  |  
7  |  /* Custom psychological design tokens */
[vite:css] @import must precede all other statements (besides @charset or empty @layer)
3  |  @tailwind utilities;
4  |  
5  |  @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');
   |  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
6  |  
7  |  /* Custom psychological design tokens */
4:26:16 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:407:12 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:26:16 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:429:14 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:26:16 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:439:14 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:26:16 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:452:14 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:26:16 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:462:14 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:26:16 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:473:12 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:26:16 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:492:12 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:26:16 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:503:12 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:26:16 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:515:12 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:26:16 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:534:10 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:26:16 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:578:10 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:26:16 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:649:12 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:26:16 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:660:12 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:26:16 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:673:12 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
4:26:16 AM [vite-plugin-svelte] src/lib/components/MVPDiagnosticForm.svelte:695:10 A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control
üìù New diagnostic form submission received
üîç Processing verification request for Anonymous Concerned Husband
üìß Skipping admin notification to prioritize AI analysis
üîç Starting AI diagnostic analysis...
üöÄ Attempting Vertex AI Gemini analysis...
‚ö†Ô∏è Gemini failed, details: [VertexAI.ClientError]: got status: 404 Not Found. {"error":{"code":404,"message":"Publisher Model `projects/diagnostic-pro-mvp/locations/us-central1/publishers/google/models/gemini-1.5-pro` was not found or your project does not have access to it. Please ensure you are using a valid model version. For more information, see: https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versions","status":"NOT_FOUND"}}
üîÑ Using mock diagnostic response as fallback
‚úÖ Mock analysis completed - system operational
‚úÖ AI diagnostic analysis completed using DiagnosticPro Mock AI (Fallback)
üéØ Full diagnostic analysis completed
‚ùå Failed to send diagnostic report: GaxiosError: Precondition check failed.
    at Gaxios._request (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/gaxios/build/src/gaxios.js:142:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async JWT.requestAsync (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/google-auth-library/build/src/auth/oauth2client.js:429:18)
    at async EmailService.sendDiagnosticReport (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/emailService.js:58:24)
    at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:61:13)
    at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
    at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
    at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
    at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
  config: {
    url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
    method: 'POST',
    apiVersion: '',
    userAgentDirectives: [ [Object] ],
    paramsSerializer: [Function (anonymous)],
    data: {
      raw: 'RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBBbm9ueW1vdXMgQ29uY2VybmVkIEh1c2JhbmQsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRnVlbCBwdW1wIG1ha2luZyB3ZWlyZCB3aGluaW5nIG5vaXNlcyB0aGF0IHNvdW5kIHN1c3BpY2lvdXNseSBsaWtlIGEgcmVhbCBlc3RhdGUgYWdlbnQgdHJ5aW5nIHRvIGNsb3NlIGEgZGVhbCBhdCA5IFBNLiBDYXIgc3RhcnRzIGZpbmUgYnV0IGFjdHMgbGlrZSBpdCBuZWVkcyBtb3JlIGNhZmZlaW5lIC0gc2x1Z2dpc2ggYWNjZWxlcmF0aW9uIGFuZCBvY2Nhc2lvbmFsIGhpY2N1cHMuIEZ1ZWwgZ2F1Z2UgZG9pbmcgaW50ZXJwcmV0aXZlIGRhbmNlIGJldHdlZW4gMS80IGFuZCAxLzIgdGFuay48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkVycm9yIENvZGVzOjwvc3Ryb25nPiBQMDIzMCwgUDAyMzEsIFAwMDg3LCBQMjI5MzwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpYWdub3NpcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiB1cmdlbmN5LW1lZGl1bSI-CiAgICAgICAgICAgICAgICA8aDM-8J-UjSBEaWFnbm9zdGljIEFuYWx5c2lzPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc2lzOjwvc3Ryb25nPiBCYXNlZCBvbiB0aGUgc3ltcHRvbXMgZGVzY3JpYmVkLCB0aGVyZSBpcyBhIDkyJSBwcm9iYWJpbGl0eSB0aGF0IHRoaXMgaXMgYSBtZWNoYW5pY2FsIGNvbXBvbmVudCBmYWlsdXJlIHJlcXVpcmluZyBkZXRhaWxlZCBpbnNwZWN0aW9uIHRvIHByZXZlbnQgZnVydGhlciBkYW1hZ2UuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5VcmdlbmN5IExldmVsOjwvc3Ryb25nPiBNRURJVU08L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBSZWNvbW1lbmRhdGlvbnMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfm6DvuI8gRXhwZXJ0IFJlY29tbWVuZGF0aW9uczwvaDM-CiAgICAgICAgICAgICAgICA8ZGl2PnVuZGVmaW5lZDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBOZXh0IFN0ZXBzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqEgTmV4dCBTdGVwczwvaDM-CiAgICAgICAgICAgICAgICA8b2w-CiAgICAgICAgICAgICAgICAgICAgPGxpPlJldmlldyB0aGUgZGlhZ25vc3RpYyBmaW5kaW5ncyBhYm92ZTwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkNvbnRhY3QgYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiB3aXRoIHRoaXMgcmVwb3J0PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-U2hvdyB0aGVtIHRoZSBzcGVjaWZpYyBlcnJvciBjb2RlcyBhbmQgcmVjb21tZW5kYXRpb25zPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-R2V0IGEgc2Vjb25kIG9waW5pb24gaWYgdGhlIHF1b3RlIHNlZW1zIHRvbyBoaWdoPC9saT4KICAgICAgICAgICAgICAgIDwvb2w-CiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIGNsYXNzPSJjdGEtYnV0dG9uIj5HZXQgQW5vdGhlciBEaWFnbm9zaXM8L2E-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaXNjbGFpbWVyIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqDvuI8gSW1wb3J0YW50IERpc2NsYWltZXI8L2gzPgogICAgICAgICAgICAgICAgPHA-PGVtPlRoaXMgYW5hbHlzaXMgaXMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIGFuZCBzaG91bGQgYmUgdXNlZCBhcyBhIHN0YXJ0aW5nIHBvaW50IGZvciBwcm9mZXNzaW9uYWwgcmVwYWlyLiBBbHdheXMgY29uc3VsdCB3aXRoIGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gYmVmb3JlIHBlcmZvcm1pbmcgYW55IHJlcGFpcnMuIERpYWdub3N0aWNQcm8gTVZQIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgYW55IGRhbWFnZXMgcmVzdWx0aW5nIGZyb20gdGhlIHVzZSBvZiB0aGlzIGluZm9ybWF0aW9uLjwvZW0-PC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPCEtLSBGb290ZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyIj4KICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zdGljUHJvIE1WUDwvc3Ryb25nPiAtIEV4cGVydCBFcXVpcG1lbnQgRGlhZ25vc2lzPC9wPgogICAgICAgICAgICA8cD5SZXBvcnQgZ2VuZXJhdGVkIG9uIDcvMzEvMjAyNSwgNDoyNjoxOSBBTTwvcD4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogMjBweCAwOyBwYWRkaW5nOiAxNXB4OyBiYWNrZ3JvdW5kOiAjZjhmYWZjOyBib3JkZXItcmFkaXVzOiA4cHg7Ij4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db250YWN0ICYgU3VwcG9ydDo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfk6cgRW1haWw6IDxhIGhyZWY9Im1haWx0bzpzdXBwb3J0QGRpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfjJAgV2Vic2l0ZTogPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5kaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLXRvcDogMTVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db25uZWN0IHdpdGggSmVyZW15Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPgogICAgICAgICAgICAgICAgICAgICAgICDwn5SXIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qZXJlbXlsb25nc2hvcmUiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-TGlua2VkSW48L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkKYgPGEgaHJlZj0iaHR0cHM6Ly94LmNvbS9Bc3BoYWx0Q293YjB5IiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPlR3aXR0ZXIvWDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-SvCA8YSBocmVmPSJtYWlsdG86amVyZW15QGludGVudHNvdWx0aW9ucy5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-RGlyZWN0IENvbnRhY3Q8L2E-CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY-CjwvYm9keT4KPC9odG1sPgogICAg'
    },
    headers: {
      'x-goog-api-client': 'gdcl/7.2.0 gl-node/20.19.4',
      'Accept-Encoding': 'gzip',
      'User-Agent': 'google-api-nodejs-client/7.2.0 (gzip)',
      Authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
      'Content-Type': 'application/json'
    },
    params: {},
    validateStatus: [Function (anonymous)],
    retry: true,
    body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBBbm9ueW1vdXMgQ29uY2VybmVkIEh1c2JhbmQsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRnVlbCBwdW1wIG1ha2luZyB3ZWlyZCB3aGluaW5nIG5vaXNlcyB0aGF0IHNvdW5kIHN1c3BpY2lvdXNseSBsaWtlIGEgcmVhbCBlc3RhdGUgYWdlbnQgdHJ5aW5nIHRvIGNsb3NlIGEgZGVhbCBhdCA5IFBNLiBDYXIgc3RhcnRzIGZpbmUgYnV0IGFjdHMgbGlrZSBpdCBuZWVkcyBtb3JlIGNhZmZlaW5lIC0gc2x1Z2dpc2ggYWNjZWxlcmF0aW9uIGFuZCBvY2Nhc2lvbmFsIGhpY2N1cHMuIEZ1ZWwgZ2F1Z2UgZG9pbmcgaW50ZXJwcmV0aXZlIGRhbmNlIGJldHdlZW4gMS80IGFuZCAxLzIgdGFuay48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkVycm9yIENvZGVzOjwvc3Ryb25nPiBQMDIzMCwgUDAyMzEsIFAwMDg3LCBQMjI5MzwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpYWdub3NpcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiB1cmdlbmN5LW1lZGl1bSI-CiAgICAgICAgICAgICAgICA8aDM-8J-UjSBEaWFnbm9zdGljIEFuYWx5c2lzPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc2lzOjwvc3Ryb25nPiBCYXNlZCBvbiB0aGUgc3ltcHRvbXMgZGVzY3JpYmVkLCB0aGVyZSBpcyBhIDkyJSBwcm9iYWJpbGl0eSB0aGF0IHRoaXMgaXMgYSBtZWNoYW5pY2FsIGNvbXBvbmVudCBmYWlsdXJlIHJlcXVpcmluZyBkZXRhaWxlZCBpbnNwZWN0aW9uIHRvIHByZXZlbnQgZnVydGhlciBkYW1hZ2UuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5VcmdlbmN5IExldmVsOjwvc3Ryb25nPiBNRURJVU08L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBSZWNvbW1lbmRhdGlvbnMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfm6DvuI8gRXhwZXJ0IFJlY29tbWVuZGF0aW9uczwvaDM-CiAgICAgICAgICAgICAgICA8ZGl2PnVuZGVmaW5lZDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBOZXh0IFN0ZXBzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqEgTmV4dCBTdGVwczwvaDM-CiAgICAgICAgICAgICAgICA8b2w-CiAgICAgICAgICAgICAgICAgICAgPGxpPlJldmlldyB0aGUgZGlhZ25vc3RpYyBmaW5kaW5ncyBhYm92ZTwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkNvbnRhY3QgYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiB3aXRoIHRoaXMgcmVwb3J0PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-U2hvdyB0aGVtIHRoZSBzcGVjaWZpYyBlcnJvciBjb2RlcyBhbmQgcmVjb21tZW5kYXRpb25zPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-R2V0IGEgc2Vjb25kIG9waW5pb24gaWYgdGhlIHF1b3RlIHNlZW1zIHRvbyBoaWdoPC9saT4KICAgICAgICAgICAgICAgIDwvb2w-CiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIGNsYXNzPSJjdGEtYnV0dG9uIj5HZXQgQW5vdGhlciBEaWFnbm9zaXM8L2E-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaXNjbGFpbWVyIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqDvuI8gSW1wb3J0YW50IERpc2NsYWltZXI8L2gzPgogICAgICAgICAgICAgICAgPHA-PGVtPlRoaXMgYW5hbHlzaXMgaXMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIGFuZCBzaG91bGQgYmUgdXNlZCBhcyBhIHN0YXJ0aW5nIHBvaW50IGZvciBwcm9mZXNzaW9uYWwgcmVwYWlyLiBBbHdheXMgY29uc3VsdCB3aXRoIGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gYmVmb3JlIHBlcmZvcm1pbmcgYW55IHJlcGFpcnMuIERpYWdub3N0aWNQcm8gTVZQIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgYW55IGRhbWFnZXMgcmVzdWx0aW5nIGZyb20gdGhlIHVzZSBvZiB0aGlzIGluZm9ybWF0aW9uLjwvZW0-PC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPCEtLSBGb290ZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyIj4KICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zdGljUHJvIE1WUDwvc3Ryb25nPiAtIEV4cGVydCBFcXVpcG1lbnQgRGlhZ25vc2lzPC9wPgogICAgICAgICAgICA8cD5SZXBvcnQgZ2VuZXJhdGVkIG9uIDcvMzEvMjAyNSwgNDoyNjoxOSBBTTwvcD4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogMjBweCAwOyBwYWRkaW5nOiAxNXB4OyBiYWNrZ3JvdW5kOiAjZjhmYWZjOyBib3JkZXItcmFkaXVzOiA4cHg7Ij4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db250YWN0ICYgU3VwcG9ydDo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfk6cgRW1haWw6IDxhIGhyZWY9Im1haWx0bzpzdXBwb3J0QGRpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfjJAgV2Vic2l0ZTogPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5kaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLXRvcDogMTVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db25uZWN0IHdpdGggSmVyZW15Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPgogICAgICAgICAgICAgICAgICAgICAgICDwn5SXIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qZXJlbXlsb25nc2hvcmUiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-TGlua2VkSW48L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkKYgPGEgaHJlZj0iaHR0cHM6Ly94LmNvbS9Bc3BoYWx0Q293YjB5IiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPlR3aXR0ZXIvWDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-SvCA8YSBocmVmPSJtYWlsdG86amVyZW15QGludGVudHNvdWx0aW9ucy5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-RGlyZWN0IENvbnRhY3Q8L2E-CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY-CjwvYm9keT4KPC9odG1sPgogICAg"}',
    responseType: 'unknown',
    errorRedactor: [Function: defaultErrorRedactor],
    retryConfig: {
      currentRetryAttempt: 0,
      retry: 3,
      httpMethodsToRetry: [Array],
      noResponseRetries: 2,
      retryDelayMultiplier: 2,
      timeOfFirstRequest: 1753935980461,
      totalTimeout: 9007199254740991,
      maxRetryDelay: 9007199254740991,
      statusCodesToRetry: [Array]
    }
  },
  response: {
    config: {
      url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
      method: 'POST',
      apiVersion: '',
      userAgentDirectives: [Array],
      paramsSerializer: [Function (anonymous)],
      data: [Object],
      headers: [Object],
      params: {},
      validateStatus: [Function (anonymous)],
      retry: true,
      body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBBbm9ueW1vdXMgQ29uY2VybmVkIEh1c2JhbmQsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRnVlbCBwdW1wIG1ha2luZyB3ZWlyZCB3aGluaW5nIG5vaXNlcyB0aGF0IHNvdW5kIHN1c3BpY2lvdXNseSBsaWtlIGEgcmVhbCBlc3RhdGUgYWdlbnQgdHJ5aW5nIHRvIGNsb3NlIGEgZGVhbCBhdCA5IFBNLiBDYXIgc3RhcnRzIGZpbmUgYnV0IGFjdHMgbGlrZSBpdCBuZWVkcyBtb3JlIGNhZmZlaW5lIC0gc2x1Z2dpc2ggYWNjZWxlcmF0aW9uIGFuZCBvY2Nhc2lvbmFsIGhpY2N1cHMuIEZ1ZWwgZ2F1Z2UgZG9pbmcgaW50ZXJwcmV0aXZlIGRhbmNlIGJldHdlZW4gMS80IGFuZCAxLzIgdGFuay48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkVycm9yIENvZGVzOjwvc3Ryb25nPiBQMDIzMCwgUDAyMzEsIFAwMDg3LCBQMjI5MzwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpYWdub3NpcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiB1cmdlbmN5LW1lZGl1bSI-CiAgICAgICAgICAgICAgICA8aDM-8J-UjSBEaWFnbm9zdGljIEFuYWx5c2lzPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc2lzOjwvc3Ryb25nPiBCYXNlZCBvbiB0aGUgc3ltcHRvbXMgZGVzY3JpYmVkLCB0aGVyZSBpcyBhIDkyJSBwcm9iYWJpbGl0eSB0aGF0IHRoaXMgaXMgYSBtZWNoYW5pY2FsIGNvbXBvbmVudCBmYWlsdXJlIHJlcXVpcmluZyBkZXRhaWxlZCBpbnNwZWN0aW9uIHRvIHByZXZlbnQgZnVydGhlciBkYW1hZ2UuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5VcmdlbmN5IExldmVsOjwvc3Ryb25nPiBNRURJVU08L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBSZWNvbW1lbmRhdGlvbnMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfm6DvuI8gRXhwZXJ0IFJlY29tbWVuZGF0aW9uczwvaDM-CiAgICAgICAgICAgICAgICA8ZGl2PnVuZGVmaW5lZDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBOZXh0IFN0ZXBzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqEgTmV4dCBTdGVwczwvaDM-CiAgICAgICAgICAgICAgICA8b2w-CiAgICAgICAgICAgICAgICAgICAgPGxpPlJldmlldyB0aGUgZGlhZ25vc3RpYyBmaW5kaW5ncyBhYm92ZTwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkNvbnRhY3QgYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiB3aXRoIHRoaXMgcmVwb3J0PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-U2hvdyB0aGVtIHRoZSBzcGVjaWZpYyBlcnJvciBjb2RlcyBhbmQgcmVjb21tZW5kYXRpb25zPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-R2V0IGEgc2Vjb25kIG9waW5pb24gaWYgdGhlIHF1b3RlIHNlZW1zIHRvbyBoaWdoPC9saT4KICAgICAgICAgICAgICAgIDwvb2w-CiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIGNsYXNzPSJjdGEtYnV0dG9uIj5HZXQgQW5vdGhlciBEaWFnbm9zaXM8L2E-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaXNjbGFpbWVyIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqDvuI8gSW1wb3J0YW50IERpc2NsYWltZXI8L2gzPgogICAgICAgICAgICAgICAgPHA-PGVtPlRoaXMgYW5hbHlzaXMgaXMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIGFuZCBzaG91bGQgYmUgdXNlZCBhcyBhIHN0YXJ0aW5nIHBvaW50IGZvciBwcm9mZXNzaW9uYWwgcmVwYWlyLiBBbHdheXMgY29uc3VsdCB3aXRoIGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gYmVmb3JlIHBlcmZvcm1pbmcgYW55IHJlcGFpcnMuIERpYWdub3N0aWNQcm8gTVZQIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgYW55IGRhbWFnZXMgcmVzdWx0aW5nIGZyb20gdGhlIHVzZSBvZiB0aGlzIGluZm9ybWF0aW9uLjwvZW0-PC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPCEtLSBGb290ZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyIj4KICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zdGljUHJvIE1WUDwvc3Ryb25nPiAtIEV4cGVydCBFcXVpcG1lbnQgRGlhZ25vc2lzPC9wPgogICAgICAgICAgICA8cD5SZXBvcnQgZ2VuZXJhdGVkIG9uIDcvMzEvMjAyNSwgNDoyNjoxOSBBTTwvcD4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogMjBweCAwOyBwYWRkaW5nOiAxNXB4OyBiYWNrZ3JvdW5kOiAjZjhmYWZjOyBib3JkZXItcmFkaXVzOiA4cHg7Ij4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db250YWN0ICYgU3VwcG9ydDo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfk6cgRW1haWw6IDxhIGhyZWY9Im1haWx0bzpzdXBwb3J0QGRpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfjJAgV2Vic2l0ZTogPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5kaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLXRvcDogMTVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db25uZWN0IHdpdGggSmVyZW15Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPgogICAgICAgICAgICAgICAgICAgICAgICDwn5SXIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qZXJlbXlsb25nc2hvcmUiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-TGlua2VkSW48L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkKYgPGEgaHJlZj0iaHR0cHM6Ly94LmNvbS9Bc3BoYWx0Q293YjB5IiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPlR3aXR0ZXIvWDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-SvCA8YSBocmVmPSJtYWlsdG86amVyZW15QGludGVudHNvdWx0aW9ucy5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-RGlyZWN0IENvbnRhY3Q8L2E-CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY-CjwvYm9keT4KPC9odG1sPgogICAg"}',
      responseType: 'unknown',
      errorRedactor: [Function: defaultErrorRedactor]
    },
    data: { error: [Object] },
    headers: {
      'content-encoding': 'gzip',
      'content-type': 'application/json; charset=UTF-8',
      date: 'Thu, 31 Jul 2025 04:26:19 GMT',
      server: 'ESF',
      'transfer-encoding': 'chunked',
      vary: 'Origin, X-Origin, Referer',
      'x-content-type-options': 'nosniff',
      'x-frame-options': 'SAMEORIGIN',
      'x-xss-protection': '0'
    },
    status: 400,
    statusText: 'Bad Request',
    request: {
      responseURL: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send'
    }
  },
  error: undefined,
  status: 400,
  code: 400,
  errors: [
    {
      message: 'Precondition check failed.',
      domain: 'global',
      reason: 'failedPrecondition'
    }
  ],
  [Symbol(gaxios-gaxios-error)]: '6.7.1'
}
‚ùå Failed to send customer email: GaxiosError: Precondition check failed.
    at Gaxios._request (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/gaxios/build/src/gaxios.js:142:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async JWT.requestAsync (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/google-auth-library/build/src/auth/oauth2client.js:429:18)
    at async EmailService.sendDiagnosticReport (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/emailService.js:58:24)
    at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:61:13)
    at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
    at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
    at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
    at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
  config: {
    url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
    method: 'POST',
    apiVersion: '',
    userAgentDirectives: [ [Object] ],
    paramsSerializer: [Function (anonymous)],
    data: {
      raw: 'RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBBbm9ueW1vdXMgQ29uY2VybmVkIEh1c2JhbmQsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRnVlbCBwdW1wIG1ha2luZyB3ZWlyZCB3aGluaW5nIG5vaXNlcyB0aGF0IHNvdW5kIHN1c3BpY2lvdXNseSBsaWtlIGEgcmVhbCBlc3RhdGUgYWdlbnQgdHJ5aW5nIHRvIGNsb3NlIGEgZGVhbCBhdCA5IFBNLiBDYXIgc3RhcnRzIGZpbmUgYnV0IGFjdHMgbGlrZSBpdCBuZWVkcyBtb3JlIGNhZmZlaW5lIC0gc2x1Z2dpc2ggYWNjZWxlcmF0aW9uIGFuZCBvY2Nhc2lvbmFsIGhpY2N1cHMuIEZ1ZWwgZ2F1Z2UgZG9pbmcgaW50ZXJwcmV0aXZlIGRhbmNlIGJldHdlZW4gMS80IGFuZCAxLzIgdGFuay48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkVycm9yIENvZGVzOjwvc3Ryb25nPiBQMDIzMCwgUDAyMzEsIFAwMDg3LCBQMjI5MzwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpYWdub3NpcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiB1cmdlbmN5LW1lZGl1bSI-CiAgICAgICAgICAgICAgICA8aDM-8J-UjSBEaWFnbm9zdGljIEFuYWx5c2lzPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc2lzOjwvc3Ryb25nPiBCYXNlZCBvbiB0aGUgc3ltcHRvbXMgZGVzY3JpYmVkLCB0aGVyZSBpcyBhIDkyJSBwcm9iYWJpbGl0eSB0aGF0IHRoaXMgaXMgYSBtZWNoYW5pY2FsIGNvbXBvbmVudCBmYWlsdXJlIHJlcXVpcmluZyBkZXRhaWxlZCBpbnNwZWN0aW9uIHRvIHByZXZlbnQgZnVydGhlciBkYW1hZ2UuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5VcmdlbmN5IExldmVsOjwvc3Ryb25nPiBNRURJVU08L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBSZWNvbW1lbmRhdGlvbnMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfm6DvuI8gRXhwZXJ0IFJlY29tbWVuZGF0aW9uczwvaDM-CiAgICAgICAgICAgICAgICA8ZGl2PnVuZGVmaW5lZDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBOZXh0IFN0ZXBzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqEgTmV4dCBTdGVwczwvaDM-CiAgICAgICAgICAgICAgICA8b2w-CiAgICAgICAgICAgICAgICAgICAgPGxpPlJldmlldyB0aGUgZGlhZ25vc3RpYyBmaW5kaW5ncyBhYm92ZTwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkNvbnRhY3QgYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiB3aXRoIHRoaXMgcmVwb3J0PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-U2hvdyB0aGVtIHRoZSBzcGVjaWZpYyBlcnJvciBjb2RlcyBhbmQgcmVjb21tZW5kYXRpb25zPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-R2V0IGEgc2Vjb25kIG9waW5pb24gaWYgdGhlIHF1b3RlIHNlZW1zIHRvbyBoaWdoPC9saT4KICAgICAgICAgICAgICAgIDwvb2w-CiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIGNsYXNzPSJjdGEtYnV0dG9uIj5HZXQgQW5vdGhlciBEaWFnbm9zaXM8L2E-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaXNjbGFpbWVyIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqDvuI8gSW1wb3J0YW50IERpc2NsYWltZXI8L2gzPgogICAgICAgICAgICAgICAgPHA-PGVtPlRoaXMgYW5hbHlzaXMgaXMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIGFuZCBzaG91bGQgYmUgdXNlZCBhcyBhIHN0YXJ0aW5nIHBvaW50IGZvciBwcm9mZXNzaW9uYWwgcmVwYWlyLiBBbHdheXMgY29uc3VsdCB3aXRoIGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gYmVmb3JlIHBlcmZvcm1pbmcgYW55IHJlcGFpcnMuIERpYWdub3N0aWNQcm8gTVZQIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgYW55IGRhbWFnZXMgcmVzdWx0aW5nIGZyb20gdGhlIHVzZSBvZiB0aGlzIGluZm9ybWF0aW9uLjwvZW0-PC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPCEtLSBGb290ZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyIj4KICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zdGljUHJvIE1WUDwvc3Ryb25nPiAtIEV4cGVydCBFcXVpcG1lbnQgRGlhZ25vc2lzPC9wPgogICAgICAgICAgICA8cD5SZXBvcnQgZ2VuZXJhdGVkIG9uIDcvMzEvMjAyNSwgNDoyNjoxOSBBTTwvcD4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogMjBweCAwOyBwYWRkaW5nOiAxNXB4OyBiYWNrZ3JvdW5kOiAjZjhmYWZjOyBib3JkZXItcmFkaXVzOiA4cHg7Ij4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db250YWN0ICYgU3VwcG9ydDo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfk6cgRW1haWw6IDxhIGhyZWY9Im1haWx0bzpzdXBwb3J0QGRpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfjJAgV2Vic2l0ZTogPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5kaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLXRvcDogMTVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db25uZWN0IHdpdGggSmVyZW15Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPgogICAgICAgICAgICAgICAgICAgICAgICDwn5SXIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qZXJlbXlsb25nc2hvcmUiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-TGlua2VkSW48L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkKYgPGEgaHJlZj0iaHR0cHM6Ly94LmNvbS9Bc3BoYWx0Q293YjB5IiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPlR3aXR0ZXIvWDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-SvCA8YSBocmVmPSJtYWlsdG86amVyZW15QGludGVudHNvdWx0aW9ucy5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-RGlyZWN0IENvbnRhY3Q8L2E-CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY-CjwvYm9keT4KPC9odG1sPgogICAg'
    },
    headers: {
      'x-goog-api-client': 'gdcl/7.2.0 gl-node/20.19.4',
      'Accept-Encoding': 'gzip',
      'User-Agent': 'google-api-nodejs-client/7.2.0 (gzip)',
      Authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
      'Content-Type': 'application/json'
    },
    params: {},
    validateStatus: [Function (anonymous)],
    retry: true,
    body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBBbm9ueW1vdXMgQ29uY2VybmVkIEh1c2JhbmQsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRnVlbCBwdW1wIG1ha2luZyB3ZWlyZCB3aGluaW5nIG5vaXNlcyB0aGF0IHNvdW5kIHN1c3BpY2lvdXNseSBsaWtlIGEgcmVhbCBlc3RhdGUgYWdlbnQgdHJ5aW5nIHRvIGNsb3NlIGEgZGVhbCBhdCA5IFBNLiBDYXIgc3RhcnRzIGZpbmUgYnV0IGFjdHMgbGlrZSBpdCBuZWVkcyBtb3JlIGNhZmZlaW5lIC0gc2x1Z2dpc2ggYWNjZWxlcmF0aW9uIGFuZCBvY2Nhc2lvbmFsIGhpY2N1cHMuIEZ1ZWwgZ2F1Z2UgZG9pbmcgaW50ZXJwcmV0aXZlIGRhbmNlIGJldHdlZW4gMS80IGFuZCAxLzIgdGFuay48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkVycm9yIENvZGVzOjwvc3Ryb25nPiBQMDIzMCwgUDAyMzEsIFAwMDg3LCBQMjI5MzwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpYWdub3NpcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiB1cmdlbmN5LW1lZGl1bSI-CiAgICAgICAgICAgICAgICA8aDM-8J-UjSBEaWFnbm9zdGljIEFuYWx5c2lzPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc2lzOjwvc3Ryb25nPiBCYXNlZCBvbiB0aGUgc3ltcHRvbXMgZGVzY3JpYmVkLCB0aGVyZSBpcyBhIDkyJSBwcm9iYWJpbGl0eSB0aGF0IHRoaXMgaXMgYSBtZWNoYW5pY2FsIGNvbXBvbmVudCBmYWlsdXJlIHJlcXVpcmluZyBkZXRhaWxlZCBpbnNwZWN0aW9uIHRvIHByZXZlbnQgZnVydGhlciBkYW1hZ2UuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5VcmdlbmN5IExldmVsOjwvc3Ryb25nPiBNRURJVU08L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBSZWNvbW1lbmRhdGlvbnMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfm6DvuI8gRXhwZXJ0IFJlY29tbWVuZGF0aW9uczwvaDM-CiAgICAgICAgICAgICAgICA8ZGl2PnVuZGVmaW5lZDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBOZXh0IFN0ZXBzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqEgTmV4dCBTdGVwczwvaDM-CiAgICAgICAgICAgICAgICA8b2w-CiAgICAgICAgICAgICAgICAgICAgPGxpPlJldmlldyB0aGUgZGlhZ25vc3RpYyBmaW5kaW5ncyBhYm92ZTwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkNvbnRhY3QgYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiB3aXRoIHRoaXMgcmVwb3J0PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-U2hvdyB0aGVtIHRoZSBzcGVjaWZpYyBlcnJvciBjb2RlcyBhbmQgcmVjb21tZW5kYXRpb25zPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-R2V0IGEgc2Vjb25kIG9waW5pb24gaWYgdGhlIHF1b3RlIHNlZW1zIHRvbyBoaWdoPC9saT4KICAgICAgICAgICAgICAgIDwvb2w-CiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIGNsYXNzPSJjdGEtYnV0dG9uIj5HZXQgQW5vdGhlciBEaWFnbm9zaXM8L2E-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaXNjbGFpbWVyIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqDvuI8gSW1wb3J0YW50IERpc2NsYWltZXI8L2gzPgogICAgICAgICAgICAgICAgPHA-PGVtPlRoaXMgYW5hbHlzaXMgaXMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIGFuZCBzaG91bGQgYmUgdXNlZCBhcyBhIHN0YXJ0aW5nIHBvaW50IGZvciBwcm9mZXNzaW9uYWwgcmVwYWlyLiBBbHdheXMgY29uc3VsdCB3aXRoIGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gYmVmb3JlIHBlcmZvcm1pbmcgYW55IHJlcGFpcnMuIERpYWdub3N0aWNQcm8gTVZQIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgYW55IGRhbWFnZXMgcmVzdWx0aW5nIGZyb20gdGhlIHVzZSBvZiB0aGlzIGluZm9ybWF0aW9uLjwvZW0-PC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPCEtLSBGb290ZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyIj4KICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zdGljUHJvIE1WUDwvc3Ryb25nPiAtIEV4cGVydCBFcXVpcG1lbnQgRGlhZ25vc2lzPC9wPgogICAgICAgICAgICA8cD5SZXBvcnQgZ2VuZXJhdGVkIG9uIDcvMzEvMjAyNSwgNDoyNjoxOSBBTTwvcD4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogMjBweCAwOyBwYWRkaW5nOiAxNXB4OyBiYWNrZ3JvdW5kOiAjZjhmYWZjOyBib3JkZXItcmFkaXVzOiA4cHg7Ij4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db250YWN0ICYgU3VwcG9ydDo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfk6cgRW1haWw6IDxhIGhyZWY9Im1haWx0bzpzdXBwb3J0QGRpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfjJAgV2Vic2l0ZTogPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5kaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLXRvcDogMTVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db25uZWN0IHdpdGggSmVyZW15Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPgogICAgICAgICAgICAgICAgICAgICAgICDwn5SXIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qZXJlbXlsb25nc2hvcmUiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-TGlua2VkSW48L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkKYgPGEgaHJlZj0iaHR0cHM6Ly94LmNvbS9Bc3BoYWx0Q293YjB5IiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPlR3aXR0ZXIvWDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-SvCA8YSBocmVmPSJtYWlsdG86amVyZW15QGludGVudHNvdWx0aW9ucy5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-RGlyZWN0IENvbnRhY3Q8L2E-CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY-CjwvYm9keT4KPC9odG1sPgogICAg"}',
    responseType: 'unknown',
    errorRedactor: [Function: defaultErrorRedactor],
    retryConfig: {
      currentRetryAttempt: 0,
      retry: 3,
      httpMethodsToRetry: [Array],
      noResponseRetries: 2,
      retryDelayMultiplier: 2,
      timeOfFirstRequest: 1753935980461,
      totalTimeout: 9007199254740991,
      maxRetryDelay: 9007199254740991,
      statusCodesToRetry: [Array]
    }
  },
  response: {
    config: {
      url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
      method: 'POST',
      apiVersion: '',
      userAgentDirectives: [Array],
      paramsSerializer: [Function (anonymous)],
      data: [Object],
      headers: [Object],
      params: {},
      validateStatus: [Function (anonymous)],
      retry: true,
      body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBBbm9ueW1vdXMgQ29uY2VybmVkIEh1c2JhbmQsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRnVlbCBwdW1wIG1ha2luZyB3ZWlyZCB3aGluaW5nIG5vaXNlcyB0aGF0IHNvdW5kIHN1c3BpY2lvdXNseSBsaWtlIGEgcmVhbCBlc3RhdGUgYWdlbnQgdHJ5aW5nIHRvIGNsb3NlIGEgZGVhbCBhdCA5IFBNLiBDYXIgc3RhcnRzIGZpbmUgYnV0IGFjdHMgbGlrZSBpdCBuZWVkcyBtb3JlIGNhZmZlaW5lIC0gc2x1Z2dpc2ggYWNjZWxlcmF0aW9uIGFuZCBvY2Nhc2lvbmFsIGhpY2N1cHMuIEZ1ZWwgZ2F1Z2UgZG9pbmcgaW50ZXJwcmV0aXZlIGRhbmNlIGJldHdlZW4gMS80IGFuZCAxLzIgdGFuay48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkVycm9yIENvZGVzOjwvc3Ryb25nPiBQMDIzMCwgUDAyMzEsIFAwMDg3LCBQMjI5MzwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpYWdub3NpcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiB1cmdlbmN5LW1lZGl1bSI-CiAgICAgICAgICAgICAgICA8aDM-8J-UjSBEaWFnbm9zdGljIEFuYWx5c2lzPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc2lzOjwvc3Ryb25nPiBCYXNlZCBvbiB0aGUgc3ltcHRvbXMgZGVzY3JpYmVkLCB0aGVyZSBpcyBhIDkyJSBwcm9iYWJpbGl0eSB0aGF0IHRoaXMgaXMgYSBtZWNoYW5pY2FsIGNvbXBvbmVudCBmYWlsdXJlIHJlcXVpcmluZyBkZXRhaWxlZCBpbnNwZWN0aW9uIHRvIHByZXZlbnQgZnVydGhlciBkYW1hZ2UuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5VcmdlbmN5IExldmVsOjwvc3Ryb25nPiBNRURJVU08L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBSZWNvbW1lbmRhdGlvbnMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfm6DvuI8gRXhwZXJ0IFJlY29tbWVuZGF0aW9uczwvaDM-CiAgICAgICAgICAgICAgICA8ZGl2PnVuZGVmaW5lZDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBOZXh0IFN0ZXBzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqEgTmV4dCBTdGVwczwvaDM-CiAgICAgICAgICAgICAgICA8b2w-CiAgICAgICAgICAgICAgICAgICAgPGxpPlJldmlldyB0aGUgZGlhZ25vc3RpYyBmaW5kaW5ncyBhYm92ZTwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkNvbnRhY3QgYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiB3aXRoIHRoaXMgcmVwb3J0PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-U2hvdyB0aGVtIHRoZSBzcGVjaWZpYyBlcnJvciBjb2RlcyBhbmQgcmVjb21tZW5kYXRpb25zPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-R2V0IGEgc2Vjb25kIG9waW5pb24gaWYgdGhlIHF1b3RlIHNlZW1zIHRvbyBoaWdoPC9saT4KICAgICAgICAgICAgICAgIDwvb2w-CiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIGNsYXNzPSJjdGEtYnV0dG9uIj5HZXQgQW5vdGhlciBEaWFnbm9zaXM8L2E-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaXNjbGFpbWVyIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqDvuI8gSW1wb3J0YW50IERpc2NsYWltZXI8L2gzPgogICAgICAgICAgICAgICAgPHA-PGVtPlRoaXMgYW5hbHlzaXMgaXMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIGFuZCBzaG91bGQgYmUgdXNlZCBhcyBhIHN0YXJ0aW5nIHBvaW50IGZvciBwcm9mZXNzaW9uYWwgcmVwYWlyLiBBbHdheXMgY29uc3VsdCB3aXRoIGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gYmVmb3JlIHBlcmZvcm1pbmcgYW55IHJlcGFpcnMuIERpYWdub3N0aWNQcm8gTVZQIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgYW55IGRhbWFnZXMgcmVzdWx0aW5nIGZyb20gdGhlIHVzZSBvZiB0aGlzIGluZm9ybWF0aW9uLjwvZW0-PC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPCEtLSBGb290ZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyIj4KICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zdGljUHJvIE1WUDwvc3Ryb25nPiAtIEV4cGVydCBFcXVpcG1lbnQgRGlhZ25vc2lzPC9wPgogICAgICAgICAgICA8cD5SZXBvcnQgZ2VuZXJhdGVkIG9uIDcvMzEvMjAyNSwgNDoyNjoxOSBBTTwvcD4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogMjBweCAwOyBwYWRkaW5nOiAxNXB4OyBiYWNrZ3JvdW5kOiAjZjhmYWZjOyBib3JkZXItcmFkaXVzOiA4cHg7Ij4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db250YWN0ICYgU3VwcG9ydDo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfk6cgRW1haWw6IDxhIGhyZWY9Im1haWx0bzpzdXBwb3J0QGRpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfjJAgV2Vic2l0ZTogPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5kaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLXRvcDogMTVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db25uZWN0IHdpdGggSmVyZW15Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPgogICAgICAgICAgICAgICAgICAgICAgICDwn5SXIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qZXJlbXlsb25nc2hvcmUiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-TGlua2VkSW48L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkKYgPGEgaHJlZj0iaHR0cHM6Ly94LmNvbS9Bc3BoYWx0Q293YjB5IiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPlR3aXR0ZXIvWDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-SvCA8YSBocmVmPSJtYWlsdG86amVyZW15QGludGVudHNvdWx0aW9ucy5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-RGlyZWN0IENvbnRhY3Q8L2E-CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY-CjwvYm9keT4KPC9odG1sPgogICAg"}',
      responseType: 'unknown',
      errorRedactor: [Function: defaultErrorRedactor]
    },
    data: { error: [Object] },
    headers: {
      'content-encoding': 'gzip',
      'content-type': 'application/json; charset=UTF-8',
      date: 'Thu, 31 Jul 2025 04:26:19 GMT',
      server: 'ESF',
      'transfer-encoding': 'chunked',
      vary: 'Origin, X-Origin, Referer',
      'x-content-type-options': 'nosniff',
      'x-frame-options': 'SAMEORIGIN',
      'x-xss-protection': '0'
    },
    status: 400,
    statusText: 'Bad Request',
    request: {
      responseURL: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send'
    }
  },
  error: undefined,
  status: 400,
  code: 400,
  errors: [
    {
      message: 'Precondition check failed.',
      domain: 'global',
      reason: 'failedPrecondition'
    }
  ],
  [Symbol(gaxios-gaxios-error)]: '6.7.1'
}
üìù New diagnostic form submission received
üîç Processing verification request for Anonymous Concerned Husband
üìß Skipping admin notification to prioritize AI analysis
üîç Starting AI diagnostic analysis...
üöÄ Attempting Vertex AI Gemini analysis...
‚ö†Ô∏è Gemini failed, details: [VertexAI.ClientError]: got status: 404 Not Found. {"error":{"code":404,"message":"Publisher Model `projects/diagnostic-pro-mvp/locations/us-central1/publishers/google/models/gemini-1.5-pro` was not found or your project does not have access to it. Please ensure you are using a valid model version. For more information, see: https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versions","status":"NOT_FOUND"}}
üîÑ Using mock diagnostic response as fallback
‚úÖ Mock analysis completed - system operational
‚úÖ AI diagnostic analysis completed using DiagnosticPro Mock AI (Fallback)
üéØ Full diagnostic analysis completed
‚ùå Failed to send diagnostic report: GaxiosError: Precondition check failed.
    at Gaxios._request (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/gaxios/build/src/gaxios.js:142:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async JWT.requestAsync (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/google-auth-library/build/src/auth/oauth2client.js:429:18)
    at async EmailService.sendDiagnosticReport (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/emailService.js:58:24)
    at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:61:13)
    at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
    at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
    at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
    at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
  config: {
    url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
    method: 'POST',
    apiVersion: '',
    userAgentDirectives: [ [Object] ],
    paramsSerializer: [Function (anonymous)],
    data: {
      raw: 'RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBBbm9ueW1vdXMgQ29uY2VybmVkIEh1c2JhbmQsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRnVlbCBwdW1wIG1ha2luZyB3ZWlyZCB3aGluaW5nIG5vaXNlcyB0aGF0IHNvdW5kIHN1c3BpY2lvdXNseSBsaWtlIGEgcmVhbCBlc3RhdGUgYWdlbnQgdHJ5aW5nIHRvIGNsb3NlIGEgZGVhbCBhdCA5IFBNLiBDYXIgc3RhcnRzIGZpbmUgYnV0IGFjdHMgbGlrZSBpdCBuZWVkcyBtb3JlIGNhZmZlaW5lIC0gc2x1Z2dpc2ggYWNjZWxlcmF0aW9uIGFuZCBvY2Nhc2lvbmFsIGhpY2N1cHMuIEZ1ZWwgZ2F1Z2UgZG9pbmcgaW50ZXJwcmV0aXZlIGRhbmNlIGJldHdlZW4gMS80IGFuZCAxLzIgdGFuay48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkVycm9yIENvZGVzOjwvc3Ryb25nPiBQMDIzMCwgUDAyMzEsIFAwMDg3LCBQMjI5MzwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpYWdub3NpcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiB1cmdlbmN5LW1lZGl1bSI-CiAgICAgICAgICAgICAgICA8aDM-8J-UjSBEaWFnbm9zdGljIEFuYWx5c2lzPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc2lzOjwvc3Ryb25nPiBCYXNlZCBvbiB0aGUgc3ltcHRvbXMgZGVzY3JpYmVkLCB0aGVyZSBpcyBhIDkzJSBwcm9iYWJpbGl0eSB0aGF0IHRoaXMgaXMgYSBtZWNoYW5pY2FsIGNvbXBvbmVudCBmYWlsdXJlIHJlcXVpcmluZyBkZXRhaWxlZCBpbnNwZWN0aW9uIHRvIHByZXZlbnQgZnVydGhlciBkYW1hZ2UuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5VcmdlbmN5IExldmVsOjwvc3Ryb25nPiBNRURJVU08L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBSZWNvbW1lbmRhdGlvbnMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfm6DvuI8gRXhwZXJ0IFJlY29tbWVuZGF0aW9uczwvaDM-CiAgICAgICAgICAgICAgICA8ZGl2PnVuZGVmaW5lZDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBOZXh0IFN0ZXBzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqEgTmV4dCBTdGVwczwvaDM-CiAgICAgICAgICAgICAgICA8b2w-CiAgICAgICAgICAgICAgICAgICAgPGxpPlJldmlldyB0aGUgZGlhZ25vc3RpYyBmaW5kaW5ncyBhYm92ZTwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkNvbnRhY3QgYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiB3aXRoIHRoaXMgcmVwb3J0PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-U2hvdyB0aGVtIHRoZSBzcGVjaWZpYyBlcnJvciBjb2RlcyBhbmQgcmVjb21tZW5kYXRpb25zPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-R2V0IGEgc2Vjb25kIG9waW5pb24gaWYgdGhlIHF1b3RlIHNlZW1zIHRvbyBoaWdoPC9saT4KICAgICAgICAgICAgICAgIDwvb2w-CiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIGNsYXNzPSJjdGEtYnV0dG9uIj5HZXQgQW5vdGhlciBEaWFnbm9zaXM8L2E-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaXNjbGFpbWVyIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqDvuI8gSW1wb3J0YW50IERpc2NsYWltZXI8L2gzPgogICAgICAgICAgICAgICAgPHA-PGVtPlRoaXMgYW5hbHlzaXMgaXMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIGFuZCBzaG91bGQgYmUgdXNlZCBhcyBhIHN0YXJ0aW5nIHBvaW50IGZvciBwcm9mZXNzaW9uYWwgcmVwYWlyLiBBbHdheXMgY29uc3VsdCB3aXRoIGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gYmVmb3JlIHBlcmZvcm1pbmcgYW55IHJlcGFpcnMuIERpYWdub3N0aWNQcm8gTVZQIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgYW55IGRhbWFnZXMgcmVzdWx0aW5nIGZyb20gdGhlIHVzZSBvZiB0aGlzIGluZm9ybWF0aW9uLjwvZW0-PC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPCEtLSBGb290ZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyIj4KICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zdGljUHJvIE1WUDwvc3Ryb25nPiAtIEV4cGVydCBFcXVpcG1lbnQgRGlhZ25vc2lzPC9wPgogICAgICAgICAgICA8cD5SZXBvcnQgZ2VuZXJhdGVkIG9uIDcvMzEvMjAyNSwgNDoyNjoyMSBBTTwvcD4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogMjBweCAwOyBwYWRkaW5nOiAxNXB4OyBiYWNrZ3JvdW5kOiAjZjhmYWZjOyBib3JkZXItcmFkaXVzOiA4cHg7Ij4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db250YWN0ICYgU3VwcG9ydDo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfk6cgRW1haWw6IDxhIGhyZWY9Im1haWx0bzpzdXBwb3J0QGRpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfjJAgV2Vic2l0ZTogPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5kaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLXRvcDogMTVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db25uZWN0IHdpdGggSmVyZW15Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPgogICAgICAgICAgICAgICAgICAgICAgICDwn5SXIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qZXJlbXlsb25nc2hvcmUiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-TGlua2VkSW48L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkKYgPGEgaHJlZj0iaHR0cHM6Ly94LmNvbS9Bc3BoYWx0Q293YjB5IiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPlR3aXR0ZXIvWDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-SvCA8YSBocmVmPSJtYWlsdG86amVyZW15QGludGVudHNvdWx0aW9ucy5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-RGlyZWN0IENvbnRhY3Q8L2E-CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY-CjwvYm9keT4KPC9odG1sPgogICAg'
    },
    headers: {
      'x-goog-api-client': 'gdcl/7.2.0 gl-node/20.19.4',
      'Accept-Encoding': 'gzip',
      'User-Agent': 'google-api-nodejs-client/7.2.0 (gzip)',
      Authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
      'Content-Type': 'application/json'
    },
    params: {},
    validateStatus: [Function (anonymous)],
    retry: true,
    body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBBbm9ueW1vdXMgQ29uY2VybmVkIEh1c2JhbmQsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRnVlbCBwdW1wIG1ha2luZyB3ZWlyZCB3aGluaW5nIG5vaXNlcyB0aGF0IHNvdW5kIHN1c3BpY2lvdXNseSBsaWtlIGEgcmVhbCBlc3RhdGUgYWdlbnQgdHJ5aW5nIHRvIGNsb3NlIGEgZGVhbCBhdCA5IFBNLiBDYXIgc3RhcnRzIGZpbmUgYnV0IGFjdHMgbGlrZSBpdCBuZWVkcyBtb3JlIGNhZmZlaW5lIC0gc2x1Z2dpc2ggYWNjZWxlcmF0aW9uIGFuZCBvY2Nhc2lvbmFsIGhpY2N1cHMuIEZ1ZWwgZ2F1Z2UgZG9pbmcgaW50ZXJwcmV0aXZlIGRhbmNlIGJldHdlZW4gMS80IGFuZCAxLzIgdGFuay48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkVycm9yIENvZGVzOjwvc3Ryb25nPiBQMDIzMCwgUDAyMzEsIFAwMDg3LCBQMjI5MzwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpYWdub3NpcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiB1cmdlbmN5LW1lZGl1bSI-CiAgICAgICAgICAgICAgICA8aDM-8J-UjSBEaWFnbm9zdGljIEFuYWx5c2lzPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc2lzOjwvc3Ryb25nPiBCYXNlZCBvbiB0aGUgc3ltcHRvbXMgZGVzY3JpYmVkLCB0aGVyZSBpcyBhIDkzJSBwcm9iYWJpbGl0eSB0aGF0IHRoaXMgaXMgYSBtZWNoYW5pY2FsIGNvbXBvbmVudCBmYWlsdXJlIHJlcXVpcmluZyBkZXRhaWxlZCBpbnNwZWN0aW9uIHRvIHByZXZlbnQgZnVydGhlciBkYW1hZ2UuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5VcmdlbmN5IExldmVsOjwvc3Ryb25nPiBNRURJVU08L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBSZWNvbW1lbmRhdGlvbnMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfm6DvuI8gRXhwZXJ0IFJlY29tbWVuZGF0aW9uczwvaDM-CiAgICAgICAgICAgICAgICA8ZGl2PnVuZGVmaW5lZDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBOZXh0IFN0ZXBzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqEgTmV4dCBTdGVwczwvaDM-CiAgICAgICAgICAgICAgICA8b2w-CiAgICAgICAgICAgICAgICAgICAgPGxpPlJldmlldyB0aGUgZGlhZ25vc3RpYyBmaW5kaW5ncyBhYm92ZTwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkNvbnRhY3QgYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiB3aXRoIHRoaXMgcmVwb3J0PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-U2hvdyB0aGVtIHRoZSBzcGVjaWZpYyBlcnJvciBjb2RlcyBhbmQgcmVjb21tZW5kYXRpb25zPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-R2V0IGEgc2Vjb25kIG9waW5pb24gaWYgdGhlIHF1b3RlIHNlZW1zIHRvbyBoaWdoPC9saT4KICAgICAgICAgICAgICAgIDwvb2w-CiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIGNsYXNzPSJjdGEtYnV0dG9uIj5HZXQgQW5vdGhlciBEaWFnbm9zaXM8L2E-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaXNjbGFpbWVyIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqDvuI8gSW1wb3J0YW50IERpc2NsYWltZXI8L2gzPgogICAgICAgICAgICAgICAgPHA-PGVtPlRoaXMgYW5hbHlzaXMgaXMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIGFuZCBzaG91bGQgYmUgdXNlZCBhcyBhIHN0YXJ0aW5nIHBvaW50IGZvciBwcm9mZXNzaW9uYWwgcmVwYWlyLiBBbHdheXMgY29uc3VsdCB3aXRoIGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gYmVmb3JlIHBlcmZvcm1pbmcgYW55IHJlcGFpcnMuIERpYWdub3N0aWNQcm8gTVZQIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgYW55IGRhbWFnZXMgcmVzdWx0aW5nIGZyb20gdGhlIHVzZSBvZiB0aGlzIGluZm9ybWF0aW9uLjwvZW0-PC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPCEtLSBGb290ZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyIj4KICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zdGljUHJvIE1WUDwvc3Ryb25nPiAtIEV4cGVydCBFcXVpcG1lbnQgRGlhZ25vc2lzPC9wPgogICAgICAgICAgICA8cD5SZXBvcnQgZ2VuZXJhdGVkIG9uIDcvMzEvMjAyNSwgNDoyNjoyMSBBTTwvcD4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogMjBweCAwOyBwYWRkaW5nOiAxNXB4OyBiYWNrZ3JvdW5kOiAjZjhmYWZjOyBib3JkZXItcmFkaXVzOiA4cHg7Ij4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db250YWN0ICYgU3VwcG9ydDo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfk6cgRW1haWw6IDxhIGhyZWY9Im1haWx0bzpzdXBwb3J0QGRpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfjJAgV2Vic2l0ZTogPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5kaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLXRvcDogMTVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db25uZWN0IHdpdGggSmVyZW15Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPgogICAgICAgICAgICAgICAgICAgICAgICDwn5SXIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qZXJlbXlsb25nc2hvcmUiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-TGlua2VkSW48L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkKYgPGEgaHJlZj0iaHR0cHM6Ly94LmNvbS9Bc3BoYWx0Q293YjB5IiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPlR3aXR0ZXIvWDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-SvCA8YSBocmVmPSJtYWlsdG86amVyZW15QGludGVudHNvdWx0aW9ucy5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-RGlyZWN0IENvbnRhY3Q8L2E-CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY-CjwvYm9keT4KPC9odG1sPgogICAg"}',
    responseType: 'unknown',
    errorRedactor: [Function: defaultErrorRedactor],
    retryConfig: {
      currentRetryAttempt: 0,
      retry: 3,
      httpMethodsToRetry: [Array],
      noResponseRetries: 2,
      retryDelayMultiplier: 2,
      timeOfFirstRequest: 1753935982969,
      totalTimeout: 9007199254740991,
      maxRetryDelay: 9007199254740991,
      statusCodesToRetry: [Array]
    }
  },
  response: {
    config: {
      url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
      method: 'POST',
      apiVersion: '',
      userAgentDirectives: [Array],
      paramsSerializer: [Function (anonymous)],
      data: [Object],
      headers: [Object],
      params: {},
      validateStatus: [Function (anonymous)],
      retry: true,
      body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBBbm9ueW1vdXMgQ29uY2VybmVkIEh1c2JhbmQsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRnVlbCBwdW1wIG1ha2luZyB3ZWlyZCB3aGluaW5nIG5vaXNlcyB0aGF0IHNvdW5kIHN1c3BpY2lvdXNseSBsaWtlIGEgcmVhbCBlc3RhdGUgYWdlbnQgdHJ5aW5nIHRvIGNsb3NlIGEgZGVhbCBhdCA5IFBNLiBDYXIgc3RhcnRzIGZpbmUgYnV0IGFjdHMgbGlrZSBpdCBuZWVkcyBtb3JlIGNhZmZlaW5lIC0gc2x1Z2dpc2ggYWNjZWxlcmF0aW9uIGFuZCBvY2Nhc2lvbmFsIGhpY2N1cHMuIEZ1ZWwgZ2F1Z2UgZG9pbmcgaW50ZXJwcmV0aXZlIGRhbmNlIGJldHdlZW4gMS80IGFuZCAxLzIgdGFuay48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkVycm9yIENvZGVzOjwvc3Ryb25nPiBQMDIzMCwgUDAyMzEsIFAwMDg3LCBQMjI5MzwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpYWdub3NpcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiB1cmdlbmN5LW1lZGl1bSI-CiAgICAgICAgICAgICAgICA8aDM-8J-UjSBEaWFnbm9zdGljIEFuYWx5c2lzPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc2lzOjwvc3Ryb25nPiBCYXNlZCBvbiB0aGUgc3ltcHRvbXMgZGVzY3JpYmVkLCB0aGVyZSBpcyBhIDkzJSBwcm9iYWJpbGl0eSB0aGF0IHRoaXMgaXMgYSBtZWNoYW5pY2FsIGNvbXBvbmVudCBmYWlsdXJlIHJlcXVpcmluZyBkZXRhaWxlZCBpbnNwZWN0aW9uIHRvIHByZXZlbnQgZnVydGhlciBkYW1hZ2UuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5VcmdlbmN5IExldmVsOjwvc3Ryb25nPiBNRURJVU08L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBSZWNvbW1lbmRhdGlvbnMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfm6DvuI8gRXhwZXJ0IFJlY29tbWVuZGF0aW9uczwvaDM-CiAgICAgICAgICAgICAgICA8ZGl2PnVuZGVmaW5lZDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBOZXh0IFN0ZXBzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqEgTmV4dCBTdGVwczwvaDM-CiAgICAgICAgICAgICAgICA8b2w-CiAgICAgICAgICAgICAgICAgICAgPGxpPlJldmlldyB0aGUgZGlhZ25vc3RpYyBmaW5kaW5ncyBhYm92ZTwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkNvbnRhY3QgYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiB3aXRoIHRoaXMgcmVwb3J0PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-U2hvdyB0aGVtIHRoZSBzcGVjaWZpYyBlcnJvciBjb2RlcyBhbmQgcmVjb21tZW5kYXRpb25zPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-R2V0IGEgc2Vjb25kIG9waW5pb24gaWYgdGhlIHF1b3RlIHNlZW1zIHRvbyBoaWdoPC9saT4KICAgICAgICAgICAgICAgIDwvb2w-CiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIGNsYXNzPSJjdGEtYnV0dG9uIj5HZXQgQW5vdGhlciBEaWFnbm9zaXM8L2E-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaXNjbGFpbWVyIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqDvuI8gSW1wb3J0YW50IERpc2NsYWltZXI8L2gzPgogICAgICAgICAgICAgICAgPHA-PGVtPlRoaXMgYW5hbHlzaXMgaXMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIGFuZCBzaG91bGQgYmUgdXNlZCBhcyBhIHN0YXJ0aW5nIHBvaW50IGZvciBwcm9mZXNzaW9uYWwgcmVwYWlyLiBBbHdheXMgY29uc3VsdCB3aXRoIGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gYmVmb3JlIHBlcmZvcm1pbmcgYW55IHJlcGFpcnMuIERpYWdub3N0aWNQcm8gTVZQIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgYW55IGRhbWFnZXMgcmVzdWx0aW5nIGZyb20gdGhlIHVzZSBvZiB0aGlzIGluZm9ybWF0aW9uLjwvZW0-PC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPCEtLSBGb290ZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyIj4KICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zdGljUHJvIE1WUDwvc3Ryb25nPiAtIEV4cGVydCBFcXVpcG1lbnQgRGlhZ25vc2lzPC9wPgogICAgICAgICAgICA8cD5SZXBvcnQgZ2VuZXJhdGVkIG9uIDcvMzEvMjAyNSwgNDoyNjoyMSBBTTwvcD4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogMjBweCAwOyBwYWRkaW5nOiAxNXB4OyBiYWNrZ3JvdW5kOiAjZjhmYWZjOyBib3JkZXItcmFkaXVzOiA4cHg7Ij4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db250YWN0ICYgU3VwcG9ydDo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfk6cgRW1haWw6IDxhIGhyZWY9Im1haWx0bzpzdXBwb3J0QGRpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfjJAgV2Vic2l0ZTogPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5kaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLXRvcDogMTVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db25uZWN0IHdpdGggSmVyZW15Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPgogICAgICAgICAgICAgICAgICAgICAgICDwn5SXIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qZXJlbXlsb25nc2hvcmUiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-TGlua2VkSW48L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkKYgPGEgaHJlZj0iaHR0cHM6Ly94LmNvbS9Bc3BoYWx0Q293YjB5IiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPlR3aXR0ZXIvWDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-SvCA8YSBocmVmPSJtYWlsdG86amVyZW15QGludGVudHNvdWx0aW9ucy5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-RGlyZWN0IENvbnRhY3Q8L2E-CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY-CjwvYm9keT4KPC9odG1sPgogICAg"}',
      responseType: 'unknown',
      errorRedactor: [Function: defaultErrorRedactor]
    },
    data: { error: [Object] },
    headers: {
      'content-encoding': 'gzip',
      'content-type': 'application/json; charset=UTF-8',
      date: 'Thu, 31 Jul 2025 04:26:21 GMT',
      server: 'ESF',
      'transfer-encoding': 'chunked',
      vary: 'Origin, X-Origin, Referer',
      'x-content-type-options': 'nosniff',
      'x-frame-options': 'SAMEORIGIN',
      'x-xss-protection': '0'
    },
    status: 400,
    statusText: 'Bad Request',
    request: {
      responseURL: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send'
    }
  },
  error: undefined,
  status: 400,
  code: 400,
  errors: [
    {
      message: 'Precondition check failed.',
      domain: 'global',
      reason: 'failedPrecondition'
    }
  ],
  [Symbol(gaxios-gaxios-error)]: '6.7.1'
}
‚ùå Failed to send customer email: GaxiosError: Precondition check failed.
    at Gaxios._request (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/gaxios/build/src/gaxios.js:142:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async JWT.requestAsync (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/google-auth-library/build/src/auth/oauth2client.js:429:18)
    at async EmailService.sendDiagnosticReport (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/emailService.js:58:24)
    at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:61:13)
    at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
    at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
    at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
    at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
  config: {
    url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
    method: 'POST',
    apiVersion: '',
    userAgentDirectives: [ [Object] ],
    paramsSerializer: [Function (anonymous)],
    data: {
      raw: 'RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBBbm9ueW1vdXMgQ29uY2VybmVkIEh1c2JhbmQsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRnVlbCBwdW1wIG1ha2luZyB3ZWlyZCB3aGluaW5nIG5vaXNlcyB0aGF0IHNvdW5kIHN1c3BpY2lvdXNseSBsaWtlIGEgcmVhbCBlc3RhdGUgYWdlbnQgdHJ5aW5nIHRvIGNsb3NlIGEgZGVhbCBhdCA5IFBNLiBDYXIgc3RhcnRzIGZpbmUgYnV0IGFjdHMgbGlrZSBpdCBuZWVkcyBtb3JlIGNhZmZlaW5lIC0gc2x1Z2dpc2ggYWNjZWxlcmF0aW9uIGFuZCBvY2Nhc2lvbmFsIGhpY2N1cHMuIEZ1ZWwgZ2F1Z2UgZG9pbmcgaW50ZXJwcmV0aXZlIGRhbmNlIGJldHdlZW4gMS80IGFuZCAxLzIgdGFuay48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkVycm9yIENvZGVzOjwvc3Ryb25nPiBQMDIzMCwgUDAyMzEsIFAwMDg3LCBQMjI5MzwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpYWdub3NpcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiB1cmdlbmN5LW1lZGl1bSI-CiAgICAgICAgICAgICAgICA8aDM-8J-UjSBEaWFnbm9zdGljIEFuYWx5c2lzPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc2lzOjwvc3Ryb25nPiBCYXNlZCBvbiB0aGUgc3ltcHRvbXMgZGVzY3JpYmVkLCB0aGVyZSBpcyBhIDkzJSBwcm9iYWJpbGl0eSB0aGF0IHRoaXMgaXMgYSBtZWNoYW5pY2FsIGNvbXBvbmVudCBmYWlsdXJlIHJlcXVpcmluZyBkZXRhaWxlZCBpbnNwZWN0aW9uIHRvIHByZXZlbnQgZnVydGhlciBkYW1hZ2UuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5VcmdlbmN5IExldmVsOjwvc3Ryb25nPiBNRURJVU08L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBSZWNvbW1lbmRhdGlvbnMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfm6DvuI8gRXhwZXJ0IFJlY29tbWVuZGF0aW9uczwvaDM-CiAgICAgICAgICAgICAgICA8ZGl2PnVuZGVmaW5lZDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBOZXh0IFN0ZXBzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqEgTmV4dCBTdGVwczwvaDM-CiAgICAgICAgICAgICAgICA8b2w-CiAgICAgICAgICAgICAgICAgICAgPGxpPlJldmlldyB0aGUgZGlhZ25vc3RpYyBmaW5kaW5ncyBhYm92ZTwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkNvbnRhY3QgYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiB3aXRoIHRoaXMgcmVwb3J0PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-U2hvdyB0aGVtIHRoZSBzcGVjaWZpYyBlcnJvciBjb2RlcyBhbmQgcmVjb21tZW5kYXRpb25zPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-R2V0IGEgc2Vjb25kIG9waW5pb24gaWYgdGhlIHF1b3RlIHNlZW1zIHRvbyBoaWdoPC9saT4KICAgICAgICAgICAgICAgIDwvb2w-CiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIGNsYXNzPSJjdGEtYnV0dG9uIj5HZXQgQW5vdGhlciBEaWFnbm9zaXM8L2E-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaXNjbGFpbWVyIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqDvuI8gSW1wb3J0YW50IERpc2NsYWltZXI8L2gzPgogICAgICAgICAgICAgICAgPHA-PGVtPlRoaXMgYW5hbHlzaXMgaXMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIGFuZCBzaG91bGQgYmUgdXNlZCBhcyBhIHN0YXJ0aW5nIHBvaW50IGZvciBwcm9mZXNzaW9uYWwgcmVwYWlyLiBBbHdheXMgY29uc3VsdCB3aXRoIGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gYmVmb3JlIHBlcmZvcm1pbmcgYW55IHJlcGFpcnMuIERpYWdub3N0aWNQcm8gTVZQIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgYW55IGRhbWFnZXMgcmVzdWx0aW5nIGZyb20gdGhlIHVzZSBvZiB0aGlzIGluZm9ybWF0aW9uLjwvZW0-PC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPCEtLSBGb290ZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyIj4KICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zdGljUHJvIE1WUDwvc3Ryb25nPiAtIEV4cGVydCBFcXVpcG1lbnQgRGlhZ25vc2lzPC9wPgogICAgICAgICAgICA8cD5SZXBvcnQgZ2VuZXJhdGVkIG9uIDcvMzEvMjAyNSwgNDoyNjoyMSBBTTwvcD4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogMjBweCAwOyBwYWRkaW5nOiAxNXB4OyBiYWNrZ3JvdW5kOiAjZjhmYWZjOyBib3JkZXItcmFkaXVzOiA4cHg7Ij4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db250YWN0ICYgU3VwcG9ydDo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfk6cgRW1haWw6IDxhIGhyZWY9Im1haWx0bzpzdXBwb3J0QGRpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfjJAgV2Vic2l0ZTogPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5kaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLXRvcDogMTVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db25uZWN0IHdpdGggSmVyZW15Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPgogICAgICAgICAgICAgICAgICAgICAgICDwn5SXIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qZXJlbXlsb25nc2hvcmUiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-TGlua2VkSW48L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkKYgPGEgaHJlZj0iaHR0cHM6Ly94LmNvbS9Bc3BoYWx0Q293YjB5IiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPlR3aXR0ZXIvWDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-SvCA8YSBocmVmPSJtYWlsdG86amVyZW15QGludGVudHNvdWx0aW9ucy5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-RGlyZWN0IENvbnRhY3Q8L2E-CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY-CjwvYm9keT4KPC9odG1sPgogICAg'
    },
    headers: {
      'x-goog-api-client': 'gdcl/7.2.0 gl-node/20.19.4',
      'Accept-Encoding': 'gzip',
      'User-Agent': 'google-api-nodejs-client/7.2.0 (gzip)',
      Authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
      'Content-Type': 'application/json'
    },
    params: {},
    validateStatus: [Function (anonymous)],
    retry: true,
    body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBBbm9ueW1vdXMgQ29uY2VybmVkIEh1c2JhbmQsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRnVlbCBwdW1wIG1ha2luZyB3ZWlyZCB3aGluaW5nIG5vaXNlcyB0aGF0IHNvdW5kIHN1c3BpY2lvdXNseSBsaWtlIGEgcmVhbCBlc3RhdGUgYWdlbnQgdHJ5aW5nIHRvIGNsb3NlIGEgZGVhbCBhdCA5IFBNLiBDYXIgc3RhcnRzIGZpbmUgYnV0IGFjdHMgbGlrZSBpdCBuZWVkcyBtb3JlIGNhZmZlaW5lIC0gc2x1Z2dpc2ggYWNjZWxlcmF0aW9uIGFuZCBvY2Nhc2lvbmFsIGhpY2N1cHMuIEZ1ZWwgZ2F1Z2UgZG9pbmcgaW50ZXJwcmV0aXZlIGRhbmNlIGJldHdlZW4gMS80IGFuZCAxLzIgdGFuay48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkVycm9yIENvZGVzOjwvc3Ryb25nPiBQMDIzMCwgUDAyMzEsIFAwMDg3LCBQMjI5MzwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpYWdub3NpcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiB1cmdlbmN5LW1lZGl1bSI-CiAgICAgICAgICAgICAgICA8aDM-8J-UjSBEaWFnbm9zdGljIEFuYWx5c2lzPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc2lzOjwvc3Ryb25nPiBCYXNlZCBvbiB0aGUgc3ltcHRvbXMgZGVzY3JpYmVkLCB0aGVyZSBpcyBhIDkzJSBwcm9iYWJpbGl0eSB0aGF0IHRoaXMgaXMgYSBtZWNoYW5pY2FsIGNvbXBvbmVudCBmYWlsdXJlIHJlcXVpcmluZyBkZXRhaWxlZCBpbnNwZWN0aW9uIHRvIHByZXZlbnQgZnVydGhlciBkYW1hZ2UuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5VcmdlbmN5IExldmVsOjwvc3Ryb25nPiBNRURJVU08L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBSZWNvbW1lbmRhdGlvbnMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfm6DvuI8gRXhwZXJ0IFJlY29tbWVuZGF0aW9uczwvaDM-CiAgICAgICAgICAgICAgICA8ZGl2PnVuZGVmaW5lZDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBOZXh0IFN0ZXBzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqEgTmV4dCBTdGVwczwvaDM-CiAgICAgICAgICAgICAgICA8b2w-CiAgICAgICAgICAgICAgICAgICAgPGxpPlJldmlldyB0aGUgZGlhZ25vc3RpYyBmaW5kaW5ncyBhYm92ZTwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkNvbnRhY3QgYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiB3aXRoIHRoaXMgcmVwb3J0PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-U2hvdyB0aGVtIHRoZSBzcGVjaWZpYyBlcnJvciBjb2RlcyBhbmQgcmVjb21tZW5kYXRpb25zPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-R2V0IGEgc2Vjb25kIG9waW5pb24gaWYgdGhlIHF1b3RlIHNlZW1zIHRvbyBoaWdoPC9saT4KICAgICAgICAgICAgICAgIDwvb2w-CiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIGNsYXNzPSJjdGEtYnV0dG9uIj5HZXQgQW5vdGhlciBEaWFnbm9zaXM8L2E-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaXNjbGFpbWVyIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqDvuI8gSW1wb3J0YW50IERpc2NsYWltZXI8L2gzPgogICAgICAgICAgICAgICAgPHA-PGVtPlRoaXMgYW5hbHlzaXMgaXMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIGFuZCBzaG91bGQgYmUgdXNlZCBhcyBhIHN0YXJ0aW5nIHBvaW50IGZvciBwcm9mZXNzaW9uYWwgcmVwYWlyLiBBbHdheXMgY29uc3VsdCB3aXRoIGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gYmVmb3JlIHBlcmZvcm1pbmcgYW55IHJlcGFpcnMuIERpYWdub3N0aWNQcm8gTVZQIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgYW55IGRhbWFnZXMgcmVzdWx0aW5nIGZyb20gdGhlIHVzZSBvZiB0aGlzIGluZm9ybWF0aW9uLjwvZW0-PC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPCEtLSBGb290ZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyIj4KICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zdGljUHJvIE1WUDwvc3Ryb25nPiAtIEV4cGVydCBFcXVpcG1lbnQgRGlhZ25vc2lzPC9wPgogICAgICAgICAgICA8cD5SZXBvcnQgZ2VuZXJhdGVkIG9uIDcvMzEvMjAyNSwgNDoyNjoyMSBBTTwvcD4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogMjBweCAwOyBwYWRkaW5nOiAxNXB4OyBiYWNrZ3JvdW5kOiAjZjhmYWZjOyBib3JkZXItcmFkaXVzOiA4cHg7Ij4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db250YWN0ICYgU3VwcG9ydDo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfk6cgRW1haWw6IDxhIGhyZWY9Im1haWx0bzpzdXBwb3J0QGRpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfjJAgV2Vic2l0ZTogPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5kaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLXRvcDogMTVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db25uZWN0IHdpdGggSmVyZW15Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPgogICAgICAgICAgICAgICAgICAgICAgICDwn5SXIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qZXJlbXlsb25nc2hvcmUiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-TGlua2VkSW48L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkKYgPGEgaHJlZj0iaHR0cHM6Ly94LmNvbS9Bc3BoYWx0Q293YjB5IiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPlR3aXR0ZXIvWDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-SvCA8YSBocmVmPSJtYWlsdG86amVyZW15QGludGVudHNvdWx0aW9ucy5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-RGlyZWN0IENvbnRhY3Q8L2E-CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY-CjwvYm9keT4KPC9odG1sPgogICAg"}',
    responseType: 'unknown',
    errorRedactor: [Function: defaultErrorRedactor],
    retryConfig: {
      currentRetryAttempt: 0,
      retry: 3,
      httpMethodsToRetry: [Array],
      noResponseRetries: 2,
      retryDelayMultiplier: 2,
      timeOfFirstRequest: 1753935982969,
      totalTimeout: 9007199254740991,
      maxRetryDelay: 9007199254740991,
      statusCodesToRetry: [Array]
    }
  },
  response: {
    config: {
      url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
      method: 'POST',
      apiVersion: '',
      userAgentDirectives: [Array],
      paramsSerializer: [Function (anonymous)],
      data: [Object],
      headers: [Object],
      params: {},
      validateStatus: [Function (anonymous)],
      retry: true,
      body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBBbm9ueW1vdXMgQ29uY2VybmVkIEh1c2JhbmQsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRnVlbCBwdW1wIG1ha2luZyB3ZWlyZCB3aGluaW5nIG5vaXNlcyB0aGF0IHNvdW5kIHN1c3BpY2lvdXNseSBsaWtlIGEgcmVhbCBlc3RhdGUgYWdlbnQgdHJ5aW5nIHRvIGNsb3NlIGEgZGVhbCBhdCA5IFBNLiBDYXIgc3RhcnRzIGZpbmUgYnV0IGFjdHMgbGlrZSBpdCBuZWVkcyBtb3JlIGNhZmZlaW5lIC0gc2x1Z2dpc2ggYWNjZWxlcmF0aW9uIGFuZCBvY2Nhc2lvbmFsIGhpY2N1cHMuIEZ1ZWwgZ2F1Z2UgZG9pbmcgaW50ZXJwcmV0aXZlIGRhbmNlIGJldHdlZW4gMS80IGFuZCAxLzIgdGFuay48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkVycm9yIENvZGVzOjwvc3Ryb25nPiBQMDIzMCwgUDAyMzEsIFAwMDg3LCBQMjI5MzwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpYWdub3NpcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiB1cmdlbmN5LW1lZGl1bSI-CiAgICAgICAgICAgICAgICA8aDM-8J-UjSBEaWFnbm9zdGljIEFuYWx5c2lzPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc2lzOjwvc3Ryb25nPiBCYXNlZCBvbiB0aGUgc3ltcHRvbXMgZGVzY3JpYmVkLCB0aGVyZSBpcyBhIDkzJSBwcm9iYWJpbGl0eSB0aGF0IHRoaXMgaXMgYSBtZWNoYW5pY2FsIGNvbXBvbmVudCBmYWlsdXJlIHJlcXVpcmluZyBkZXRhaWxlZCBpbnNwZWN0aW9uIHRvIHByZXZlbnQgZnVydGhlciBkYW1hZ2UuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5VcmdlbmN5IExldmVsOjwvc3Ryb25nPiBNRURJVU08L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBSZWNvbW1lbmRhdGlvbnMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfm6DvuI8gRXhwZXJ0IFJlY29tbWVuZGF0aW9uczwvaDM-CiAgICAgICAgICAgICAgICA8ZGl2PnVuZGVmaW5lZDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBOZXh0IFN0ZXBzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqEgTmV4dCBTdGVwczwvaDM-CiAgICAgICAgICAgICAgICA8b2w-CiAgICAgICAgICAgICAgICAgICAgPGxpPlJldmlldyB0aGUgZGlhZ25vc3RpYyBmaW5kaW5ncyBhYm92ZTwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkNvbnRhY3QgYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiB3aXRoIHRoaXMgcmVwb3J0PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-U2hvdyB0aGVtIHRoZSBzcGVjaWZpYyBlcnJvciBjb2RlcyBhbmQgcmVjb21tZW5kYXRpb25zPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-R2V0IGEgc2Vjb25kIG9waW5pb24gaWYgdGhlIHF1b3RlIHNlZW1zIHRvbyBoaWdoPC9saT4KICAgICAgICAgICAgICAgIDwvb2w-CiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIGNsYXNzPSJjdGEtYnV0dG9uIj5HZXQgQW5vdGhlciBEaWFnbm9zaXM8L2E-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaXNjbGFpbWVyIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqDvuI8gSW1wb3J0YW50IERpc2NsYWltZXI8L2gzPgogICAgICAgICAgICAgICAgPHA-PGVtPlRoaXMgYW5hbHlzaXMgaXMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIGFuZCBzaG91bGQgYmUgdXNlZCBhcyBhIHN0YXJ0aW5nIHBvaW50IGZvciBwcm9mZXNzaW9uYWwgcmVwYWlyLiBBbHdheXMgY29uc3VsdCB3aXRoIGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gYmVmb3JlIHBlcmZvcm1pbmcgYW55IHJlcGFpcnMuIERpYWdub3N0aWNQcm8gTVZQIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgYW55IGRhbWFnZXMgcmVzdWx0aW5nIGZyb20gdGhlIHVzZSBvZiB0aGlzIGluZm9ybWF0aW9uLjwvZW0-PC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPCEtLSBGb290ZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyIj4KICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zdGljUHJvIE1WUDwvc3Ryb25nPiAtIEV4cGVydCBFcXVpcG1lbnQgRGlhZ25vc2lzPC9wPgogICAgICAgICAgICA8cD5SZXBvcnQgZ2VuZXJhdGVkIG9uIDcvMzEvMjAyNSwgNDoyNjoyMSBBTTwvcD4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogMjBweCAwOyBwYWRkaW5nOiAxNXB4OyBiYWNrZ3JvdW5kOiAjZjhmYWZjOyBib3JkZXItcmFkaXVzOiA4cHg7Ij4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db250YWN0ICYgU3VwcG9ydDo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfk6cgRW1haWw6IDxhIGhyZWY9Im1haWx0bzpzdXBwb3J0QGRpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfjJAgV2Vic2l0ZTogPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5kaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLXRvcDogMTVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db25uZWN0IHdpdGggSmVyZW15Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPgogICAgICAgICAgICAgICAgICAgICAgICDwn5SXIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qZXJlbXlsb25nc2hvcmUiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-TGlua2VkSW48L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkKYgPGEgaHJlZj0iaHR0cHM6Ly94LmNvbS9Bc3BoYWx0Q293YjB5IiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPlR3aXR0ZXIvWDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-SvCA8YSBocmVmPSJtYWlsdG86amVyZW15QGludGVudHNvdWx0aW9ucy5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-RGlyZWN0IENvbnRhY3Q8L2E-CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY-CjwvYm9keT4KPC9odG1sPgogICAg"}',
      responseType: 'unknown',
      errorRedactor: [Function: defaultErrorRedactor]
    },
    data: { error: [Object] },
    headers: {
      'content-encoding': 'gzip',
      'content-type': 'application/json; charset=UTF-8',
      date: 'Thu, 31 Jul 2025 04:26:21 GMT',
      server: 'ESF',
      'transfer-encoding': 'chunked',
      vary: 'Origin, X-Origin, Referer',
      'x-content-type-options': 'nosniff',
      'x-frame-options': 'SAMEORIGIN',
      'x-xss-protection': '0'
    },
    status: 400,
    statusText: 'Bad Request',
    request: {
      responseURL: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send'
    }
  },
  error: undefined,
  status: 400,
  code: 400,
  errors: [
    {
      message: 'Precondition check failed.',
      domain: 'global',
      reason: 'failedPrecondition'
    }
  ],
  [Symbol(gaxios-gaxios-error)]: '6.7.1'
}
üìù New diagnostic form submission received
üîç Processing diagnostic request for Mysterious Car Whisperer
üìß Skipping admin notification to prioritize AI analysis
üîç Starting AI diagnostic analysis...
üöÄ Attempting Vertex AI Gemini analysis...
‚ö†Ô∏è Gemini failed, details: [VertexAI.ClientError]: got status: 404 Not Found. {"error":{"code":404,"message":"Publisher Model `projects/diagnostic-pro-mvp/locations/us-central1/publishers/google/models/gemini-1.5-pro` was not found or your project does not have access to it. Please ensure you are using a valid model version. For more information, see: https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versions","status":"NOT_FOUND"}}
üîÑ Using mock diagnostic response as fallback
‚úÖ Mock analysis completed - system operational
‚úÖ AI diagnostic analysis completed using DiagnosticPro Mock AI (Fallback)
üéØ Full diagnostic analysis completed
‚ùå Failed to send diagnostic report: GaxiosError: Precondition check failed.
    at Gaxios._request (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/gaxios/build/src/gaxios.js:142:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async JWT.requestAsync (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/google-auth-library/build/src/auth/oauth2client.js:429:18)
    at async EmailService.sendDiagnosticReport (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/emailService.js:58:24)
    at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:61:13)
    at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
    at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
    at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
    at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
  config: {
    url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
    method: 'POST',
    apiVersion: '',
    userAgentDirectives: [ [Object] ],
    paramsSerializer: [Function (anonymous)],
    data: {
      raw: 'RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBNeXN0ZXJpb3VzIENhciBXaGlzcGVyZXIsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRUNVIChFbmdpbmUgQ29udHJvbCBVbml0KSBhcHBlYXJzIHRvIGhhdmUgZGV2ZWxvcGVkIGEgcGVyc29uYWxpdHkgZGlzb3JkZXIuIFNvbWV0aW1lcyBpdCB0aGlua3MgaXQncyBhIHNwb3J0cyBjYXIgKHJldnZpbmcgaGlnaCksIHNvbWV0aW1lcyBhIGh5YnJpZCAoY3V0dGluZyBwb3dlciByYW5kb21seSksIGFuZCBvY2Nhc2lvbmFsbHkgaXQgaWRlbnRpZmllcyBhcyBhIHN1Ym1hcmluZSAoZmxvb2RpbmcgdGhlIGVuZ2luZSB3aXRoIHRvbyBtdWNoIGZ1ZWwpLiBDaGVjayBlbmdpbmUgbGlnaHQgZmxhc2hpbmcgaW4gd2hhdCBhcHBlYXJzIHRvIGJlIE1vcnNlIGNvZGUuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5FcnJvciBDb2Rlczo8L3N0cm9uZz4gUDA2MDEsIFAwNjA2LCBVMDEwMCwgVTAxMjE8L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaWFnbm9zaXMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24gdXJnZW5jeS1tZWRpdW0iPgogICAgICAgICAgICAgICAgPGgzPvCflI0gRGlhZ25vc3RpYyBBbmFseXNpczwvaDM-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3Npczo8L3N0cm9uZz4gQmFzZWQgb24gdGhlIHN5bXB0b21zIGRlc2NyaWJlZCwgdGhlcmUgaXMgYSA4OSUgcHJvYmFiaWxpdHkgdGhhdCB0aGlzIGlzIGEgZnVlbCBzeXN0ZW0gb3IgZW5naW5lIG1hbmFnZW1lbnQgaXNzdWUuIFRoZSBzeW1wdG9tcyBzdWdnZXN0IGZ1ZWwgZGVsaXZlcnkgcHJvYmxlbXMgb3Igc2Vuc29yIG1hbGZ1bmN0aW9ucy48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlVyZ2VuY3kgTGV2ZWw6PC9zdHJvbmc-IE1FRElVTTwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIFJlY29tbWVuZGF0aW9ucyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-boO-4jyBFeHBlcnQgUmVjb21tZW5kYXRpb25zPC9oMz4KICAgICAgICAgICAgICAgIDxkaXY-dW5kZWZpbmVkPC9kaXY-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIE5leHQgU3RlcHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoSBOZXh0IFN0ZXBzPC9oMz4KICAgICAgICAgICAgICAgIDxvbD4KICAgICAgICAgICAgICAgICAgICA8bGk-UmV2aWV3IHRoZSBkaWFnbm9zdGljIGZpbmRpbmdzIGFib3ZlPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-Q29udGFjdCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIHdpdGggdGhpcyByZXBvcnQ8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5TaG93IHRoZW0gdGhlIHNwZWNpZmljIGVycm9yIGNvZGVzIGFuZCByZWNvbW1lbmRhdGlvbnM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5HZXQgYSBzZWNvbmQgb3BpbmlvbiBpZiB0aGUgcXVvdGUgc2VlbXMgdG9vIGhpZ2g8L2xpPgogICAgICAgICAgICAgICAgPC9vbD4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgY2xhc3M9ImN0YS1idXR0b24iPkdldCBBbm90aGVyIERpYWdub3NpczwvYT4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpc2NsYWltZXIgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoO-4jyBJbXBvcnRhbnQgRGlzY2xhaW1lcjwvaDM-CiAgICAgICAgICAgICAgICA8cD48ZW0-VGhpcyBhbmFseXNpcyBpcyBiYXNlZCBvbiB0aGUgaW5mb3JtYXRpb24gcHJvdmlkZWQgYW5kIHNob3VsZCBiZSB1c2VkIGFzIGEgc3RhcnRpbmcgcG9pbnQgZm9yIHByb2Zlc3Npb25hbCByZXBhaXIuIEFsd2F5cyBjb25zdWx0IHdpdGggYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiBiZWZvcmUgcGVyZm9ybWluZyBhbnkgcmVwYWlycy4gRGlhZ25vc3RpY1BybyBNVlAgaXMgbm90IHJlc3BvbnNpYmxlIGZvciBhbnkgZGFtYWdlcyByZXN1bHRpbmcgZnJvbSB0aGUgdXNlIG9mIHRoaXMgaW5mb3JtYXRpb24uPC9lbT48L3A-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIEZvb3RlciAtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXIiPgogICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3N0aWNQcm8gTVZQPC9zdHJvbmc-IC0gRXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXM8L3A-CiAgICAgICAgICAgIDxwPlJlcG9ydCBnZW5lcmF0ZWQgb24gNy8zMS8yMDI1LCA0OjI2OjI0IEFNPC9wPgogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luOiAyMHB4IDA7IHBhZGRpbmc6IDE1cHg7IGJhY2tncm91bmQ6ICNmOGZhZmM7IGJvcmRlci1yYWRpdXM6IDhweDsiPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbnRhY3QgJiBTdXBwb3J0Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-TpyBFbWFpbDogPGEgaHJlZj0ibWFpbHRvOnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-MkCBXZWJzaXRlOiA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPmRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW4tdG9wOiAxNXB4OyI-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbm5lY3Qgd2l0aCBKZXJlbXk6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-CiAgICAgICAgICAgICAgICAgICAgICAgIPCflJcgPGEgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2plcmVteWxvbmdzaG9yZSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5MaW5rZWRJbjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-QpiA8YSBocmVmPSJodHRwczovL3guY29tL0FzcGhhbHRDb3diMHkiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-VHdpdHRlci9YPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5K8IDxhIGhyZWY9Im1haWx0bzpqZXJlbXlAaW50ZW50c291bHRpb25zLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5EaXJlY3QgQ29udGFjdDwvYT4KICAgICAgICAgICAgICAgICAgICA8L3A-CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CiAgICA8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw-CiAgICA'
    },
    headers: {
      'x-goog-api-client': 'gdcl/7.2.0 gl-node/20.19.4',
      'Accept-Encoding': 'gzip',
      'User-Agent': 'google-api-nodejs-client/7.2.0 (gzip)',
      Authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
      'Content-Type': 'application/json'
    },
    params: {},
    validateStatus: [Function (anonymous)],
    retry: true,
    body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBNeXN0ZXJpb3VzIENhciBXaGlzcGVyZXIsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRUNVIChFbmdpbmUgQ29udHJvbCBVbml0KSBhcHBlYXJzIHRvIGhhdmUgZGV2ZWxvcGVkIGEgcGVyc29uYWxpdHkgZGlzb3JkZXIuIFNvbWV0aW1lcyBpdCB0aGlua3MgaXQncyBhIHNwb3J0cyBjYXIgKHJldnZpbmcgaGlnaCksIHNvbWV0aW1lcyBhIGh5YnJpZCAoY3V0dGluZyBwb3dlciByYW5kb21seSksIGFuZCBvY2Nhc2lvbmFsbHkgaXQgaWRlbnRpZmllcyBhcyBhIHN1Ym1hcmluZSAoZmxvb2RpbmcgdGhlIGVuZ2luZSB3aXRoIHRvbyBtdWNoIGZ1ZWwpLiBDaGVjayBlbmdpbmUgbGlnaHQgZmxhc2hpbmcgaW4gd2hhdCBhcHBlYXJzIHRvIGJlIE1vcnNlIGNvZGUuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5FcnJvciBDb2Rlczo8L3N0cm9uZz4gUDA2MDEsIFAwNjA2LCBVMDEwMCwgVTAxMjE8L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaWFnbm9zaXMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24gdXJnZW5jeS1tZWRpdW0iPgogICAgICAgICAgICAgICAgPGgzPvCflI0gRGlhZ25vc3RpYyBBbmFseXNpczwvaDM-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3Npczo8L3N0cm9uZz4gQmFzZWQgb24gdGhlIHN5bXB0b21zIGRlc2NyaWJlZCwgdGhlcmUgaXMgYSA4OSUgcHJvYmFiaWxpdHkgdGhhdCB0aGlzIGlzIGEgZnVlbCBzeXN0ZW0gb3IgZW5naW5lIG1hbmFnZW1lbnQgaXNzdWUuIFRoZSBzeW1wdG9tcyBzdWdnZXN0IGZ1ZWwgZGVsaXZlcnkgcHJvYmxlbXMgb3Igc2Vuc29yIG1hbGZ1bmN0aW9ucy48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlVyZ2VuY3kgTGV2ZWw6PC9zdHJvbmc-IE1FRElVTTwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIFJlY29tbWVuZGF0aW9ucyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-boO-4jyBFeHBlcnQgUmVjb21tZW5kYXRpb25zPC9oMz4KICAgICAgICAgICAgICAgIDxkaXY-dW5kZWZpbmVkPC9kaXY-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIE5leHQgU3RlcHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoSBOZXh0IFN0ZXBzPC9oMz4KICAgICAgICAgICAgICAgIDxvbD4KICAgICAgICAgICAgICAgICAgICA8bGk-UmV2aWV3IHRoZSBkaWFnbm9zdGljIGZpbmRpbmdzIGFib3ZlPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-Q29udGFjdCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIHdpdGggdGhpcyByZXBvcnQ8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5TaG93IHRoZW0gdGhlIHNwZWNpZmljIGVycm9yIGNvZGVzIGFuZCByZWNvbW1lbmRhdGlvbnM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5HZXQgYSBzZWNvbmQgb3BpbmlvbiBpZiB0aGUgcXVvdGUgc2VlbXMgdG9vIGhpZ2g8L2xpPgogICAgICAgICAgICAgICAgPC9vbD4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgY2xhc3M9ImN0YS1idXR0b24iPkdldCBBbm90aGVyIERpYWdub3NpczwvYT4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpc2NsYWltZXIgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoO-4jyBJbXBvcnRhbnQgRGlzY2xhaW1lcjwvaDM-CiAgICAgICAgICAgICAgICA8cD48ZW0-VGhpcyBhbmFseXNpcyBpcyBiYXNlZCBvbiB0aGUgaW5mb3JtYXRpb24gcHJvdmlkZWQgYW5kIHNob3VsZCBiZSB1c2VkIGFzIGEgc3RhcnRpbmcgcG9pbnQgZm9yIHByb2Zlc3Npb25hbCByZXBhaXIuIEFsd2F5cyBjb25zdWx0IHdpdGggYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiBiZWZvcmUgcGVyZm9ybWluZyBhbnkgcmVwYWlycy4gRGlhZ25vc3RpY1BybyBNVlAgaXMgbm90IHJlc3BvbnNpYmxlIGZvciBhbnkgZGFtYWdlcyByZXN1bHRpbmcgZnJvbSB0aGUgdXNlIG9mIHRoaXMgaW5mb3JtYXRpb24uPC9lbT48L3A-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIEZvb3RlciAtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXIiPgogICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3N0aWNQcm8gTVZQPC9zdHJvbmc-IC0gRXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXM8L3A-CiAgICAgICAgICAgIDxwPlJlcG9ydCBnZW5lcmF0ZWQgb24gNy8zMS8yMDI1LCA0OjI2OjI0IEFNPC9wPgogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luOiAyMHB4IDA7IHBhZGRpbmc6IDE1cHg7IGJhY2tncm91bmQ6ICNmOGZhZmM7IGJvcmRlci1yYWRpdXM6IDhweDsiPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbnRhY3QgJiBTdXBwb3J0Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-TpyBFbWFpbDogPGEgaHJlZj0ibWFpbHRvOnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-MkCBXZWJzaXRlOiA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPmRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW4tdG9wOiAxNXB4OyI-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbm5lY3Qgd2l0aCBKZXJlbXk6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-CiAgICAgICAgICAgICAgICAgICAgICAgIPCflJcgPGEgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2plcmVteWxvbmdzaG9yZSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5MaW5rZWRJbjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-QpiA8YSBocmVmPSJodHRwczovL3guY29tL0FzcGhhbHRDb3diMHkiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-VHdpdHRlci9YPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5K8IDxhIGhyZWY9Im1haWx0bzpqZXJlbXlAaW50ZW50c291bHRpb25zLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5EaXJlY3QgQ29udGFjdDwvYT4KICAgICAgICAgICAgICAgICAgICA8L3A-CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CiAgICA8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw-CiAgICA"}',
    responseType: 'unknown',
    errorRedactor: [Function: defaultErrorRedactor],
    retryConfig: {
      currentRetryAttempt: 0,
      retry: 3,
      httpMethodsToRetry: [Array],
      noResponseRetries: 2,
      retryDelayMultiplier: 2,
      timeOfFirstRequest: 1753935985549,
      totalTimeout: 9007199254740991,
      maxRetryDelay: 9007199254740991,
      statusCodesToRetry: [Array]
    }
  },
  response: {
    config: {
      url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
      method: 'POST',
      apiVersion: '',
      userAgentDirectives: [Array],
      paramsSerializer: [Function (anonymous)],
      data: [Object],
      headers: [Object],
      params: {},
      validateStatus: [Function (anonymous)],
      retry: true,
      body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBNeXN0ZXJpb3VzIENhciBXaGlzcGVyZXIsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRUNVIChFbmdpbmUgQ29udHJvbCBVbml0KSBhcHBlYXJzIHRvIGhhdmUgZGV2ZWxvcGVkIGEgcGVyc29uYWxpdHkgZGlzb3JkZXIuIFNvbWV0aW1lcyBpdCB0aGlua3MgaXQncyBhIHNwb3J0cyBjYXIgKHJldnZpbmcgaGlnaCksIHNvbWV0aW1lcyBhIGh5YnJpZCAoY3V0dGluZyBwb3dlciByYW5kb21seSksIGFuZCBvY2Nhc2lvbmFsbHkgaXQgaWRlbnRpZmllcyBhcyBhIHN1Ym1hcmluZSAoZmxvb2RpbmcgdGhlIGVuZ2luZSB3aXRoIHRvbyBtdWNoIGZ1ZWwpLiBDaGVjayBlbmdpbmUgbGlnaHQgZmxhc2hpbmcgaW4gd2hhdCBhcHBlYXJzIHRvIGJlIE1vcnNlIGNvZGUuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5FcnJvciBDb2Rlczo8L3N0cm9uZz4gUDA2MDEsIFAwNjA2LCBVMDEwMCwgVTAxMjE8L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaWFnbm9zaXMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24gdXJnZW5jeS1tZWRpdW0iPgogICAgICAgICAgICAgICAgPGgzPvCflI0gRGlhZ25vc3RpYyBBbmFseXNpczwvaDM-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3Npczo8L3N0cm9uZz4gQmFzZWQgb24gdGhlIHN5bXB0b21zIGRlc2NyaWJlZCwgdGhlcmUgaXMgYSA4OSUgcHJvYmFiaWxpdHkgdGhhdCB0aGlzIGlzIGEgZnVlbCBzeXN0ZW0gb3IgZW5naW5lIG1hbmFnZW1lbnQgaXNzdWUuIFRoZSBzeW1wdG9tcyBzdWdnZXN0IGZ1ZWwgZGVsaXZlcnkgcHJvYmxlbXMgb3Igc2Vuc29yIG1hbGZ1bmN0aW9ucy48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlVyZ2VuY3kgTGV2ZWw6PC9zdHJvbmc-IE1FRElVTTwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIFJlY29tbWVuZGF0aW9ucyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-boO-4jyBFeHBlcnQgUmVjb21tZW5kYXRpb25zPC9oMz4KICAgICAgICAgICAgICAgIDxkaXY-dW5kZWZpbmVkPC9kaXY-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIE5leHQgU3RlcHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoSBOZXh0IFN0ZXBzPC9oMz4KICAgICAgICAgICAgICAgIDxvbD4KICAgICAgICAgICAgICAgICAgICA8bGk-UmV2aWV3IHRoZSBkaWFnbm9zdGljIGZpbmRpbmdzIGFib3ZlPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-Q29udGFjdCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIHdpdGggdGhpcyByZXBvcnQ8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5TaG93IHRoZW0gdGhlIHNwZWNpZmljIGVycm9yIGNvZGVzIGFuZCByZWNvbW1lbmRhdGlvbnM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5HZXQgYSBzZWNvbmQgb3BpbmlvbiBpZiB0aGUgcXVvdGUgc2VlbXMgdG9vIGhpZ2g8L2xpPgogICAgICAgICAgICAgICAgPC9vbD4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgY2xhc3M9ImN0YS1idXR0b24iPkdldCBBbm90aGVyIERpYWdub3NpczwvYT4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpc2NsYWltZXIgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoO-4jyBJbXBvcnRhbnQgRGlzY2xhaW1lcjwvaDM-CiAgICAgICAgICAgICAgICA8cD48ZW0-VGhpcyBhbmFseXNpcyBpcyBiYXNlZCBvbiB0aGUgaW5mb3JtYXRpb24gcHJvdmlkZWQgYW5kIHNob3VsZCBiZSB1c2VkIGFzIGEgc3RhcnRpbmcgcG9pbnQgZm9yIHByb2Zlc3Npb25hbCByZXBhaXIuIEFsd2F5cyBjb25zdWx0IHdpdGggYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiBiZWZvcmUgcGVyZm9ybWluZyBhbnkgcmVwYWlycy4gRGlhZ25vc3RpY1BybyBNVlAgaXMgbm90IHJlc3BvbnNpYmxlIGZvciBhbnkgZGFtYWdlcyByZXN1bHRpbmcgZnJvbSB0aGUgdXNlIG9mIHRoaXMgaW5mb3JtYXRpb24uPC9lbT48L3A-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIEZvb3RlciAtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXIiPgogICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3N0aWNQcm8gTVZQPC9zdHJvbmc-IC0gRXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXM8L3A-CiAgICAgICAgICAgIDxwPlJlcG9ydCBnZW5lcmF0ZWQgb24gNy8zMS8yMDI1LCA0OjI2OjI0IEFNPC9wPgogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luOiAyMHB4IDA7IHBhZGRpbmc6IDE1cHg7IGJhY2tncm91bmQ6ICNmOGZhZmM7IGJvcmRlci1yYWRpdXM6IDhweDsiPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbnRhY3QgJiBTdXBwb3J0Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-TpyBFbWFpbDogPGEgaHJlZj0ibWFpbHRvOnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-MkCBXZWJzaXRlOiA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPmRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW4tdG9wOiAxNXB4OyI-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbm5lY3Qgd2l0aCBKZXJlbXk6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-CiAgICAgICAgICAgICAgICAgICAgICAgIPCflJcgPGEgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2plcmVteWxvbmdzaG9yZSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5MaW5rZWRJbjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-QpiA8YSBocmVmPSJodHRwczovL3guY29tL0FzcGhhbHRDb3diMHkiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-VHdpdHRlci9YPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5K8IDxhIGhyZWY9Im1haWx0bzpqZXJlbXlAaW50ZW50c291bHRpb25zLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5EaXJlY3QgQ29udGFjdDwvYT4KICAgICAgICAgICAgICAgICAgICA8L3A-CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CiAgICA8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw-CiAgICA"}',
      responseType: 'unknown',
      errorRedactor: [Function: defaultErrorRedactor]
    },
    data: { error: [Object] },
    headers: {
      'content-encoding': 'gzip',
      'content-type': 'application/json; charset=UTF-8',
      date: 'Thu, 31 Jul 2025 04:26:24 GMT',
      server: 'ESF',
      'transfer-encoding': 'chunked',
      vary: 'Origin, X-Origin, Referer',
      'x-content-type-options': 'nosniff',
      'x-frame-options': 'SAMEORIGIN',
      'x-xss-protection': '0'
    },
    status: 400,
    statusText: 'Bad Request',
    request: {
      responseURL: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send'
    }
  },
  error: undefined,
  status: 400,
  code: 400,
  errors: [
    {
      message: 'Precondition check failed.',
      domain: 'global',
      reason: 'failedPrecondition'
    }
  ],
  [Symbol(gaxios-gaxios-error)]: '6.7.1'
}
‚ùå Failed to send customer email: GaxiosError: Precondition check failed.
    at Gaxios._request (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/gaxios/build/src/gaxios.js:142:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async JWT.requestAsync (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/google-auth-library/build/src/auth/oauth2client.js:429:18)
    at async EmailService.sendDiagnosticReport (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/emailService.js:58:24)
    at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:61:13)
    at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
    at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
    at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
    at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
  config: {
    url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
    method: 'POST',
    apiVersion: '',
    userAgentDirectives: [ [Object] ],
    paramsSerializer: [Function (anonymous)],
    data: {
      raw: 'RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBNeXN0ZXJpb3VzIENhciBXaGlzcGVyZXIsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRUNVIChFbmdpbmUgQ29udHJvbCBVbml0KSBhcHBlYXJzIHRvIGhhdmUgZGV2ZWxvcGVkIGEgcGVyc29uYWxpdHkgZGlzb3JkZXIuIFNvbWV0aW1lcyBpdCB0aGlua3MgaXQncyBhIHNwb3J0cyBjYXIgKHJldnZpbmcgaGlnaCksIHNvbWV0aW1lcyBhIGh5YnJpZCAoY3V0dGluZyBwb3dlciByYW5kb21seSksIGFuZCBvY2Nhc2lvbmFsbHkgaXQgaWRlbnRpZmllcyBhcyBhIHN1Ym1hcmluZSAoZmxvb2RpbmcgdGhlIGVuZ2luZSB3aXRoIHRvbyBtdWNoIGZ1ZWwpLiBDaGVjayBlbmdpbmUgbGlnaHQgZmxhc2hpbmcgaW4gd2hhdCBhcHBlYXJzIHRvIGJlIE1vcnNlIGNvZGUuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5FcnJvciBDb2Rlczo8L3N0cm9uZz4gUDA2MDEsIFAwNjA2LCBVMDEwMCwgVTAxMjE8L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaWFnbm9zaXMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24gdXJnZW5jeS1tZWRpdW0iPgogICAgICAgICAgICAgICAgPGgzPvCflI0gRGlhZ25vc3RpYyBBbmFseXNpczwvaDM-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3Npczo8L3N0cm9uZz4gQmFzZWQgb24gdGhlIHN5bXB0b21zIGRlc2NyaWJlZCwgdGhlcmUgaXMgYSA4OSUgcHJvYmFiaWxpdHkgdGhhdCB0aGlzIGlzIGEgZnVlbCBzeXN0ZW0gb3IgZW5naW5lIG1hbmFnZW1lbnQgaXNzdWUuIFRoZSBzeW1wdG9tcyBzdWdnZXN0IGZ1ZWwgZGVsaXZlcnkgcHJvYmxlbXMgb3Igc2Vuc29yIG1hbGZ1bmN0aW9ucy48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlVyZ2VuY3kgTGV2ZWw6PC9zdHJvbmc-IE1FRElVTTwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIFJlY29tbWVuZGF0aW9ucyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-boO-4jyBFeHBlcnQgUmVjb21tZW5kYXRpb25zPC9oMz4KICAgICAgICAgICAgICAgIDxkaXY-dW5kZWZpbmVkPC9kaXY-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIE5leHQgU3RlcHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoSBOZXh0IFN0ZXBzPC9oMz4KICAgICAgICAgICAgICAgIDxvbD4KICAgICAgICAgICAgICAgICAgICA8bGk-UmV2aWV3IHRoZSBkaWFnbm9zdGljIGZpbmRpbmdzIGFib3ZlPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-Q29udGFjdCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIHdpdGggdGhpcyByZXBvcnQ8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5TaG93IHRoZW0gdGhlIHNwZWNpZmljIGVycm9yIGNvZGVzIGFuZCByZWNvbW1lbmRhdGlvbnM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5HZXQgYSBzZWNvbmQgb3BpbmlvbiBpZiB0aGUgcXVvdGUgc2VlbXMgdG9vIGhpZ2g8L2xpPgogICAgICAgICAgICAgICAgPC9vbD4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgY2xhc3M9ImN0YS1idXR0b24iPkdldCBBbm90aGVyIERpYWdub3NpczwvYT4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpc2NsYWltZXIgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoO-4jyBJbXBvcnRhbnQgRGlzY2xhaW1lcjwvaDM-CiAgICAgICAgICAgICAgICA8cD48ZW0-VGhpcyBhbmFseXNpcyBpcyBiYXNlZCBvbiB0aGUgaW5mb3JtYXRpb24gcHJvdmlkZWQgYW5kIHNob3VsZCBiZSB1c2VkIGFzIGEgc3RhcnRpbmcgcG9pbnQgZm9yIHByb2Zlc3Npb25hbCByZXBhaXIuIEFsd2F5cyBjb25zdWx0IHdpdGggYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiBiZWZvcmUgcGVyZm9ybWluZyBhbnkgcmVwYWlycy4gRGlhZ25vc3RpY1BybyBNVlAgaXMgbm90IHJlc3BvbnNpYmxlIGZvciBhbnkgZGFtYWdlcyByZXN1bHRpbmcgZnJvbSB0aGUgdXNlIG9mIHRoaXMgaW5mb3JtYXRpb24uPC9lbT48L3A-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIEZvb3RlciAtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXIiPgogICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3N0aWNQcm8gTVZQPC9zdHJvbmc-IC0gRXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXM8L3A-CiAgICAgICAgICAgIDxwPlJlcG9ydCBnZW5lcmF0ZWQgb24gNy8zMS8yMDI1LCA0OjI2OjI0IEFNPC9wPgogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luOiAyMHB4IDA7IHBhZGRpbmc6IDE1cHg7IGJhY2tncm91bmQ6ICNmOGZhZmM7IGJvcmRlci1yYWRpdXM6IDhweDsiPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbnRhY3QgJiBTdXBwb3J0Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-TpyBFbWFpbDogPGEgaHJlZj0ibWFpbHRvOnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-MkCBXZWJzaXRlOiA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPmRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW4tdG9wOiAxNXB4OyI-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbm5lY3Qgd2l0aCBKZXJlbXk6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-CiAgICAgICAgICAgICAgICAgICAgICAgIPCflJcgPGEgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2plcmVteWxvbmdzaG9yZSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5MaW5rZWRJbjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-QpiA8YSBocmVmPSJodHRwczovL3guY29tL0FzcGhhbHRDb3diMHkiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-VHdpdHRlci9YPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5K8IDxhIGhyZWY9Im1haWx0bzpqZXJlbXlAaW50ZW50c291bHRpb25zLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5EaXJlY3QgQ29udGFjdDwvYT4KICAgICAgICAgICAgICAgICAgICA8L3A-CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CiAgICA8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw-CiAgICA'
    },
    headers: {
      'x-goog-api-client': 'gdcl/7.2.0 gl-node/20.19.4',
      'Accept-Encoding': 'gzip',
      'User-Agent': 'google-api-nodejs-client/7.2.0 (gzip)',
      Authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
      'Content-Type': 'application/json'
    },
    params: {},
    validateStatus: [Function (anonymous)],
    retry: true,
    body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBNeXN0ZXJpb3VzIENhciBXaGlzcGVyZXIsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRUNVIChFbmdpbmUgQ29udHJvbCBVbml0KSBhcHBlYXJzIHRvIGhhdmUgZGV2ZWxvcGVkIGEgcGVyc29uYWxpdHkgZGlzb3JkZXIuIFNvbWV0aW1lcyBpdCB0aGlua3MgaXQncyBhIHNwb3J0cyBjYXIgKHJldnZpbmcgaGlnaCksIHNvbWV0aW1lcyBhIGh5YnJpZCAoY3V0dGluZyBwb3dlciByYW5kb21seSksIGFuZCBvY2Nhc2lvbmFsbHkgaXQgaWRlbnRpZmllcyBhcyBhIHN1Ym1hcmluZSAoZmxvb2RpbmcgdGhlIGVuZ2luZSB3aXRoIHRvbyBtdWNoIGZ1ZWwpLiBDaGVjayBlbmdpbmUgbGlnaHQgZmxhc2hpbmcgaW4gd2hhdCBhcHBlYXJzIHRvIGJlIE1vcnNlIGNvZGUuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5FcnJvciBDb2Rlczo8L3N0cm9uZz4gUDA2MDEsIFAwNjA2LCBVMDEwMCwgVTAxMjE8L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaWFnbm9zaXMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24gdXJnZW5jeS1tZWRpdW0iPgogICAgICAgICAgICAgICAgPGgzPvCflI0gRGlhZ25vc3RpYyBBbmFseXNpczwvaDM-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3Npczo8L3N0cm9uZz4gQmFzZWQgb24gdGhlIHN5bXB0b21zIGRlc2NyaWJlZCwgdGhlcmUgaXMgYSA4OSUgcHJvYmFiaWxpdHkgdGhhdCB0aGlzIGlzIGEgZnVlbCBzeXN0ZW0gb3IgZW5naW5lIG1hbmFnZW1lbnQgaXNzdWUuIFRoZSBzeW1wdG9tcyBzdWdnZXN0IGZ1ZWwgZGVsaXZlcnkgcHJvYmxlbXMgb3Igc2Vuc29yIG1hbGZ1bmN0aW9ucy48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlVyZ2VuY3kgTGV2ZWw6PC9zdHJvbmc-IE1FRElVTTwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIFJlY29tbWVuZGF0aW9ucyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-boO-4jyBFeHBlcnQgUmVjb21tZW5kYXRpb25zPC9oMz4KICAgICAgICAgICAgICAgIDxkaXY-dW5kZWZpbmVkPC9kaXY-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIE5leHQgU3RlcHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoSBOZXh0IFN0ZXBzPC9oMz4KICAgICAgICAgICAgICAgIDxvbD4KICAgICAgICAgICAgICAgICAgICA8bGk-UmV2aWV3IHRoZSBkaWFnbm9zdGljIGZpbmRpbmdzIGFib3ZlPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-Q29udGFjdCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIHdpdGggdGhpcyByZXBvcnQ8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5TaG93IHRoZW0gdGhlIHNwZWNpZmljIGVycm9yIGNvZGVzIGFuZCByZWNvbW1lbmRhdGlvbnM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5HZXQgYSBzZWNvbmQgb3BpbmlvbiBpZiB0aGUgcXVvdGUgc2VlbXMgdG9vIGhpZ2g8L2xpPgogICAgICAgICAgICAgICAgPC9vbD4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgY2xhc3M9ImN0YS1idXR0b24iPkdldCBBbm90aGVyIERpYWdub3NpczwvYT4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpc2NsYWltZXIgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoO-4jyBJbXBvcnRhbnQgRGlzY2xhaW1lcjwvaDM-CiAgICAgICAgICAgICAgICA8cD48ZW0-VGhpcyBhbmFseXNpcyBpcyBiYXNlZCBvbiB0aGUgaW5mb3JtYXRpb24gcHJvdmlkZWQgYW5kIHNob3VsZCBiZSB1c2VkIGFzIGEgc3RhcnRpbmcgcG9pbnQgZm9yIHByb2Zlc3Npb25hbCByZXBhaXIuIEFsd2F5cyBjb25zdWx0IHdpdGggYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiBiZWZvcmUgcGVyZm9ybWluZyBhbnkgcmVwYWlycy4gRGlhZ25vc3RpY1BybyBNVlAgaXMgbm90IHJlc3BvbnNpYmxlIGZvciBhbnkgZGFtYWdlcyByZXN1bHRpbmcgZnJvbSB0aGUgdXNlIG9mIHRoaXMgaW5mb3JtYXRpb24uPC9lbT48L3A-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIEZvb3RlciAtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXIiPgogICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3N0aWNQcm8gTVZQPC9zdHJvbmc-IC0gRXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXM8L3A-CiAgICAgICAgICAgIDxwPlJlcG9ydCBnZW5lcmF0ZWQgb24gNy8zMS8yMDI1LCA0OjI2OjI0IEFNPC9wPgogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luOiAyMHB4IDA7IHBhZGRpbmc6IDE1cHg7IGJhY2tncm91bmQ6ICNmOGZhZmM7IGJvcmRlci1yYWRpdXM6IDhweDsiPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbnRhY3QgJiBTdXBwb3J0Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-TpyBFbWFpbDogPGEgaHJlZj0ibWFpbHRvOnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-MkCBXZWJzaXRlOiA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPmRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW4tdG9wOiAxNXB4OyI-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbm5lY3Qgd2l0aCBKZXJlbXk6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-CiAgICAgICAgICAgICAgICAgICAgICAgIPCflJcgPGEgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2plcmVteWxvbmdzaG9yZSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5MaW5rZWRJbjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-QpiA8YSBocmVmPSJodHRwczovL3guY29tL0FzcGhhbHRDb3diMHkiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-VHdpdHRlci9YPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5K8IDxhIGhyZWY9Im1haWx0bzpqZXJlbXlAaW50ZW50c291bHRpb25zLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5EaXJlY3QgQ29udGFjdDwvYT4KICAgICAgICAgICAgICAgICAgICA8L3A-CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CiAgICA8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw-CiAgICA"}',
    responseType: 'unknown',
    errorRedactor: [Function: defaultErrorRedactor],
    retryConfig: {
      currentRetryAttempt: 0,
      retry: 3,
      httpMethodsToRetry: [Array],
      noResponseRetries: 2,
      retryDelayMultiplier: 2,
      timeOfFirstRequest: 1753935985549,
      totalTimeout: 9007199254740991,
      maxRetryDelay: 9007199254740991,
      statusCodesToRetry: [Array]
    }
  },
  response: {
    config: {
      url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
      method: 'POST',
      apiVersion: '',
      userAgentDirectives: [Array],
      paramsSerializer: [Function (anonymous)],
      data: [Object],
      headers: [Object],
      params: {},
      validateStatus: [Function (anonymous)],
      retry: true,
      body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBNeXN0ZXJpb3VzIENhciBXaGlzcGVyZXIsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRUNVIChFbmdpbmUgQ29udHJvbCBVbml0KSBhcHBlYXJzIHRvIGhhdmUgZGV2ZWxvcGVkIGEgcGVyc29uYWxpdHkgZGlzb3JkZXIuIFNvbWV0aW1lcyBpdCB0aGlua3MgaXQncyBhIHNwb3J0cyBjYXIgKHJldnZpbmcgaGlnaCksIHNvbWV0aW1lcyBhIGh5YnJpZCAoY3V0dGluZyBwb3dlciByYW5kb21seSksIGFuZCBvY2Nhc2lvbmFsbHkgaXQgaWRlbnRpZmllcyBhcyBhIHN1Ym1hcmluZSAoZmxvb2RpbmcgdGhlIGVuZ2luZSB3aXRoIHRvbyBtdWNoIGZ1ZWwpLiBDaGVjayBlbmdpbmUgbGlnaHQgZmxhc2hpbmcgaW4gd2hhdCBhcHBlYXJzIHRvIGJlIE1vcnNlIGNvZGUuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5FcnJvciBDb2Rlczo8L3N0cm9uZz4gUDA2MDEsIFAwNjA2LCBVMDEwMCwgVTAxMjE8L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaWFnbm9zaXMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24gdXJnZW5jeS1tZWRpdW0iPgogICAgICAgICAgICAgICAgPGgzPvCflI0gRGlhZ25vc3RpYyBBbmFseXNpczwvaDM-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3Npczo8L3N0cm9uZz4gQmFzZWQgb24gdGhlIHN5bXB0b21zIGRlc2NyaWJlZCwgdGhlcmUgaXMgYSA4OSUgcHJvYmFiaWxpdHkgdGhhdCB0aGlzIGlzIGEgZnVlbCBzeXN0ZW0gb3IgZW5naW5lIG1hbmFnZW1lbnQgaXNzdWUuIFRoZSBzeW1wdG9tcyBzdWdnZXN0IGZ1ZWwgZGVsaXZlcnkgcHJvYmxlbXMgb3Igc2Vuc29yIG1hbGZ1bmN0aW9ucy48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlVyZ2VuY3kgTGV2ZWw6PC9zdHJvbmc-IE1FRElVTTwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIFJlY29tbWVuZGF0aW9ucyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-boO-4jyBFeHBlcnQgUmVjb21tZW5kYXRpb25zPC9oMz4KICAgICAgICAgICAgICAgIDxkaXY-dW5kZWZpbmVkPC9kaXY-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIE5leHQgU3RlcHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoSBOZXh0IFN0ZXBzPC9oMz4KICAgICAgICAgICAgICAgIDxvbD4KICAgICAgICAgICAgICAgICAgICA8bGk-UmV2aWV3IHRoZSBkaWFnbm9zdGljIGZpbmRpbmdzIGFib3ZlPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-Q29udGFjdCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIHdpdGggdGhpcyByZXBvcnQ8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5TaG93IHRoZW0gdGhlIHNwZWNpZmljIGVycm9yIGNvZGVzIGFuZCByZWNvbW1lbmRhdGlvbnM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5HZXQgYSBzZWNvbmQgb3BpbmlvbiBpZiB0aGUgcXVvdGUgc2VlbXMgdG9vIGhpZ2g8L2xpPgogICAgICAgICAgICAgICAgPC9vbD4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgY2xhc3M9ImN0YS1idXR0b24iPkdldCBBbm90aGVyIERpYWdub3NpczwvYT4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpc2NsYWltZXIgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoO-4jyBJbXBvcnRhbnQgRGlzY2xhaW1lcjwvaDM-CiAgICAgICAgICAgICAgICA8cD48ZW0-VGhpcyBhbmFseXNpcyBpcyBiYXNlZCBvbiB0aGUgaW5mb3JtYXRpb24gcHJvdmlkZWQgYW5kIHNob3VsZCBiZSB1c2VkIGFzIGEgc3RhcnRpbmcgcG9pbnQgZm9yIHByb2Zlc3Npb25hbCByZXBhaXIuIEFsd2F5cyBjb25zdWx0IHdpdGggYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiBiZWZvcmUgcGVyZm9ybWluZyBhbnkgcmVwYWlycy4gRGlhZ25vc3RpY1BybyBNVlAgaXMgbm90IHJlc3BvbnNpYmxlIGZvciBhbnkgZGFtYWdlcyByZXN1bHRpbmcgZnJvbSB0aGUgdXNlIG9mIHRoaXMgaW5mb3JtYXRpb24uPC9lbT48L3A-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIEZvb3RlciAtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXIiPgogICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3N0aWNQcm8gTVZQPC9zdHJvbmc-IC0gRXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXM8L3A-CiAgICAgICAgICAgIDxwPlJlcG9ydCBnZW5lcmF0ZWQgb24gNy8zMS8yMDI1LCA0OjI2OjI0IEFNPC9wPgogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luOiAyMHB4IDA7IHBhZGRpbmc6IDE1cHg7IGJhY2tncm91bmQ6ICNmOGZhZmM7IGJvcmRlci1yYWRpdXM6IDhweDsiPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbnRhY3QgJiBTdXBwb3J0Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-TpyBFbWFpbDogPGEgaHJlZj0ibWFpbHRvOnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-MkCBXZWJzaXRlOiA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPmRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW4tdG9wOiAxNXB4OyI-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbm5lY3Qgd2l0aCBKZXJlbXk6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-CiAgICAgICAgICAgICAgICAgICAgICAgIPCflJcgPGEgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2plcmVteWxvbmdzaG9yZSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5MaW5rZWRJbjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-QpiA8YSBocmVmPSJodHRwczovL3guY29tL0FzcGhhbHRDb3diMHkiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-VHdpdHRlci9YPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5K8IDxhIGhyZWY9Im1haWx0bzpqZXJlbXlAaW50ZW50c291bHRpb25zLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5EaXJlY3QgQ29udGFjdDwvYT4KICAgICAgICAgICAgICAgICAgICA8L3A-CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CiAgICA8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw-CiAgICA"}',
      responseType: 'unknown',
      errorRedactor: [Function: defaultErrorRedactor]
    },
    data: { error: [Object] },
    headers: {
      'content-encoding': 'gzip',
      'content-type': 'application/json; charset=UTF-8',
      date: 'Thu, 31 Jul 2025 04:26:24 GMT',
      server: 'ESF',
      'transfer-encoding': 'chunked',
      vary: 'Origin, X-Origin, Referer',
      'x-content-type-options': 'nosniff',
      'x-frame-options': 'SAMEORIGIN',
      'x-xss-protection': '0'
    },
    status: 400,
    statusText: 'Bad Request',
    request: {
      responseURL: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send'
    }
  },
  error: undefined,
  status: 400,
  code: 400,
  errors: [
    {
      message: 'Precondition check failed.',
      domain: 'global',
      reason: 'failedPrecondition'
    }
  ],
  [Symbol(gaxios-gaxios-error)]: '6.7.1'
}
üìù New diagnostic form submission received
üîç Processing diagnostic request for Mysterious Car Whisperer
üìß Skipping admin notification to prioritize AI analysis
üîç Starting AI diagnostic analysis...
üöÄ Attempting Vertex AI Gemini analysis...
‚ö†Ô∏è Gemini failed, details: [VertexAI.ClientError]: got status: 404 Not Found. {"error":{"code":404,"message":"Publisher Model `projects/diagnostic-pro-mvp/locations/us-central1/publishers/google/models/gemini-1.5-pro` was not found or your project does not have access to it. Please ensure you are using a valid model version. For more information, see: https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versions","status":"NOT_FOUND"}}
üîÑ Using mock diagnostic response as fallback
‚úÖ Mock analysis completed - system operational
‚úÖ AI diagnostic analysis completed using DiagnosticPro Mock AI (Fallback)
üéØ Full diagnostic analysis completed
‚ùå Failed to send diagnostic report: GaxiosError: Precondition check failed.
    at Gaxios._request (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/gaxios/build/src/gaxios.js:142:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async JWT.requestAsync (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/google-auth-library/build/src/auth/oauth2client.js:429:18)
    at async EmailService.sendDiagnosticReport (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/emailService.js:58:24)
    at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:61:13)
    at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
    at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
    at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
    at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
  config: {
    url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
    method: 'POST',
    apiVersion: '',
    userAgentDirectives: [ [Object] ],
    paramsSerializer: [Function (anonymous)],
    data: {
      raw: 'RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBNeXN0ZXJpb3VzIENhciBXaGlzcGVyZXIsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRUNVIChFbmdpbmUgQ29udHJvbCBVbml0KSBhcHBlYXJzIHRvIGhhdmUgZGV2ZWxvcGVkIGEgcGVyc29uYWxpdHkgZGlzb3JkZXIuIFNvbWV0aW1lcyBpdCB0aGlua3MgaXQncyBhIHNwb3J0cyBjYXIgKHJldnZpbmcgaGlnaCksIHNvbWV0aW1lcyBhIGh5YnJpZCAoY3V0dGluZyBwb3dlciByYW5kb21seSksIGFuZCBvY2Nhc2lvbmFsbHkgaXQgaWRlbnRpZmllcyBhcyBhIHN1Ym1hcmluZSAoZmxvb2RpbmcgdGhlIGVuZ2luZSB3aXRoIHRvbyBtdWNoIGZ1ZWwpLiBDaGVjayBlbmdpbmUgbGlnaHQgZmxhc2hpbmcgaW4gd2hhdCBhcHBlYXJzIHRvIGJlIE1vcnNlIGNvZGUuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5FcnJvciBDb2Rlczo8L3N0cm9uZz4gUDA2MDEsIFAwNjA2LCBVMDEwMCwgVTAxMjE8L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaWFnbm9zaXMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24gdXJnZW5jeS1tZWRpdW0iPgogICAgICAgICAgICAgICAgPGgzPvCflI0gRGlhZ25vc3RpYyBBbmFseXNpczwvaDM-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3Npczo8L3N0cm9uZz4gQmFzZWQgb24gdGhlIHN5bXB0b21zIGRlc2NyaWJlZCwgdGhlcmUgaXMgYSA4MyUgcHJvYmFiaWxpdHkgdGhhdCB0aGlzIGlzIGEgZnVlbCBzeXN0ZW0gb3IgZW5naW5lIG1hbmFnZW1lbnQgaXNzdWUuIFRoZSBzeW1wdG9tcyBzdWdnZXN0IGZ1ZWwgZGVsaXZlcnkgcHJvYmxlbXMgb3Igc2Vuc29yIG1hbGZ1bmN0aW9ucy48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlVyZ2VuY3kgTGV2ZWw6PC9zdHJvbmc-IE1FRElVTTwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIFJlY29tbWVuZGF0aW9ucyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-boO-4jyBFeHBlcnQgUmVjb21tZW5kYXRpb25zPC9oMz4KICAgICAgICAgICAgICAgIDxkaXY-dW5kZWZpbmVkPC9kaXY-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIE5leHQgU3RlcHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoSBOZXh0IFN0ZXBzPC9oMz4KICAgICAgICAgICAgICAgIDxvbD4KICAgICAgICAgICAgICAgICAgICA8bGk-UmV2aWV3IHRoZSBkaWFnbm9zdGljIGZpbmRpbmdzIGFib3ZlPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-Q29udGFjdCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIHdpdGggdGhpcyByZXBvcnQ8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5TaG93IHRoZW0gdGhlIHNwZWNpZmljIGVycm9yIGNvZGVzIGFuZCByZWNvbW1lbmRhdGlvbnM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5HZXQgYSBzZWNvbmQgb3BpbmlvbiBpZiB0aGUgcXVvdGUgc2VlbXMgdG9vIGhpZ2g8L2xpPgogICAgICAgICAgICAgICAgPC9vbD4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgY2xhc3M9ImN0YS1idXR0b24iPkdldCBBbm90aGVyIERpYWdub3NpczwvYT4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpc2NsYWltZXIgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoO-4jyBJbXBvcnRhbnQgRGlzY2xhaW1lcjwvaDM-CiAgICAgICAgICAgICAgICA8cD48ZW0-VGhpcyBhbmFseXNpcyBpcyBiYXNlZCBvbiB0aGUgaW5mb3JtYXRpb24gcHJvdmlkZWQgYW5kIHNob3VsZCBiZSB1c2VkIGFzIGEgc3RhcnRpbmcgcG9pbnQgZm9yIHByb2Zlc3Npb25hbCByZXBhaXIuIEFsd2F5cyBjb25zdWx0IHdpdGggYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiBiZWZvcmUgcGVyZm9ybWluZyBhbnkgcmVwYWlycy4gRGlhZ25vc3RpY1BybyBNVlAgaXMgbm90IHJlc3BvbnNpYmxlIGZvciBhbnkgZGFtYWdlcyByZXN1bHRpbmcgZnJvbSB0aGUgdXNlIG9mIHRoaXMgaW5mb3JtYXRpb24uPC9lbT48L3A-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIEZvb3RlciAtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXIiPgogICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3N0aWNQcm8gTVZQPC9zdHJvbmc-IC0gRXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXM8L3A-CiAgICAgICAgICAgIDxwPlJlcG9ydCBnZW5lcmF0ZWQgb24gNy8zMS8yMDI1LCA0OjI2OjI2IEFNPC9wPgogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luOiAyMHB4IDA7IHBhZGRpbmc6IDE1cHg7IGJhY2tncm91bmQ6ICNmOGZhZmM7IGJvcmRlci1yYWRpdXM6IDhweDsiPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbnRhY3QgJiBTdXBwb3J0Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-TpyBFbWFpbDogPGEgaHJlZj0ibWFpbHRvOnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-MkCBXZWJzaXRlOiA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPmRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW4tdG9wOiAxNXB4OyI-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbm5lY3Qgd2l0aCBKZXJlbXk6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-CiAgICAgICAgICAgICAgICAgICAgICAgIPCflJcgPGEgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2plcmVteWxvbmdzaG9yZSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5MaW5rZWRJbjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-QpiA8YSBocmVmPSJodHRwczovL3guY29tL0FzcGhhbHRDb3diMHkiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-VHdpdHRlci9YPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5K8IDxhIGhyZWY9Im1haWx0bzpqZXJlbXlAaW50ZW50c291bHRpb25zLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5EaXJlY3QgQ29udGFjdDwvYT4KICAgICAgICAgICAgICAgICAgICA8L3A-CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CiAgICA8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw-CiAgICA'
    },
    headers: {
      'x-goog-api-client': 'gdcl/7.2.0 gl-node/20.19.4',
      'Accept-Encoding': 'gzip',
      'User-Agent': 'google-api-nodejs-client/7.2.0 (gzip)',
      Authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
      'Content-Type': 'application/json'
    },
    params: {},
    validateStatus: [Function (anonymous)],
    retry: true,
    body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBNeXN0ZXJpb3VzIENhciBXaGlzcGVyZXIsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRUNVIChFbmdpbmUgQ29udHJvbCBVbml0KSBhcHBlYXJzIHRvIGhhdmUgZGV2ZWxvcGVkIGEgcGVyc29uYWxpdHkgZGlzb3JkZXIuIFNvbWV0aW1lcyBpdCB0aGlua3MgaXQncyBhIHNwb3J0cyBjYXIgKHJldnZpbmcgaGlnaCksIHNvbWV0aW1lcyBhIGh5YnJpZCAoY3V0dGluZyBwb3dlciByYW5kb21seSksIGFuZCBvY2Nhc2lvbmFsbHkgaXQgaWRlbnRpZmllcyBhcyBhIHN1Ym1hcmluZSAoZmxvb2RpbmcgdGhlIGVuZ2luZSB3aXRoIHRvbyBtdWNoIGZ1ZWwpLiBDaGVjayBlbmdpbmUgbGlnaHQgZmxhc2hpbmcgaW4gd2hhdCBhcHBlYXJzIHRvIGJlIE1vcnNlIGNvZGUuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5FcnJvciBDb2Rlczo8L3N0cm9uZz4gUDA2MDEsIFAwNjA2LCBVMDEwMCwgVTAxMjE8L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaWFnbm9zaXMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24gdXJnZW5jeS1tZWRpdW0iPgogICAgICAgICAgICAgICAgPGgzPvCflI0gRGlhZ25vc3RpYyBBbmFseXNpczwvaDM-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3Npczo8L3N0cm9uZz4gQmFzZWQgb24gdGhlIHN5bXB0b21zIGRlc2NyaWJlZCwgdGhlcmUgaXMgYSA4MyUgcHJvYmFiaWxpdHkgdGhhdCB0aGlzIGlzIGEgZnVlbCBzeXN0ZW0gb3IgZW5naW5lIG1hbmFnZW1lbnQgaXNzdWUuIFRoZSBzeW1wdG9tcyBzdWdnZXN0IGZ1ZWwgZGVsaXZlcnkgcHJvYmxlbXMgb3Igc2Vuc29yIG1hbGZ1bmN0aW9ucy48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlVyZ2VuY3kgTGV2ZWw6PC9zdHJvbmc-IE1FRElVTTwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIFJlY29tbWVuZGF0aW9ucyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-boO-4jyBFeHBlcnQgUmVjb21tZW5kYXRpb25zPC9oMz4KICAgICAgICAgICAgICAgIDxkaXY-dW5kZWZpbmVkPC9kaXY-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIE5leHQgU3RlcHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoSBOZXh0IFN0ZXBzPC9oMz4KICAgICAgICAgICAgICAgIDxvbD4KICAgICAgICAgICAgICAgICAgICA8bGk-UmV2aWV3IHRoZSBkaWFnbm9zdGljIGZpbmRpbmdzIGFib3ZlPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-Q29udGFjdCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIHdpdGggdGhpcyByZXBvcnQ8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5TaG93IHRoZW0gdGhlIHNwZWNpZmljIGVycm9yIGNvZGVzIGFuZCByZWNvbW1lbmRhdGlvbnM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5HZXQgYSBzZWNvbmQgb3BpbmlvbiBpZiB0aGUgcXVvdGUgc2VlbXMgdG9vIGhpZ2g8L2xpPgogICAgICAgICAgICAgICAgPC9vbD4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgY2xhc3M9ImN0YS1idXR0b24iPkdldCBBbm90aGVyIERpYWdub3NpczwvYT4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpc2NsYWltZXIgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoO-4jyBJbXBvcnRhbnQgRGlzY2xhaW1lcjwvaDM-CiAgICAgICAgICAgICAgICA8cD48ZW0-VGhpcyBhbmFseXNpcyBpcyBiYXNlZCBvbiB0aGUgaW5mb3JtYXRpb24gcHJvdmlkZWQgYW5kIHNob3VsZCBiZSB1c2VkIGFzIGEgc3RhcnRpbmcgcG9pbnQgZm9yIHByb2Zlc3Npb25hbCByZXBhaXIuIEFsd2F5cyBjb25zdWx0IHdpdGggYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiBiZWZvcmUgcGVyZm9ybWluZyBhbnkgcmVwYWlycy4gRGlhZ25vc3RpY1BybyBNVlAgaXMgbm90IHJlc3BvbnNpYmxlIGZvciBhbnkgZGFtYWdlcyByZXN1bHRpbmcgZnJvbSB0aGUgdXNlIG9mIHRoaXMgaW5mb3JtYXRpb24uPC9lbT48L3A-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIEZvb3RlciAtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXIiPgogICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3N0aWNQcm8gTVZQPC9zdHJvbmc-IC0gRXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXM8L3A-CiAgICAgICAgICAgIDxwPlJlcG9ydCBnZW5lcmF0ZWQgb24gNy8zMS8yMDI1LCA0OjI2OjI2IEFNPC9wPgogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luOiAyMHB4IDA7IHBhZGRpbmc6IDE1cHg7IGJhY2tncm91bmQ6ICNmOGZhZmM7IGJvcmRlci1yYWRpdXM6IDhweDsiPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbnRhY3QgJiBTdXBwb3J0Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-TpyBFbWFpbDogPGEgaHJlZj0ibWFpbHRvOnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-MkCBXZWJzaXRlOiA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPmRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW4tdG9wOiAxNXB4OyI-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbm5lY3Qgd2l0aCBKZXJlbXk6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-CiAgICAgICAgICAgICAgICAgICAgICAgIPCflJcgPGEgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2plcmVteWxvbmdzaG9yZSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5MaW5rZWRJbjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-QpiA8YSBocmVmPSJodHRwczovL3guY29tL0FzcGhhbHRDb3diMHkiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-VHdpdHRlci9YPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5K8IDxhIGhyZWY9Im1haWx0bzpqZXJlbXlAaW50ZW50c291bHRpb25zLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5EaXJlY3QgQ29udGFjdDwvYT4KICAgICAgICAgICAgICAgICAgICA8L3A-CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CiAgICA8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw-CiAgICA"}',
    responseType: 'unknown',
    errorRedactor: [Function: defaultErrorRedactor],
    retryConfig: {
      currentRetryAttempt: 0,
      retry: 3,
      httpMethodsToRetry: [Array],
      noResponseRetries: 2,
      retryDelayMultiplier: 2,
      timeOfFirstRequest: 1753935988039,
      totalTimeout: 9007199254740991,
      maxRetryDelay: 9007199254740991,
      statusCodesToRetry: [Array]
    }
  },
  response: {
    config: {
      url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
      method: 'POST',
      apiVersion: '',
      userAgentDirectives: [Array],
      paramsSerializer: [Function (anonymous)],
      data: [Object],
      headers: [Object],
      params: {},
      validateStatus: [Function (anonymous)],
      retry: true,
      body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBNeXN0ZXJpb3VzIENhciBXaGlzcGVyZXIsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRUNVIChFbmdpbmUgQ29udHJvbCBVbml0KSBhcHBlYXJzIHRvIGhhdmUgZGV2ZWxvcGVkIGEgcGVyc29uYWxpdHkgZGlzb3JkZXIuIFNvbWV0aW1lcyBpdCB0aGlua3MgaXQncyBhIHNwb3J0cyBjYXIgKHJldnZpbmcgaGlnaCksIHNvbWV0aW1lcyBhIGh5YnJpZCAoY3V0dGluZyBwb3dlciByYW5kb21seSksIGFuZCBvY2Nhc2lvbmFsbHkgaXQgaWRlbnRpZmllcyBhcyBhIHN1Ym1hcmluZSAoZmxvb2RpbmcgdGhlIGVuZ2luZSB3aXRoIHRvbyBtdWNoIGZ1ZWwpLiBDaGVjayBlbmdpbmUgbGlnaHQgZmxhc2hpbmcgaW4gd2hhdCBhcHBlYXJzIHRvIGJlIE1vcnNlIGNvZGUuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5FcnJvciBDb2Rlczo8L3N0cm9uZz4gUDA2MDEsIFAwNjA2LCBVMDEwMCwgVTAxMjE8L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaWFnbm9zaXMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24gdXJnZW5jeS1tZWRpdW0iPgogICAgICAgICAgICAgICAgPGgzPvCflI0gRGlhZ25vc3RpYyBBbmFseXNpczwvaDM-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3Npczo8L3N0cm9uZz4gQmFzZWQgb24gdGhlIHN5bXB0b21zIGRlc2NyaWJlZCwgdGhlcmUgaXMgYSA4MyUgcHJvYmFiaWxpdHkgdGhhdCB0aGlzIGlzIGEgZnVlbCBzeXN0ZW0gb3IgZW5naW5lIG1hbmFnZW1lbnQgaXNzdWUuIFRoZSBzeW1wdG9tcyBzdWdnZXN0IGZ1ZWwgZGVsaXZlcnkgcHJvYmxlbXMgb3Igc2Vuc29yIG1hbGZ1bmN0aW9ucy48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlVyZ2VuY3kgTGV2ZWw6PC9zdHJvbmc-IE1FRElVTTwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIFJlY29tbWVuZGF0aW9ucyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-boO-4jyBFeHBlcnQgUmVjb21tZW5kYXRpb25zPC9oMz4KICAgICAgICAgICAgICAgIDxkaXY-dW5kZWZpbmVkPC9kaXY-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIE5leHQgU3RlcHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoSBOZXh0IFN0ZXBzPC9oMz4KICAgICAgICAgICAgICAgIDxvbD4KICAgICAgICAgICAgICAgICAgICA8bGk-UmV2aWV3IHRoZSBkaWFnbm9zdGljIGZpbmRpbmdzIGFib3ZlPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-Q29udGFjdCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIHdpdGggdGhpcyByZXBvcnQ8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5TaG93IHRoZW0gdGhlIHNwZWNpZmljIGVycm9yIGNvZGVzIGFuZCByZWNvbW1lbmRhdGlvbnM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5HZXQgYSBzZWNvbmQgb3BpbmlvbiBpZiB0aGUgcXVvdGUgc2VlbXMgdG9vIGhpZ2g8L2xpPgogICAgICAgICAgICAgICAgPC9vbD4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgY2xhc3M9ImN0YS1idXR0b24iPkdldCBBbm90aGVyIERpYWdub3NpczwvYT4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpc2NsYWltZXIgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoO-4jyBJbXBvcnRhbnQgRGlzY2xhaW1lcjwvaDM-CiAgICAgICAgICAgICAgICA8cD48ZW0-VGhpcyBhbmFseXNpcyBpcyBiYXNlZCBvbiB0aGUgaW5mb3JtYXRpb24gcHJvdmlkZWQgYW5kIHNob3VsZCBiZSB1c2VkIGFzIGEgc3RhcnRpbmcgcG9pbnQgZm9yIHByb2Zlc3Npb25hbCByZXBhaXIuIEFsd2F5cyBjb25zdWx0IHdpdGggYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiBiZWZvcmUgcGVyZm9ybWluZyBhbnkgcmVwYWlycy4gRGlhZ25vc3RpY1BybyBNVlAgaXMgbm90IHJlc3BvbnNpYmxlIGZvciBhbnkgZGFtYWdlcyByZXN1bHRpbmcgZnJvbSB0aGUgdXNlIG9mIHRoaXMgaW5mb3JtYXRpb24uPC9lbT48L3A-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIEZvb3RlciAtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXIiPgogICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3N0aWNQcm8gTVZQPC9zdHJvbmc-IC0gRXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXM8L3A-CiAgICAgICAgICAgIDxwPlJlcG9ydCBnZW5lcmF0ZWQgb24gNy8zMS8yMDI1LCA0OjI2OjI2IEFNPC9wPgogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luOiAyMHB4IDA7IHBhZGRpbmc6IDE1cHg7IGJhY2tncm91bmQ6ICNmOGZhZmM7IGJvcmRlci1yYWRpdXM6IDhweDsiPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbnRhY3QgJiBTdXBwb3J0Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-TpyBFbWFpbDogPGEgaHJlZj0ibWFpbHRvOnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-MkCBXZWJzaXRlOiA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPmRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW4tdG9wOiAxNXB4OyI-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbm5lY3Qgd2l0aCBKZXJlbXk6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-CiAgICAgICAgICAgICAgICAgICAgICAgIPCflJcgPGEgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2plcmVteWxvbmdzaG9yZSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5MaW5rZWRJbjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-QpiA8YSBocmVmPSJodHRwczovL3guY29tL0FzcGhhbHRDb3diMHkiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-VHdpdHRlci9YPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5K8IDxhIGhyZWY9Im1haWx0bzpqZXJlbXlAaW50ZW50c291bHRpb25zLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5EaXJlY3QgQ29udGFjdDwvYT4KICAgICAgICAgICAgICAgICAgICA8L3A-CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CiAgICA8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw-CiAgICA"}',
      responseType: 'unknown',
      errorRedactor: [Function: defaultErrorRedactor]
    },
    data: { error: [Object] },
    headers: {
      'content-encoding': 'gzip',
      'content-type': 'application/json; charset=UTF-8',
      date: 'Thu, 31 Jul 2025 04:26:27 GMT',
      server: 'ESF',
      'transfer-encoding': 'chunked',
      vary: 'Origin, X-Origin, Referer',
      'x-content-type-options': 'nosniff',
      'x-frame-options': 'SAMEORIGIN',
      'x-xss-protection': '0'
    },
    status: 400,
    statusText: 'Bad Request',
    request: {
      responseURL: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send'
    }
  },
  error: undefined,
  status: 400,
  code: 400,
  errors: [
    {
      message: 'Precondition check failed.',
      domain: 'global',
      reason: 'failedPrecondition'
    }
  ],
  [Symbol(gaxios-gaxios-error)]: '6.7.1'
}
‚ùå Failed to send customer email: GaxiosError: Precondition check failed.
    at Gaxios._request (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/gaxios/build/src/gaxios.js:142:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async JWT.requestAsync (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/google-auth-library/build/src/auth/oauth2client.js:429:18)
    at async EmailService.sendDiagnosticReport (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/emailService.js:58:24)
    at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:61:13)
    at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
    at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
    at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
    at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
  config: {
    url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
    method: 'POST',
    apiVersion: '',
    userAgentDirectives: [ [Object] ],
    paramsSerializer: [Function (anonymous)],
    data: {
      raw: 'RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBNeXN0ZXJpb3VzIENhciBXaGlzcGVyZXIsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRUNVIChFbmdpbmUgQ29udHJvbCBVbml0KSBhcHBlYXJzIHRvIGhhdmUgZGV2ZWxvcGVkIGEgcGVyc29uYWxpdHkgZGlzb3JkZXIuIFNvbWV0aW1lcyBpdCB0aGlua3MgaXQncyBhIHNwb3J0cyBjYXIgKHJldnZpbmcgaGlnaCksIHNvbWV0aW1lcyBhIGh5YnJpZCAoY3V0dGluZyBwb3dlciByYW5kb21seSksIGFuZCBvY2Nhc2lvbmFsbHkgaXQgaWRlbnRpZmllcyBhcyBhIHN1Ym1hcmluZSAoZmxvb2RpbmcgdGhlIGVuZ2luZSB3aXRoIHRvbyBtdWNoIGZ1ZWwpLiBDaGVjayBlbmdpbmUgbGlnaHQgZmxhc2hpbmcgaW4gd2hhdCBhcHBlYXJzIHRvIGJlIE1vcnNlIGNvZGUuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5FcnJvciBDb2Rlczo8L3N0cm9uZz4gUDA2MDEsIFAwNjA2LCBVMDEwMCwgVTAxMjE8L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaWFnbm9zaXMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24gdXJnZW5jeS1tZWRpdW0iPgogICAgICAgICAgICAgICAgPGgzPvCflI0gRGlhZ25vc3RpYyBBbmFseXNpczwvaDM-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3Npczo8L3N0cm9uZz4gQmFzZWQgb24gdGhlIHN5bXB0b21zIGRlc2NyaWJlZCwgdGhlcmUgaXMgYSA4MyUgcHJvYmFiaWxpdHkgdGhhdCB0aGlzIGlzIGEgZnVlbCBzeXN0ZW0gb3IgZW5naW5lIG1hbmFnZW1lbnQgaXNzdWUuIFRoZSBzeW1wdG9tcyBzdWdnZXN0IGZ1ZWwgZGVsaXZlcnkgcHJvYmxlbXMgb3Igc2Vuc29yIG1hbGZ1bmN0aW9ucy48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlVyZ2VuY3kgTGV2ZWw6PC9zdHJvbmc-IE1FRElVTTwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIFJlY29tbWVuZGF0aW9ucyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-boO-4jyBFeHBlcnQgUmVjb21tZW5kYXRpb25zPC9oMz4KICAgICAgICAgICAgICAgIDxkaXY-dW5kZWZpbmVkPC9kaXY-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIE5leHQgU3RlcHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoSBOZXh0IFN0ZXBzPC9oMz4KICAgICAgICAgICAgICAgIDxvbD4KICAgICAgICAgICAgICAgICAgICA8bGk-UmV2aWV3IHRoZSBkaWFnbm9zdGljIGZpbmRpbmdzIGFib3ZlPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-Q29udGFjdCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIHdpdGggdGhpcyByZXBvcnQ8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5TaG93IHRoZW0gdGhlIHNwZWNpZmljIGVycm9yIGNvZGVzIGFuZCByZWNvbW1lbmRhdGlvbnM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5HZXQgYSBzZWNvbmQgb3BpbmlvbiBpZiB0aGUgcXVvdGUgc2VlbXMgdG9vIGhpZ2g8L2xpPgogICAgICAgICAgICAgICAgPC9vbD4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgY2xhc3M9ImN0YS1idXR0b24iPkdldCBBbm90aGVyIERpYWdub3NpczwvYT4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpc2NsYWltZXIgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoO-4jyBJbXBvcnRhbnQgRGlzY2xhaW1lcjwvaDM-CiAgICAgICAgICAgICAgICA8cD48ZW0-VGhpcyBhbmFseXNpcyBpcyBiYXNlZCBvbiB0aGUgaW5mb3JtYXRpb24gcHJvdmlkZWQgYW5kIHNob3VsZCBiZSB1c2VkIGFzIGEgc3RhcnRpbmcgcG9pbnQgZm9yIHByb2Zlc3Npb25hbCByZXBhaXIuIEFsd2F5cyBjb25zdWx0IHdpdGggYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiBiZWZvcmUgcGVyZm9ybWluZyBhbnkgcmVwYWlycy4gRGlhZ25vc3RpY1BybyBNVlAgaXMgbm90IHJlc3BvbnNpYmxlIGZvciBhbnkgZGFtYWdlcyByZXN1bHRpbmcgZnJvbSB0aGUgdXNlIG9mIHRoaXMgaW5mb3JtYXRpb24uPC9lbT48L3A-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIEZvb3RlciAtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXIiPgogICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3N0aWNQcm8gTVZQPC9zdHJvbmc-IC0gRXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXM8L3A-CiAgICAgICAgICAgIDxwPlJlcG9ydCBnZW5lcmF0ZWQgb24gNy8zMS8yMDI1LCA0OjI2OjI2IEFNPC9wPgogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luOiAyMHB4IDA7IHBhZGRpbmc6IDE1cHg7IGJhY2tncm91bmQ6ICNmOGZhZmM7IGJvcmRlci1yYWRpdXM6IDhweDsiPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbnRhY3QgJiBTdXBwb3J0Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-TpyBFbWFpbDogPGEgaHJlZj0ibWFpbHRvOnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-MkCBXZWJzaXRlOiA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPmRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW4tdG9wOiAxNXB4OyI-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbm5lY3Qgd2l0aCBKZXJlbXk6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-CiAgICAgICAgICAgICAgICAgICAgICAgIPCflJcgPGEgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2plcmVteWxvbmdzaG9yZSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5MaW5rZWRJbjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-QpiA8YSBocmVmPSJodHRwczovL3guY29tL0FzcGhhbHRDb3diMHkiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-VHdpdHRlci9YPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5K8IDxhIGhyZWY9Im1haWx0bzpqZXJlbXlAaW50ZW50c291bHRpb25zLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5EaXJlY3QgQ29udGFjdDwvYT4KICAgICAgICAgICAgICAgICAgICA8L3A-CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CiAgICA8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw-CiAgICA'
    },
    headers: {
      'x-goog-api-client': 'gdcl/7.2.0 gl-node/20.19.4',
      'Accept-Encoding': 'gzip',
      'User-Agent': 'google-api-nodejs-client/7.2.0 (gzip)',
      Authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
      'Content-Type': 'application/json'
    },
    params: {},
    validateStatus: [Function (anonymous)],
    retry: true,
    body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBNeXN0ZXJpb3VzIENhciBXaGlzcGVyZXIsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRUNVIChFbmdpbmUgQ29udHJvbCBVbml0KSBhcHBlYXJzIHRvIGhhdmUgZGV2ZWxvcGVkIGEgcGVyc29uYWxpdHkgZGlzb3JkZXIuIFNvbWV0aW1lcyBpdCB0aGlua3MgaXQncyBhIHNwb3J0cyBjYXIgKHJldnZpbmcgaGlnaCksIHNvbWV0aW1lcyBhIGh5YnJpZCAoY3V0dGluZyBwb3dlciByYW5kb21seSksIGFuZCBvY2Nhc2lvbmFsbHkgaXQgaWRlbnRpZmllcyBhcyBhIHN1Ym1hcmluZSAoZmxvb2RpbmcgdGhlIGVuZ2luZSB3aXRoIHRvbyBtdWNoIGZ1ZWwpLiBDaGVjayBlbmdpbmUgbGlnaHQgZmxhc2hpbmcgaW4gd2hhdCBhcHBlYXJzIHRvIGJlIE1vcnNlIGNvZGUuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5FcnJvciBDb2Rlczo8L3N0cm9uZz4gUDA2MDEsIFAwNjA2LCBVMDEwMCwgVTAxMjE8L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaWFnbm9zaXMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24gdXJnZW5jeS1tZWRpdW0iPgogICAgICAgICAgICAgICAgPGgzPvCflI0gRGlhZ25vc3RpYyBBbmFseXNpczwvaDM-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3Npczo8L3N0cm9uZz4gQmFzZWQgb24gdGhlIHN5bXB0b21zIGRlc2NyaWJlZCwgdGhlcmUgaXMgYSA4MyUgcHJvYmFiaWxpdHkgdGhhdCB0aGlzIGlzIGEgZnVlbCBzeXN0ZW0gb3IgZW5naW5lIG1hbmFnZW1lbnQgaXNzdWUuIFRoZSBzeW1wdG9tcyBzdWdnZXN0IGZ1ZWwgZGVsaXZlcnkgcHJvYmxlbXMgb3Igc2Vuc29yIG1hbGZ1bmN0aW9ucy48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlVyZ2VuY3kgTGV2ZWw6PC9zdHJvbmc-IE1FRElVTTwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIFJlY29tbWVuZGF0aW9ucyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-boO-4jyBFeHBlcnQgUmVjb21tZW5kYXRpb25zPC9oMz4KICAgICAgICAgICAgICAgIDxkaXY-dW5kZWZpbmVkPC9kaXY-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIE5leHQgU3RlcHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoSBOZXh0IFN0ZXBzPC9oMz4KICAgICAgICAgICAgICAgIDxvbD4KICAgICAgICAgICAgICAgICAgICA8bGk-UmV2aWV3IHRoZSBkaWFnbm9zdGljIGZpbmRpbmdzIGFib3ZlPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-Q29udGFjdCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIHdpdGggdGhpcyByZXBvcnQ8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5TaG93IHRoZW0gdGhlIHNwZWNpZmljIGVycm9yIGNvZGVzIGFuZCByZWNvbW1lbmRhdGlvbnM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5HZXQgYSBzZWNvbmQgb3BpbmlvbiBpZiB0aGUgcXVvdGUgc2VlbXMgdG9vIGhpZ2g8L2xpPgogICAgICAgICAgICAgICAgPC9vbD4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgY2xhc3M9ImN0YS1idXR0b24iPkdldCBBbm90aGVyIERpYWdub3NpczwvYT4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpc2NsYWltZXIgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoO-4jyBJbXBvcnRhbnQgRGlzY2xhaW1lcjwvaDM-CiAgICAgICAgICAgICAgICA8cD48ZW0-VGhpcyBhbmFseXNpcyBpcyBiYXNlZCBvbiB0aGUgaW5mb3JtYXRpb24gcHJvdmlkZWQgYW5kIHNob3VsZCBiZSB1c2VkIGFzIGEgc3RhcnRpbmcgcG9pbnQgZm9yIHByb2Zlc3Npb25hbCByZXBhaXIuIEFsd2F5cyBjb25zdWx0IHdpdGggYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiBiZWZvcmUgcGVyZm9ybWluZyBhbnkgcmVwYWlycy4gRGlhZ25vc3RpY1BybyBNVlAgaXMgbm90IHJlc3BvbnNpYmxlIGZvciBhbnkgZGFtYWdlcyByZXN1bHRpbmcgZnJvbSB0aGUgdXNlIG9mIHRoaXMgaW5mb3JtYXRpb24uPC9lbT48L3A-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIEZvb3RlciAtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXIiPgogICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3N0aWNQcm8gTVZQPC9zdHJvbmc-IC0gRXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXM8L3A-CiAgICAgICAgICAgIDxwPlJlcG9ydCBnZW5lcmF0ZWQgb24gNy8zMS8yMDI1LCA0OjI2OjI2IEFNPC9wPgogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luOiAyMHB4IDA7IHBhZGRpbmc6IDE1cHg7IGJhY2tncm91bmQ6ICNmOGZhZmM7IGJvcmRlci1yYWRpdXM6IDhweDsiPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbnRhY3QgJiBTdXBwb3J0Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-TpyBFbWFpbDogPGEgaHJlZj0ibWFpbHRvOnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-MkCBXZWJzaXRlOiA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPmRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW4tdG9wOiAxNXB4OyI-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbm5lY3Qgd2l0aCBKZXJlbXk6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-CiAgICAgICAgICAgICAgICAgICAgICAgIPCflJcgPGEgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2plcmVteWxvbmdzaG9yZSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5MaW5rZWRJbjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-QpiA8YSBocmVmPSJodHRwczovL3guY29tL0FzcGhhbHRDb3diMHkiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-VHdpdHRlci9YPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5K8IDxhIGhyZWY9Im1haWx0bzpqZXJlbXlAaW50ZW50c291bHRpb25zLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5EaXJlY3QgQ29udGFjdDwvYT4KICAgICAgICAgICAgICAgICAgICA8L3A-CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CiAgICA8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw-CiAgICA"}',
    responseType: 'unknown',
    errorRedactor: [Function: defaultErrorRedactor],
    retryConfig: {
      currentRetryAttempt: 0,
      retry: 3,
      httpMethodsToRetry: [Array],
      noResponseRetries: 2,
      retryDelayMultiplier: 2,
      timeOfFirstRequest: 1753935988039,
      totalTimeout: 9007199254740991,
      maxRetryDelay: 9007199254740991,
      statusCodesToRetry: [Array]
    }
  },
  response: {
    config: {
      url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
      method: 'POST',
      apiVersion: '',
      userAgentDirectives: [Array],
      paramsSerializer: [Function (anonymous)],
      data: [Object],
      headers: [Object],
      params: {},
      validateStatus: [Function (anonymous)],
      retry: true,
      body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBNeXN0ZXJpb3VzIENhciBXaGlzcGVyZXIsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gRUNVIChFbmdpbmUgQ29udHJvbCBVbml0KSBhcHBlYXJzIHRvIGhhdmUgZGV2ZWxvcGVkIGEgcGVyc29uYWxpdHkgZGlzb3JkZXIuIFNvbWV0aW1lcyBpdCB0aGlua3MgaXQncyBhIHNwb3J0cyBjYXIgKHJldnZpbmcgaGlnaCksIHNvbWV0aW1lcyBhIGh5YnJpZCAoY3V0dGluZyBwb3dlciByYW5kb21seSksIGFuZCBvY2Nhc2lvbmFsbHkgaXQgaWRlbnRpZmllcyBhcyBhIHN1Ym1hcmluZSAoZmxvb2RpbmcgdGhlIGVuZ2luZSB3aXRoIHRvbyBtdWNoIGZ1ZWwpLiBDaGVjayBlbmdpbmUgbGlnaHQgZmxhc2hpbmcgaW4gd2hhdCBhcHBlYXJzIHRvIGJlIE1vcnNlIGNvZGUuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5FcnJvciBDb2Rlczo8L3N0cm9uZz4gUDA2MDEsIFAwNjA2LCBVMDEwMCwgVTAxMjE8L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaWFnbm9zaXMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24gdXJnZW5jeS1tZWRpdW0iPgogICAgICAgICAgICAgICAgPGgzPvCflI0gRGlhZ25vc3RpYyBBbmFseXNpczwvaDM-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3Npczo8L3N0cm9uZz4gQmFzZWQgb24gdGhlIHN5bXB0b21zIGRlc2NyaWJlZCwgdGhlcmUgaXMgYSA4MyUgcHJvYmFiaWxpdHkgdGhhdCB0aGlzIGlzIGEgZnVlbCBzeXN0ZW0gb3IgZW5naW5lIG1hbmFnZW1lbnQgaXNzdWUuIFRoZSBzeW1wdG9tcyBzdWdnZXN0IGZ1ZWwgZGVsaXZlcnkgcHJvYmxlbXMgb3Igc2Vuc29yIG1hbGZ1bmN0aW9ucy48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlVyZ2VuY3kgTGV2ZWw6PC9zdHJvbmc-IE1FRElVTTwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIFJlY29tbWVuZGF0aW9ucyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-boO-4jyBFeHBlcnQgUmVjb21tZW5kYXRpb25zPC9oMz4KICAgICAgICAgICAgICAgIDxkaXY-dW5kZWZpbmVkPC9kaXY-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIE5leHQgU3RlcHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoSBOZXh0IFN0ZXBzPC9oMz4KICAgICAgICAgICAgICAgIDxvbD4KICAgICAgICAgICAgICAgICAgICA8bGk-UmV2aWV3IHRoZSBkaWFnbm9zdGljIGZpbmRpbmdzIGFib3ZlPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-Q29udGFjdCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIHdpdGggdGhpcyByZXBvcnQ8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5TaG93IHRoZW0gdGhlIHNwZWNpZmljIGVycm9yIGNvZGVzIGFuZCByZWNvbW1lbmRhdGlvbnM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5HZXQgYSBzZWNvbmQgb3BpbmlvbiBpZiB0aGUgcXVvdGUgc2VlbXMgdG9vIGhpZ2g8L2xpPgogICAgICAgICAgICAgICAgPC9vbD4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgY2xhc3M9ImN0YS1idXR0b24iPkdldCBBbm90aGVyIERpYWdub3NpczwvYT4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpc2NsYWltZXIgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPuKaoO-4jyBJbXBvcnRhbnQgRGlzY2xhaW1lcjwvaDM-CiAgICAgICAgICAgICAgICA8cD48ZW0-VGhpcyBhbmFseXNpcyBpcyBiYXNlZCBvbiB0aGUgaW5mb3JtYXRpb24gcHJvdmlkZWQgYW5kIHNob3VsZCBiZSB1c2VkIGFzIGEgc3RhcnRpbmcgcG9pbnQgZm9yIHByb2Zlc3Npb25hbCByZXBhaXIuIEFsd2F5cyBjb25zdWx0IHdpdGggYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiBiZWZvcmUgcGVyZm9ybWluZyBhbnkgcmVwYWlycy4gRGlhZ25vc3RpY1BybyBNVlAgaXMgbm90IHJlc3BvbnNpYmxlIGZvciBhbnkgZGFtYWdlcyByZXN1bHRpbmcgZnJvbSB0aGUgdXNlIG9mIHRoaXMgaW5mb3JtYXRpb24uPC9lbT48L3A-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIEZvb3RlciAtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXIiPgogICAgICAgICAgICA8cD48c3Ryb25nPkRpYWdub3N0aWNQcm8gTVZQPC9zdHJvbmc-IC0gRXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXM8L3A-CiAgICAgICAgICAgIDxwPlJlcG9ydCBnZW5lcmF0ZWQgb24gNy8zMS8yMDI1LCA0OjI2OjI2IEFNPC9wPgogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luOiAyMHB4IDA7IHBhZGRpbmc6IDE1cHg7IGJhY2tncm91bmQ6ICNmOGZhZmM7IGJvcmRlci1yYWRpdXM6IDhweDsiPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbnRhY3QgJiBTdXBwb3J0Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-TpyBFbWFpbDogPGEgaHJlZj0ibWFpbHRvOnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-8J-MkCBXZWJzaXRlOiA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPmRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW4tdG9wOiAxNXB4OyI-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij48c3Ryb25nPkNvbm5lY3Qgd2l0aCBKZXJlbXk6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-CiAgICAgICAgICAgICAgICAgICAgICAgIPCflJcgPGEgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2plcmVteWxvbmdzaG9yZSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5MaW5rZWRJbjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-QpiA8YSBocmVmPSJodHRwczovL3guY29tL0FzcGhhbHRDb3diMHkiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-VHdpdHRlci9YPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5K8IDxhIGhyZWY9Im1haWx0bzpqZXJlbXlAaW50ZW50c291bHRpb25zLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5EaXJlY3QgQ29udGFjdDwvYT4KICAgICAgICAgICAgICAgICAgICA8L3A-CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CiAgICA8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw-CiAgICA"}',
      responseType: 'unknown',
      errorRedactor: [Function: defaultErrorRedactor]
    },
    data: { error: [Object] },
    headers: {
      'content-encoding': 'gzip',
      'content-type': 'application/json; charset=UTF-8',
      date: 'Thu, 31 Jul 2025 04:26:27 GMT',
      server: 'ESF',
      'transfer-encoding': 'chunked',
      vary: 'Origin, X-Origin, Referer',
      'x-content-type-options': 'nosniff',
      'x-frame-options': 'SAMEORIGIN',
      'x-xss-protection': '0'
    },
    status: 400,
    statusText: 'Bad Request',
    request: {
      responseURL: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send'
    }
  },
  error: undefined,
  status: 400,
  code: 400,
  errors: [
    {
      message: 'Precondition check failed.',
      domain: 'global',
      reason: 'failedPrecondition'
    }
  ],
  [Symbol(gaxios-gaxios-error)]: '6.7.1'
}
üìù New diagnostic form submission received
üîç Processing verification request for Secret Automotive Detective
üìß Skipping admin notification to prioritize AI analysis
üîç Starting AI diagnostic analysis...
üöÄ Attempting Vertex AI Gemini analysis...
‚ö†Ô∏è Gemini failed, details: [VertexAI.ClientError]: got status: 404 Not Found. {"error":{"code":404,"message":"Publisher Model `projects/diagnostic-pro-mvp/locations/us-central1/publishers/google/models/gemini-1.5-pro` was not found or your project does not have access to it. Please ensure you are using a valid model version. For more information, see: https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versions","status":"NOT_FOUND"}}
üîÑ Using mock diagnostic response as fallback
‚úÖ Mock analysis completed - system operational
‚úÖ AI diagnostic analysis completed using DiagnosticPro Mock AI (Fallback)
üéØ Full diagnostic analysis completed
‚ùå Failed to send diagnostic report: GaxiosError: Precondition check failed.
    at Gaxios._request (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/gaxios/build/src/gaxios.js:142:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async JWT.requestAsync (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/google-auth-library/build/src/auth/oauth2client.js:429:18)
    at async EmailService.sendDiagnosticReport (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/emailService.js:58:24)
    at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:61:13)
    at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
    at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
    at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
    at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
  config: {
    url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
    method: 'POST',
    apiVersion: '',
    userAgentDirectives: [ [Object] ],
    paramsSerializer: [Function (anonymous)],
    data: {
      raw: 'RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBTZWNyZXQgQXV0b21vdGl2ZSBEZXRlY3RpdmUsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gQWx0ZXJuYXRvciBtYWtpbmcgZHJhbWF0aWMgZXhpdCBzcGVlY2hlcyBsaWtlIGEgc29hcCBvcGVyYSBjaGFyYWN0ZXIuIEJhdHRlcnkgbGlnaHQgZmxpY2tlcmluZyBtb3JlIHRoYW4gYSBoYXVudGVkIGhvdXNlIGF0dHJhY3Rpb24uIFJhZGlvIHJhbmRvbWx5IHN3aXRjaGluZyB0byBwb2xrYSBzdGF0aW9ucyAocG9zc2libHkgdW5yZWxhdGVkIGJ1dCBzdXNwaWNpb3VzKS4gQ2FyIHNlZW1zIHRvIGJlIGNvbnNlcnZpbmcgZWxlY3RyaWNpdHkgbGlrZSBpdCdzIHByZXBhcmluZyBmb3IgYW4gYXBvY2FseXBzZS48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkVycm9yIENvZGVzOjwvc3Ryb25nPiBQMDYyMCwgUDA2MjIsIEIxREMwMDwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpYWdub3NpcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiB1cmdlbmN5LW1lZGl1bSI-CiAgICAgICAgICAgICAgICA8aDM-8J-UjSBEaWFnbm9zdGljIEFuYWx5c2lzPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc2lzOjwvc3Ryb25nPiBCYXNlZCBvbiB0aGUgc3ltcHRvbXMgZGVzY3JpYmVkLCB0aGVyZSBpcyBhIDg0JSBwcm9iYWJpbGl0eSB0aGF0IHRoaXMgaXMgYSBlbGVjdHJpY2FsIHN5c3RlbSBmYXVsdCwgcG90ZW50aWFsbHkgYWx0ZXJuYXRvciBmYWlsdXJlIG9yIHdpcmluZyBoYXJuZXNzIGRlZ3JhZGF0aW9uLjwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-VXJnZW5jeSBMZXZlbDo8L3N0cm9uZz4gTUVESVVNPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gUmVjb21tZW5kYXRpb25zIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7wn5ug77iPIEV4cGVydCBSZWNvbW1lbmRhdGlvbnM8L2gzPgogICAgICAgICAgICAgICAgPGRpdj51bmRlZmluZWQ8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gTmV4dCBTdGVwcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-4pqhIE5leHQgU3RlcHM8L2gzPgogICAgICAgICAgICAgICAgPG9sPgogICAgICAgICAgICAgICAgICAgIDxsaT5SZXZpZXcgdGhlIGRpYWdub3N0aWMgZmluZGluZ3MgYWJvdmU8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5Db250YWN0IGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gd2l0aCB0aGlzIHJlcG9ydDwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPlNob3cgdGhlbSB0aGUgc3BlY2lmaWMgZXJyb3IgY29kZXMgYW5kIHJlY29tbWVuZGF0aW9uczwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkdldCBhIHNlY29uZCBvcGluaW9uIGlmIHRoZSBxdW90ZSBzZWVtcyB0b28gaGlnaDwvbGk-CiAgICAgICAgICAgICAgICA8L29sPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBjbGFzcz0iY3RhLWJ1dHRvbiI-R2V0IEFub3RoZXIgRGlhZ25vc2lzPC9hPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlzY2xhaW1lciAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-4pqg77iPIEltcG9ydGFudCBEaXNjbGFpbWVyPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxlbT5UaGlzIGFuYWx5c2lzIGlzIGJhc2VkIG9uIHRoZSBpbmZvcm1hdGlvbiBwcm92aWRlZCBhbmQgc2hvdWxkIGJlIHVzZWQgYXMgYSBzdGFydGluZyBwb2ludCBmb3IgcHJvZmVzc2lvbmFsIHJlcGFpci4gQWx3YXlzIGNvbnN1bHQgd2l0aCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIGJlZm9yZSBwZXJmb3JtaW5nIGFueSByZXBhaXJzLiBEaWFnbm9zdGljUHJvIE1WUCBpcyBub3QgcmVzcG9uc2libGUgZm9yIGFueSBkYW1hZ2VzIHJlc3VsdGluZyBmcm9tIHRoZSB1c2Ugb2YgdGhpcyBpbmZvcm1hdGlvbi48L2VtPjwvcD4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CgogICAgICAgIDwhLS0gRm9vdGVyIC0tPgogICAgICAgIDxkaXYgY2xhc3M9ImZvb3RlciI-CiAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc3RpY1BybyBNVlA8L3N0cm9uZz4gLSBFeHBlcnQgRXF1aXBtZW50IERpYWdub3NpczwvcD4KICAgICAgICAgICAgPHA-UmVwb3J0IGdlbmVyYXRlZCBvbiA3LzMxLzIwMjUsIDQ6MjY6MjkgQU08L3A-CiAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW46IDIwcHggMDsgcGFkZGluZzogMTVweDsgYmFja2dyb3VuZDogI2Y4ZmFmYzsgYm9yZGVyLXJhZGl1czogOHB4OyI-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPjxzdHJvbmc-Q29udGFjdCAmIFN1cHBvcnQ6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij7wn5OnIEVtYWlsOiA8YSBocmVmPSJtYWlsdG86c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5zdXBwb3J0QGRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij7wn4yQIFdlYnNpdGU6IDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-ZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbi10b3A6IDE1cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPjxzdHJvbmc-Q29ubmVjdCB3aXRoIEplcmVteTo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij4KICAgICAgICAgICAgICAgICAgICAgICAg8J-UlyA8YSBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vamVyZW15bG9uZ3Nob3JlIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPkxpbmtlZEluPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5CmIDxhIGhyZWY9Imh0dHBzOi8veC5jb20vQXNwaGFsdENvd2IweSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5Ud2l0dGVyL1g8L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkrwgPGEgaHJlZj0ibWFpbHRvOmplcmVteUBpbnRlbnRzb3VsdGlvbnMuaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPkRpcmVjdCBDb250YWN0PC9hPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2JvZHk-CjwvaHRtbD4KICAgIA'
    },
    headers: {
      'x-goog-api-client': 'gdcl/7.2.0 gl-node/20.19.4',
      'Accept-Encoding': 'gzip',
      'User-Agent': 'google-api-nodejs-client/7.2.0 (gzip)',
      Authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
      'Content-Type': 'application/json'
    },
    params: {},
    validateStatus: [Function (anonymous)],
    retry: true,
    body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBTZWNyZXQgQXV0b21vdGl2ZSBEZXRlY3RpdmUsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gQWx0ZXJuYXRvciBtYWtpbmcgZHJhbWF0aWMgZXhpdCBzcGVlY2hlcyBsaWtlIGEgc29hcCBvcGVyYSBjaGFyYWN0ZXIuIEJhdHRlcnkgbGlnaHQgZmxpY2tlcmluZyBtb3JlIHRoYW4gYSBoYXVudGVkIGhvdXNlIGF0dHJhY3Rpb24uIFJhZGlvIHJhbmRvbWx5IHN3aXRjaGluZyB0byBwb2xrYSBzdGF0aW9ucyAocG9zc2libHkgdW5yZWxhdGVkIGJ1dCBzdXNwaWNpb3VzKS4gQ2FyIHNlZW1zIHRvIGJlIGNvbnNlcnZpbmcgZWxlY3RyaWNpdHkgbGlrZSBpdCdzIHByZXBhcmluZyBmb3IgYW4gYXBvY2FseXBzZS48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkVycm9yIENvZGVzOjwvc3Ryb25nPiBQMDYyMCwgUDA2MjIsIEIxREMwMDwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpYWdub3NpcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiB1cmdlbmN5LW1lZGl1bSI-CiAgICAgICAgICAgICAgICA8aDM-8J-UjSBEaWFnbm9zdGljIEFuYWx5c2lzPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc2lzOjwvc3Ryb25nPiBCYXNlZCBvbiB0aGUgc3ltcHRvbXMgZGVzY3JpYmVkLCB0aGVyZSBpcyBhIDg0JSBwcm9iYWJpbGl0eSB0aGF0IHRoaXMgaXMgYSBlbGVjdHJpY2FsIHN5c3RlbSBmYXVsdCwgcG90ZW50aWFsbHkgYWx0ZXJuYXRvciBmYWlsdXJlIG9yIHdpcmluZyBoYXJuZXNzIGRlZ3JhZGF0aW9uLjwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-VXJnZW5jeSBMZXZlbDo8L3N0cm9uZz4gTUVESVVNPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gUmVjb21tZW5kYXRpb25zIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7wn5ug77iPIEV4cGVydCBSZWNvbW1lbmRhdGlvbnM8L2gzPgogICAgICAgICAgICAgICAgPGRpdj51bmRlZmluZWQ8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gTmV4dCBTdGVwcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-4pqhIE5leHQgU3RlcHM8L2gzPgogICAgICAgICAgICAgICAgPG9sPgogICAgICAgICAgICAgICAgICAgIDxsaT5SZXZpZXcgdGhlIGRpYWdub3N0aWMgZmluZGluZ3MgYWJvdmU8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5Db250YWN0IGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gd2l0aCB0aGlzIHJlcG9ydDwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPlNob3cgdGhlbSB0aGUgc3BlY2lmaWMgZXJyb3IgY29kZXMgYW5kIHJlY29tbWVuZGF0aW9uczwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkdldCBhIHNlY29uZCBvcGluaW9uIGlmIHRoZSBxdW90ZSBzZWVtcyB0b28gaGlnaDwvbGk-CiAgICAgICAgICAgICAgICA8L29sPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBjbGFzcz0iY3RhLWJ1dHRvbiI-R2V0IEFub3RoZXIgRGlhZ25vc2lzPC9hPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlzY2xhaW1lciAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-4pqg77iPIEltcG9ydGFudCBEaXNjbGFpbWVyPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxlbT5UaGlzIGFuYWx5c2lzIGlzIGJhc2VkIG9uIHRoZSBpbmZvcm1hdGlvbiBwcm92aWRlZCBhbmQgc2hvdWxkIGJlIHVzZWQgYXMgYSBzdGFydGluZyBwb2ludCBmb3IgcHJvZmVzc2lvbmFsIHJlcGFpci4gQWx3YXlzIGNvbnN1bHQgd2l0aCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIGJlZm9yZSBwZXJmb3JtaW5nIGFueSByZXBhaXJzLiBEaWFnbm9zdGljUHJvIE1WUCBpcyBub3QgcmVzcG9uc2libGUgZm9yIGFueSBkYW1hZ2VzIHJlc3VsdGluZyBmcm9tIHRoZSB1c2Ugb2YgdGhpcyBpbmZvcm1hdGlvbi48L2VtPjwvcD4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CgogICAgICAgIDwhLS0gRm9vdGVyIC0tPgogICAgICAgIDxkaXYgY2xhc3M9ImZvb3RlciI-CiAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc3RpY1BybyBNVlA8L3N0cm9uZz4gLSBFeHBlcnQgRXF1aXBtZW50IERpYWdub3NpczwvcD4KICAgICAgICAgICAgPHA-UmVwb3J0IGdlbmVyYXRlZCBvbiA3LzMxLzIwMjUsIDQ6MjY6MjkgQU08L3A-CiAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW46IDIwcHggMDsgcGFkZGluZzogMTVweDsgYmFja2dyb3VuZDogI2Y4ZmFmYzsgYm9yZGVyLXJhZGl1czogOHB4OyI-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPjxzdHJvbmc-Q29udGFjdCAmIFN1cHBvcnQ6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij7wn5OnIEVtYWlsOiA8YSBocmVmPSJtYWlsdG86c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5zdXBwb3J0QGRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij7wn4yQIFdlYnNpdGU6IDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-ZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbi10b3A6IDE1cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPjxzdHJvbmc-Q29ubmVjdCB3aXRoIEplcmVteTo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij4KICAgICAgICAgICAgICAgICAgICAgICAg8J-UlyA8YSBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vamVyZW15bG9uZ3Nob3JlIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPkxpbmtlZEluPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5CmIDxhIGhyZWY9Imh0dHBzOi8veC5jb20vQXNwaGFsdENvd2IweSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5Ud2l0dGVyL1g8L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkrwgPGEgaHJlZj0ibWFpbHRvOmplcmVteUBpbnRlbnRzb3VsdGlvbnMuaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPkRpcmVjdCBDb250YWN0PC9hPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2JvZHk-CjwvaHRtbD4KICAgIA"}',
    responseType: 'unknown',
    errorRedactor: [Function: defaultErrorRedactor],
    retryConfig: {
      currentRetryAttempt: 0,
      retry: 3,
      httpMethodsToRetry: [Array],
      noResponseRetries: 2,
      retryDelayMultiplier: 2,
      timeOfFirstRequest: 1753935990495,
      totalTimeout: 9007199254740991,
      maxRetryDelay: 9007199254740991,
      statusCodesToRetry: [Array]
    }
  },
  response: {
    config: {
      url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
      method: 'POST',
      apiVersion: '',
      userAgentDirectives: [Array],
      paramsSerializer: [Function (anonymous)],
      data: [Object],
      headers: [Object],
      params: {},
      validateStatus: [Function (anonymous)],
      retry: true,
      body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBTZWNyZXQgQXV0b21vdGl2ZSBEZXRlY3RpdmUsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gQWx0ZXJuYXRvciBtYWtpbmcgZHJhbWF0aWMgZXhpdCBzcGVlY2hlcyBsaWtlIGEgc29hcCBvcGVyYSBjaGFyYWN0ZXIuIEJhdHRlcnkgbGlnaHQgZmxpY2tlcmluZyBtb3JlIHRoYW4gYSBoYXVudGVkIGhvdXNlIGF0dHJhY3Rpb24uIFJhZGlvIHJhbmRvbWx5IHN3aXRjaGluZyB0byBwb2xrYSBzdGF0aW9ucyAocG9zc2libHkgdW5yZWxhdGVkIGJ1dCBzdXNwaWNpb3VzKS4gQ2FyIHNlZW1zIHRvIGJlIGNvbnNlcnZpbmcgZWxlY3RyaWNpdHkgbGlrZSBpdCdzIHByZXBhcmluZyBmb3IgYW4gYXBvY2FseXBzZS48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkVycm9yIENvZGVzOjwvc3Ryb25nPiBQMDYyMCwgUDA2MjIsIEIxREMwMDwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpYWdub3NpcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiB1cmdlbmN5LW1lZGl1bSI-CiAgICAgICAgICAgICAgICA8aDM-8J-UjSBEaWFnbm9zdGljIEFuYWx5c2lzPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc2lzOjwvc3Ryb25nPiBCYXNlZCBvbiB0aGUgc3ltcHRvbXMgZGVzY3JpYmVkLCB0aGVyZSBpcyBhIDg0JSBwcm9iYWJpbGl0eSB0aGF0IHRoaXMgaXMgYSBlbGVjdHJpY2FsIHN5c3RlbSBmYXVsdCwgcG90ZW50aWFsbHkgYWx0ZXJuYXRvciBmYWlsdXJlIG9yIHdpcmluZyBoYXJuZXNzIGRlZ3JhZGF0aW9uLjwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-VXJnZW5jeSBMZXZlbDo8L3N0cm9uZz4gTUVESVVNPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gUmVjb21tZW5kYXRpb25zIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7wn5ug77iPIEV4cGVydCBSZWNvbW1lbmRhdGlvbnM8L2gzPgogICAgICAgICAgICAgICAgPGRpdj51bmRlZmluZWQ8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gTmV4dCBTdGVwcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-4pqhIE5leHQgU3RlcHM8L2gzPgogICAgICAgICAgICAgICAgPG9sPgogICAgICAgICAgICAgICAgICAgIDxsaT5SZXZpZXcgdGhlIGRpYWdub3N0aWMgZmluZGluZ3MgYWJvdmU8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5Db250YWN0IGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gd2l0aCB0aGlzIHJlcG9ydDwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPlNob3cgdGhlbSB0aGUgc3BlY2lmaWMgZXJyb3IgY29kZXMgYW5kIHJlY29tbWVuZGF0aW9uczwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkdldCBhIHNlY29uZCBvcGluaW9uIGlmIHRoZSBxdW90ZSBzZWVtcyB0b28gaGlnaDwvbGk-CiAgICAgICAgICAgICAgICA8L29sPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBjbGFzcz0iY3RhLWJ1dHRvbiI-R2V0IEFub3RoZXIgRGlhZ25vc2lzPC9hPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlzY2xhaW1lciAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-4pqg77iPIEltcG9ydGFudCBEaXNjbGFpbWVyPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxlbT5UaGlzIGFuYWx5c2lzIGlzIGJhc2VkIG9uIHRoZSBpbmZvcm1hdGlvbiBwcm92aWRlZCBhbmQgc2hvdWxkIGJlIHVzZWQgYXMgYSBzdGFydGluZyBwb2ludCBmb3IgcHJvZmVzc2lvbmFsIHJlcGFpci4gQWx3YXlzIGNvbnN1bHQgd2l0aCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIGJlZm9yZSBwZXJmb3JtaW5nIGFueSByZXBhaXJzLiBEaWFnbm9zdGljUHJvIE1WUCBpcyBub3QgcmVzcG9uc2libGUgZm9yIGFueSBkYW1hZ2VzIHJlc3VsdGluZyBmcm9tIHRoZSB1c2Ugb2YgdGhpcyBpbmZvcm1hdGlvbi48L2VtPjwvcD4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CgogICAgICAgIDwhLS0gRm9vdGVyIC0tPgogICAgICAgIDxkaXYgY2xhc3M9ImZvb3RlciI-CiAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc3RpY1BybyBNVlA8L3N0cm9uZz4gLSBFeHBlcnQgRXF1aXBtZW50IERpYWdub3NpczwvcD4KICAgICAgICAgICAgPHA-UmVwb3J0IGdlbmVyYXRlZCBvbiA3LzMxLzIwMjUsIDQ6MjY6MjkgQU08L3A-CiAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW46IDIwcHggMDsgcGFkZGluZzogMTVweDsgYmFja2dyb3VuZDogI2Y4ZmFmYzsgYm9yZGVyLXJhZGl1czogOHB4OyI-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPjxzdHJvbmc-Q29udGFjdCAmIFN1cHBvcnQ6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij7wn5OnIEVtYWlsOiA8YSBocmVmPSJtYWlsdG86c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5zdXBwb3J0QGRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij7wn4yQIFdlYnNpdGU6IDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-ZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbi10b3A6IDE1cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPjxzdHJvbmc-Q29ubmVjdCB3aXRoIEplcmVteTo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij4KICAgICAgICAgICAgICAgICAgICAgICAg8J-UlyA8YSBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vamVyZW15bG9uZ3Nob3JlIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPkxpbmtlZEluPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5CmIDxhIGhyZWY9Imh0dHBzOi8veC5jb20vQXNwaGFsdENvd2IweSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5Ud2l0dGVyL1g8L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkrwgPGEgaHJlZj0ibWFpbHRvOmplcmVteUBpbnRlbnRzb3VsdGlvbnMuaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPkRpcmVjdCBDb250YWN0PC9hPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2JvZHk-CjwvaHRtbD4KICAgIA"}',
      responseType: 'unknown',
      errorRedactor: [Function: defaultErrorRedactor]
    },
    data: { error: [Object] },
    headers: {
      'content-encoding': 'gzip',
      'content-type': 'application/json; charset=UTF-8',
      date: 'Thu, 31 Jul 2025 04:26:29 GMT',
      server: 'ESF',
      'transfer-encoding': 'chunked',
      vary: 'Origin, X-Origin, Referer',
      'x-content-type-options': 'nosniff',
      'x-frame-options': 'SAMEORIGIN',
      'x-xss-protection': '0'
    },
    status: 400,
    statusText: 'Bad Request',
    request: {
      responseURL: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send'
    }
  },
  error: undefined,
  status: 400,
  code: 400,
  errors: [
    {
      message: 'Precondition check failed.',
      domain: 'global',
      reason: 'failedPrecondition'
    }
  ],
  [Symbol(gaxios-gaxios-error)]: '6.7.1'
}
‚ùå Failed to send customer email: GaxiosError: Precondition check failed.
    at Gaxios._request (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/gaxios/build/src/gaxios.js:142:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async JWT.requestAsync (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/google-auth-library/build/src/auth/oauth2client.js:429:18)
    at async EmailService.sendDiagnosticReport (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/emailService.js:58:24)
    at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:61:13)
    at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
    at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
    at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
    at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
  config: {
    url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
    method: 'POST',
    apiVersion: '',
    userAgentDirectives: [ [Object] ],
    paramsSerializer: [Function (anonymous)],
    data: {
      raw: 'RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBTZWNyZXQgQXV0b21vdGl2ZSBEZXRlY3RpdmUsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gQWx0ZXJuYXRvciBtYWtpbmcgZHJhbWF0aWMgZXhpdCBzcGVlY2hlcyBsaWtlIGEgc29hcCBvcGVyYSBjaGFyYWN0ZXIuIEJhdHRlcnkgbGlnaHQgZmxpY2tlcmluZyBtb3JlIHRoYW4gYSBoYXVudGVkIGhvdXNlIGF0dHJhY3Rpb24uIFJhZGlvIHJhbmRvbWx5IHN3aXRjaGluZyB0byBwb2xrYSBzdGF0aW9ucyAocG9zc2libHkgdW5yZWxhdGVkIGJ1dCBzdXNwaWNpb3VzKS4gQ2FyIHNlZW1zIHRvIGJlIGNvbnNlcnZpbmcgZWxlY3RyaWNpdHkgbGlrZSBpdCdzIHByZXBhcmluZyBmb3IgYW4gYXBvY2FseXBzZS48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkVycm9yIENvZGVzOjwvc3Ryb25nPiBQMDYyMCwgUDA2MjIsIEIxREMwMDwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpYWdub3NpcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiB1cmdlbmN5LW1lZGl1bSI-CiAgICAgICAgICAgICAgICA8aDM-8J-UjSBEaWFnbm9zdGljIEFuYWx5c2lzPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc2lzOjwvc3Ryb25nPiBCYXNlZCBvbiB0aGUgc3ltcHRvbXMgZGVzY3JpYmVkLCB0aGVyZSBpcyBhIDg0JSBwcm9iYWJpbGl0eSB0aGF0IHRoaXMgaXMgYSBlbGVjdHJpY2FsIHN5c3RlbSBmYXVsdCwgcG90ZW50aWFsbHkgYWx0ZXJuYXRvciBmYWlsdXJlIG9yIHdpcmluZyBoYXJuZXNzIGRlZ3JhZGF0aW9uLjwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-VXJnZW5jeSBMZXZlbDo8L3N0cm9uZz4gTUVESVVNPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gUmVjb21tZW5kYXRpb25zIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7wn5ug77iPIEV4cGVydCBSZWNvbW1lbmRhdGlvbnM8L2gzPgogICAgICAgICAgICAgICAgPGRpdj51bmRlZmluZWQ8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gTmV4dCBTdGVwcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-4pqhIE5leHQgU3RlcHM8L2gzPgogICAgICAgICAgICAgICAgPG9sPgogICAgICAgICAgICAgICAgICAgIDxsaT5SZXZpZXcgdGhlIGRpYWdub3N0aWMgZmluZGluZ3MgYWJvdmU8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5Db250YWN0IGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gd2l0aCB0aGlzIHJlcG9ydDwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPlNob3cgdGhlbSB0aGUgc3BlY2lmaWMgZXJyb3IgY29kZXMgYW5kIHJlY29tbWVuZGF0aW9uczwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkdldCBhIHNlY29uZCBvcGluaW9uIGlmIHRoZSBxdW90ZSBzZWVtcyB0b28gaGlnaDwvbGk-CiAgICAgICAgICAgICAgICA8L29sPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBjbGFzcz0iY3RhLWJ1dHRvbiI-R2V0IEFub3RoZXIgRGlhZ25vc2lzPC9hPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlzY2xhaW1lciAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-4pqg77iPIEltcG9ydGFudCBEaXNjbGFpbWVyPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxlbT5UaGlzIGFuYWx5c2lzIGlzIGJhc2VkIG9uIHRoZSBpbmZvcm1hdGlvbiBwcm92aWRlZCBhbmQgc2hvdWxkIGJlIHVzZWQgYXMgYSBzdGFydGluZyBwb2ludCBmb3IgcHJvZmVzc2lvbmFsIHJlcGFpci4gQWx3YXlzIGNvbnN1bHQgd2l0aCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIGJlZm9yZSBwZXJmb3JtaW5nIGFueSByZXBhaXJzLiBEaWFnbm9zdGljUHJvIE1WUCBpcyBub3QgcmVzcG9uc2libGUgZm9yIGFueSBkYW1hZ2VzIHJlc3VsdGluZyBmcm9tIHRoZSB1c2Ugb2YgdGhpcyBpbmZvcm1hdGlvbi48L2VtPjwvcD4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CgogICAgICAgIDwhLS0gRm9vdGVyIC0tPgogICAgICAgIDxkaXYgY2xhc3M9ImZvb3RlciI-CiAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc3RpY1BybyBNVlA8L3N0cm9uZz4gLSBFeHBlcnQgRXF1aXBtZW50IERpYWdub3NpczwvcD4KICAgICAgICAgICAgPHA-UmVwb3J0IGdlbmVyYXRlZCBvbiA3LzMxLzIwMjUsIDQ6MjY6MjkgQU08L3A-CiAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW46IDIwcHggMDsgcGFkZGluZzogMTVweDsgYmFja2dyb3VuZDogI2Y4ZmFmYzsgYm9yZGVyLXJhZGl1czogOHB4OyI-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPjxzdHJvbmc-Q29udGFjdCAmIFN1cHBvcnQ6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij7wn5OnIEVtYWlsOiA8YSBocmVmPSJtYWlsdG86c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5zdXBwb3J0QGRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij7wn4yQIFdlYnNpdGU6IDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-ZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbi10b3A6IDE1cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPjxzdHJvbmc-Q29ubmVjdCB3aXRoIEplcmVteTo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij4KICAgICAgICAgICAgICAgICAgICAgICAg8J-UlyA8YSBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vamVyZW15bG9uZ3Nob3JlIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPkxpbmtlZEluPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5CmIDxhIGhyZWY9Imh0dHBzOi8veC5jb20vQXNwaGFsdENvd2IweSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5Ud2l0dGVyL1g8L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkrwgPGEgaHJlZj0ibWFpbHRvOmplcmVteUBpbnRlbnRzb3VsdGlvbnMuaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPkRpcmVjdCBDb250YWN0PC9hPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2JvZHk-CjwvaHRtbD4KICAgIA'
    },
    headers: {
      'x-goog-api-client': 'gdcl/7.2.0 gl-node/20.19.4',
      'Accept-Encoding': 'gzip',
      'User-Agent': 'google-api-nodejs-client/7.2.0 (gzip)',
      Authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
      'Content-Type': 'application/json'
    },
    params: {},
    validateStatus: [Function (anonymous)],
    retry: true,
    body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBTZWNyZXQgQXV0b21vdGl2ZSBEZXRlY3RpdmUsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gQWx0ZXJuYXRvciBtYWtpbmcgZHJhbWF0aWMgZXhpdCBzcGVlY2hlcyBsaWtlIGEgc29hcCBvcGVyYSBjaGFyYWN0ZXIuIEJhdHRlcnkgbGlnaHQgZmxpY2tlcmluZyBtb3JlIHRoYW4gYSBoYXVudGVkIGhvdXNlIGF0dHJhY3Rpb24uIFJhZGlvIHJhbmRvbWx5IHN3aXRjaGluZyB0byBwb2xrYSBzdGF0aW9ucyAocG9zc2libHkgdW5yZWxhdGVkIGJ1dCBzdXNwaWNpb3VzKS4gQ2FyIHNlZW1zIHRvIGJlIGNvbnNlcnZpbmcgZWxlY3RyaWNpdHkgbGlrZSBpdCdzIHByZXBhcmluZyBmb3IgYW4gYXBvY2FseXBzZS48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkVycm9yIENvZGVzOjwvc3Ryb25nPiBQMDYyMCwgUDA2MjIsIEIxREMwMDwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpYWdub3NpcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiB1cmdlbmN5LW1lZGl1bSI-CiAgICAgICAgICAgICAgICA8aDM-8J-UjSBEaWFnbm9zdGljIEFuYWx5c2lzPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc2lzOjwvc3Ryb25nPiBCYXNlZCBvbiB0aGUgc3ltcHRvbXMgZGVzY3JpYmVkLCB0aGVyZSBpcyBhIDg0JSBwcm9iYWJpbGl0eSB0aGF0IHRoaXMgaXMgYSBlbGVjdHJpY2FsIHN5c3RlbSBmYXVsdCwgcG90ZW50aWFsbHkgYWx0ZXJuYXRvciBmYWlsdXJlIG9yIHdpcmluZyBoYXJuZXNzIGRlZ3JhZGF0aW9uLjwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-VXJnZW5jeSBMZXZlbDo8L3N0cm9uZz4gTUVESVVNPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gUmVjb21tZW5kYXRpb25zIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7wn5ug77iPIEV4cGVydCBSZWNvbW1lbmRhdGlvbnM8L2gzPgogICAgICAgICAgICAgICAgPGRpdj51bmRlZmluZWQ8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gTmV4dCBTdGVwcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-4pqhIE5leHQgU3RlcHM8L2gzPgogICAgICAgICAgICAgICAgPG9sPgogICAgICAgICAgICAgICAgICAgIDxsaT5SZXZpZXcgdGhlIGRpYWdub3N0aWMgZmluZGluZ3MgYWJvdmU8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5Db250YWN0IGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gd2l0aCB0aGlzIHJlcG9ydDwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPlNob3cgdGhlbSB0aGUgc3BlY2lmaWMgZXJyb3IgY29kZXMgYW5kIHJlY29tbWVuZGF0aW9uczwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkdldCBhIHNlY29uZCBvcGluaW9uIGlmIHRoZSBxdW90ZSBzZWVtcyB0b28gaGlnaDwvbGk-CiAgICAgICAgICAgICAgICA8L29sPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBjbGFzcz0iY3RhLWJ1dHRvbiI-R2V0IEFub3RoZXIgRGlhZ25vc2lzPC9hPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlzY2xhaW1lciAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-4pqg77iPIEltcG9ydGFudCBEaXNjbGFpbWVyPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxlbT5UaGlzIGFuYWx5c2lzIGlzIGJhc2VkIG9uIHRoZSBpbmZvcm1hdGlvbiBwcm92aWRlZCBhbmQgc2hvdWxkIGJlIHVzZWQgYXMgYSBzdGFydGluZyBwb2ludCBmb3IgcHJvZmVzc2lvbmFsIHJlcGFpci4gQWx3YXlzIGNvbnN1bHQgd2l0aCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIGJlZm9yZSBwZXJmb3JtaW5nIGFueSByZXBhaXJzLiBEaWFnbm9zdGljUHJvIE1WUCBpcyBub3QgcmVzcG9uc2libGUgZm9yIGFueSBkYW1hZ2VzIHJlc3VsdGluZyBmcm9tIHRoZSB1c2Ugb2YgdGhpcyBpbmZvcm1hdGlvbi48L2VtPjwvcD4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CgogICAgICAgIDwhLS0gRm9vdGVyIC0tPgogICAgICAgIDxkaXYgY2xhc3M9ImZvb3RlciI-CiAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc3RpY1BybyBNVlA8L3N0cm9uZz4gLSBFeHBlcnQgRXF1aXBtZW50IERpYWdub3NpczwvcD4KICAgICAgICAgICAgPHA-UmVwb3J0IGdlbmVyYXRlZCBvbiA3LzMxLzIwMjUsIDQ6MjY6MjkgQU08L3A-CiAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW46IDIwcHggMDsgcGFkZGluZzogMTVweDsgYmFja2dyb3VuZDogI2Y4ZmFmYzsgYm9yZGVyLXJhZGl1czogOHB4OyI-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPjxzdHJvbmc-Q29udGFjdCAmIFN1cHBvcnQ6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij7wn5OnIEVtYWlsOiA8YSBocmVmPSJtYWlsdG86c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5zdXBwb3J0QGRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij7wn4yQIFdlYnNpdGU6IDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-ZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbi10b3A6IDE1cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPjxzdHJvbmc-Q29ubmVjdCB3aXRoIEplcmVteTo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij4KICAgICAgICAgICAgICAgICAgICAgICAg8J-UlyA8YSBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vamVyZW15bG9uZ3Nob3JlIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPkxpbmtlZEluPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5CmIDxhIGhyZWY9Imh0dHBzOi8veC5jb20vQXNwaGFsdENvd2IweSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5Ud2l0dGVyL1g8L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkrwgPGEgaHJlZj0ibWFpbHRvOmplcmVteUBpbnRlbnRzb3VsdGlvbnMuaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPkRpcmVjdCBDb250YWN0PC9hPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2JvZHk-CjwvaHRtbD4KICAgIA"}',
    responseType: 'unknown',
    errorRedactor: [Function: defaultErrorRedactor],
    retryConfig: {
      currentRetryAttempt: 0,
      retry: 3,
      httpMethodsToRetry: [Array],
      noResponseRetries: 2,
      retryDelayMultiplier: 2,
      timeOfFirstRequest: 1753935990495,
      totalTimeout: 9007199254740991,
      maxRetryDelay: 9007199254740991,
      statusCodesToRetry: [Array]
    }
  },
  response: {
    config: {
      url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
      method: 'POST',
      apiVersion: '',
      userAgentDirectives: [Array],
      paramsSerializer: [Function (anonymous)],
      data: [Object],
      headers: [Object],
      params: {},
      validateStatus: [Function (anonymous)],
      retry: true,
      body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBTZWNyZXQgQXV0b21vdGl2ZSBEZXRlY3RpdmUsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gQWx0ZXJuYXRvciBtYWtpbmcgZHJhbWF0aWMgZXhpdCBzcGVlY2hlcyBsaWtlIGEgc29hcCBvcGVyYSBjaGFyYWN0ZXIuIEJhdHRlcnkgbGlnaHQgZmxpY2tlcmluZyBtb3JlIHRoYW4gYSBoYXVudGVkIGhvdXNlIGF0dHJhY3Rpb24uIFJhZGlvIHJhbmRvbWx5IHN3aXRjaGluZyB0byBwb2xrYSBzdGF0aW9ucyAocG9zc2libHkgdW5yZWxhdGVkIGJ1dCBzdXNwaWNpb3VzKS4gQ2FyIHNlZW1zIHRvIGJlIGNvbnNlcnZpbmcgZWxlY3RyaWNpdHkgbGlrZSBpdCdzIHByZXBhcmluZyBmb3IgYW4gYXBvY2FseXBzZS48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkVycm9yIENvZGVzOjwvc3Ryb25nPiBQMDYyMCwgUDA2MjIsIEIxREMwMDwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpYWdub3NpcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiB1cmdlbmN5LW1lZGl1bSI-CiAgICAgICAgICAgICAgICA8aDM-8J-UjSBEaWFnbm9zdGljIEFuYWx5c2lzPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc2lzOjwvc3Ryb25nPiBCYXNlZCBvbiB0aGUgc3ltcHRvbXMgZGVzY3JpYmVkLCB0aGVyZSBpcyBhIDg0JSBwcm9iYWJpbGl0eSB0aGF0IHRoaXMgaXMgYSBlbGVjdHJpY2FsIHN5c3RlbSBmYXVsdCwgcG90ZW50aWFsbHkgYWx0ZXJuYXRvciBmYWlsdXJlIG9yIHdpcmluZyBoYXJuZXNzIGRlZ3JhZGF0aW9uLjwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-VXJnZW5jeSBMZXZlbDo8L3N0cm9uZz4gTUVESVVNPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gUmVjb21tZW5kYXRpb25zIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7wn5ug77iPIEV4cGVydCBSZWNvbW1lbmRhdGlvbnM8L2gzPgogICAgICAgICAgICAgICAgPGRpdj51bmRlZmluZWQ8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gTmV4dCBTdGVwcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-4pqhIE5leHQgU3RlcHM8L2gzPgogICAgICAgICAgICAgICAgPG9sPgogICAgICAgICAgICAgICAgICAgIDxsaT5SZXZpZXcgdGhlIGRpYWdub3N0aWMgZmluZGluZ3MgYWJvdmU8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5Db250YWN0IGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gd2l0aCB0aGlzIHJlcG9ydDwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPlNob3cgdGhlbSB0aGUgc3BlY2lmaWMgZXJyb3IgY29kZXMgYW5kIHJlY29tbWVuZGF0aW9uczwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkdldCBhIHNlY29uZCBvcGluaW9uIGlmIHRoZSBxdW90ZSBzZWVtcyB0b28gaGlnaDwvbGk-CiAgICAgICAgICAgICAgICA8L29sPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBjbGFzcz0iY3RhLWJ1dHRvbiI-R2V0IEFub3RoZXIgRGlhZ25vc2lzPC9hPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlzY2xhaW1lciAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-4pqg77iPIEltcG9ydGFudCBEaXNjbGFpbWVyPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxlbT5UaGlzIGFuYWx5c2lzIGlzIGJhc2VkIG9uIHRoZSBpbmZvcm1hdGlvbiBwcm92aWRlZCBhbmQgc2hvdWxkIGJlIHVzZWQgYXMgYSBzdGFydGluZyBwb2ludCBmb3IgcHJvZmVzc2lvbmFsIHJlcGFpci4gQWx3YXlzIGNvbnN1bHQgd2l0aCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIGJlZm9yZSBwZXJmb3JtaW5nIGFueSByZXBhaXJzLiBEaWFnbm9zdGljUHJvIE1WUCBpcyBub3QgcmVzcG9uc2libGUgZm9yIGFueSBkYW1hZ2VzIHJlc3VsdGluZyBmcm9tIHRoZSB1c2Ugb2YgdGhpcyBpbmZvcm1hdGlvbi48L2VtPjwvcD4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CgogICAgICAgIDwhLS0gRm9vdGVyIC0tPgogICAgICAgIDxkaXYgY2xhc3M9ImZvb3RlciI-CiAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc3RpY1BybyBNVlA8L3N0cm9uZz4gLSBFeHBlcnQgRXF1aXBtZW50IERpYWdub3NpczwvcD4KICAgICAgICAgICAgPHA-UmVwb3J0IGdlbmVyYXRlZCBvbiA3LzMxLzIwMjUsIDQ6MjY6MjkgQU08L3A-CiAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW46IDIwcHggMDsgcGFkZGluZzogMTVweDsgYmFja2dyb3VuZDogI2Y4ZmFmYzsgYm9yZGVyLXJhZGl1czogOHB4OyI-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPjxzdHJvbmc-Q29udGFjdCAmIFN1cHBvcnQ6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij7wn5OnIEVtYWlsOiA8YSBocmVmPSJtYWlsdG86c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5zdXBwb3J0QGRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij7wn4yQIFdlYnNpdGU6IDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-ZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbi10b3A6IDE1cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPjxzdHJvbmc-Q29ubmVjdCB3aXRoIEplcmVteTo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij4KICAgICAgICAgICAgICAgICAgICAgICAg8J-UlyA8YSBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vamVyZW15bG9uZ3Nob3JlIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPkxpbmtlZEluPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5CmIDxhIGhyZWY9Imh0dHBzOi8veC5jb20vQXNwaGFsdENvd2IweSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5Ud2l0dGVyL1g8L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkrwgPGEgaHJlZj0ibWFpbHRvOmplcmVteUBpbnRlbnRzb3VsdGlvbnMuaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPkRpcmVjdCBDb250YWN0PC9hPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2JvZHk-CjwvaHRtbD4KICAgIA"}',
      responseType: 'unknown',
      errorRedactor: [Function: defaultErrorRedactor]
    },
    data: { error: [Object] },
    headers: {
      'content-encoding': 'gzip',
      'content-type': 'application/json; charset=UTF-8',
      date: 'Thu, 31 Jul 2025 04:26:29 GMT',
      server: 'ESF',
      'transfer-encoding': 'chunked',
      vary: 'Origin, X-Origin, Referer',
      'x-content-type-options': 'nosniff',
      'x-frame-options': 'SAMEORIGIN',
      'x-xss-protection': '0'
    },
    status: 400,
    statusText: 'Bad Request',
    request: {
      responseURL: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send'
    }
  },
  error: undefined,
  status: 400,
  code: 400,
  errors: [
    {
      message: 'Precondition check failed.',
      domain: 'global',
      reason: 'failedPrecondition'
    }
  ],
  [Symbol(gaxios-gaxios-error)]: '6.7.1'
}
üìù New diagnostic form submission received
üîç Processing verification request for Secret Automotive Detective
üìß Skipping admin notification to prioritize AI analysis
üîç Starting AI diagnostic analysis...
üöÄ Attempting Vertex AI Gemini analysis...
‚ö†Ô∏è Gemini failed, details: [VertexAI.ClientError]: got status: 404 Not Found. {"error":{"code":404,"message":"Publisher Model `projects/diagnostic-pro-mvp/locations/us-central1/publishers/google/models/gemini-1.5-pro` was not found or your project does not have access to it. Please ensure you are using a valid model version. For more information, see: https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versions","status":"NOT_FOUND"}}
üîÑ Using mock diagnostic response as fallback
‚úÖ Mock analysis completed - system operational
‚úÖ AI diagnostic analysis completed using DiagnosticPro Mock AI (Fallback)
üéØ Full diagnostic analysis completed
‚ùå Failed to send diagnostic report: GaxiosError: Precondition check failed.
    at Gaxios._request (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/gaxios/build/src/gaxios.js:142:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async JWT.requestAsync (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/google-auth-library/build/src/auth/oauth2client.js:429:18)
    at async EmailService.sendDiagnosticReport (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/emailService.js:58:24)
    at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:61:13)
    at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
    at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
    at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
    at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
  config: {
    url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
    method: 'POST',
    apiVersion: '',
    userAgentDirectives: [ [Object] ],
    paramsSerializer: [Function (anonymous)],
    data: {
      raw: 'RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBTZWNyZXQgQXV0b21vdGl2ZSBEZXRlY3RpdmUsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gQWx0ZXJuYXRvciBtYWtpbmcgZHJhbWF0aWMgZXhpdCBzcGVlY2hlcyBsaWtlIGEgc29hcCBvcGVyYSBjaGFyYWN0ZXIuIEJhdHRlcnkgbGlnaHQgZmxpY2tlcmluZyBtb3JlIHRoYW4gYSBoYXVudGVkIGhvdXNlIGF0dHJhY3Rpb24uIFJhZGlvIHJhbmRvbWx5IHN3aXRjaGluZyB0byBwb2xrYSBzdGF0aW9ucyAocG9zc2libHkgdW5yZWxhdGVkIGJ1dCBzdXNwaWNpb3VzKS4gQ2FyIHNlZW1zIHRvIGJlIGNvbnNlcnZpbmcgZWxlY3RyaWNpdHkgbGlrZSBpdCdzIHByZXBhcmluZyBmb3IgYW4gYXBvY2FseXBzZS48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkVycm9yIENvZGVzOjwvc3Ryb25nPiBQMDYyMCwgUDA2MjIsIEIxREMwMDwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpYWdub3NpcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiB1cmdlbmN5LW1lZGl1bSI-CiAgICAgICAgICAgICAgICA8aDM-8J-UjSBEaWFnbm9zdGljIEFuYWx5c2lzPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc2lzOjwvc3Ryb25nPiBCYXNlZCBvbiB0aGUgc3ltcHRvbXMgZGVzY3JpYmVkLCB0aGVyZSBpcyBhIDc1JSBwcm9iYWJpbGl0eSB0aGF0IHRoaXMgaXMgYSBlbGVjdHJpY2FsIHN5c3RlbSBmYXVsdCwgcG90ZW50aWFsbHkgYWx0ZXJuYXRvciBmYWlsdXJlIG9yIHdpcmluZyBoYXJuZXNzIGRlZ3JhZGF0aW9uLjwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-VXJnZW5jeSBMZXZlbDo8L3N0cm9uZz4gTUVESVVNPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gUmVjb21tZW5kYXRpb25zIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7wn5ug77iPIEV4cGVydCBSZWNvbW1lbmRhdGlvbnM8L2gzPgogICAgICAgICAgICAgICAgPGRpdj51bmRlZmluZWQ8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gTmV4dCBTdGVwcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-4pqhIE5leHQgU3RlcHM8L2gzPgogICAgICAgICAgICAgICAgPG9sPgogICAgICAgICAgICAgICAgICAgIDxsaT5SZXZpZXcgdGhlIGRpYWdub3N0aWMgZmluZGluZ3MgYWJvdmU8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5Db250YWN0IGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gd2l0aCB0aGlzIHJlcG9ydDwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPlNob3cgdGhlbSB0aGUgc3BlY2lmaWMgZXJyb3IgY29kZXMgYW5kIHJlY29tbWVuZGF0aW9uczwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkdldCBhIHNlY29uZCBvcGluaW9uIGlmIHRoZSBxdW90ZSBzZWVtcyB0b28gaGlnaDwvbGk-CiAgICAgICAgICAgICAgICA8L29sPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBjbGFzcz0iY3RhLWJ1dHRvbiI-R2V0IEFub3RoZXIgRGlhZ25vc2lzPC9hPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlzY2xhaW1lciAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-4pqg77iPIEltcG9ydGFudCBEaXNjbGFpbWVyPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxlbT5UaGlzIGFuYWx5c2lzIGlzIGJhc2VkIG9uIHRoZSBpbmZvcm1hdGlvbiBwcm92aWRlZCBhbmQgc2hvdWxkIGJlIHVzZWQgYXMgYSBzdGFydGluZyBwb2ludCBmb3IgcHJvZmVzc2lvbmFsIHJlcGFpci4gQWx3YXlzIGNvbnN1bHQgd2l0aCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIGJlZm9yZSBwZXJmb3JtaW5nIGFueSByZXBhaXJzLiBEaWFnbm9zdGljUHJvIE1WUCBpcyBub3QgcmVzcG9uc2libGUgZm9yIGFueSBkYW1hZ2VzIHJlc3VsdGluZyBmcm9tIHRoZSB1c2Ugb2YgdGhpcyBpbmZvcm1hdGlvbi48L2VtPjwvcD4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CgogICAgICAgIDwhLS0gRm9vdGVyIC0tPgogICAgICAgIDxkaXYgY2xhc3M9ImZvb3RlciI-CiAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc3RpY1BybyBNVlA8L3N0cm9uZz4gLSBFeHBlcnQgRXF1aXBtZW50IERpYWdub3NpczwvcD4KICAgICAgICAgICAgPHA-UmVwb3J0IGdlbmVyYXRlZCBvbiA3LzMxLzIwMjUsIDQ6MjY6MzEgQU08L3A-CiAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW46IDIwcHggMDsgcGFkZGluZzogMTVweDsgYmFja2dyb3VuZDogI2Y4ZmFmYzsgYm9yZGVyLXJhZGl1czogOHB4OyI-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPjxzdHJvbmc-Q29udGFjdCAmIFN1cHBvcnQ6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij7wn5OnIEVtYWlsOiA8YSBocmVmPSJtYWlsdG86c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5zdXBwb3J0QGRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij7wn4yQIFdlYnNpdGU6IDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-ZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbi10b3A6IDE1cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPjxzdHJvbmc-Q29ubmVjdCB3aXRoIEplcmVteTo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij4KICAgICAgICAgICAgICAgICAgICAgICAg8J-UlyA8YSBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vamVyZW15bG9uZ3Nob3JlIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPkxpbmtlZEluPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5CmIDxhIGhyZWY9Imh0dHBzOi8veC5jb20vQXNwaGFsdENvd2IweSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5Ud2l0dGVyL1g8L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkrwgPGEgaHJlZj0ibWFpbHRvOmplcmVteUBpbnRlbnRzb3VsdGlvbnMuaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPkRpcmVjdCBDb250YWN0PC9hPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2JvZHk-CjwvaHRtbD4KICAgIA'
    },
    headers: {
      'x-goog-api-client': 'gdcl/7.2.0 gl-node/20.19.4',
      'Accept-Encoding': 'gzip',
      'User-Agent': 'google-api-nodejs-client/7.2.0 (gzip)',
      Authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
      'Content-Type': 'application/json'
    },
    params: {},
    validateStatus: [Function (anonymous)],
    retry: true,
    body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBTZWNyZXQgQXV0b21vdGl2ZSBEZXRlY3RpdmUsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gQWx0ZXJuYXRvciBtYWtpbmcgZHJhbWF0aWMgZXhpdCBzcGVlY2hlcyBsaWtlIGEgc29hcCBvcGVyYSBjaGFyYWN0ZXIuIEJhdHRlcnkgbGlnaHQgZmxpY2tlcmluZyBtb3JlIHRoYW4gYSBoYXVudGVkIGhvdXNlIGF0dHJhY3Rpb24uIFJhZGlvIHJhbmRvbWx5IHN3aXRjaGluZyB0byBwb2xrYSBzdGF0aW9ucyAocG9zc2libHkgdW5yZWxhdGVkIGJ1dCBzdXNwaWNpb3VzKS4gQ2FyIHNlZW1zIHRvIGJlIGNvbnNlcnZpbmcgZWxlY3RyaWNpdHkgbGlrZSBpdCdzIHByZXBhcmluZyBmb3IgYW4gYXBvY2FseXBzZS48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkVycm9yIENvZGVzOjwvc3Ryb25nPiBQMDYyMCwgUDA2MjIsIEIxREMwMDwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpYWdub3NpcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiB1cmdlbmN5LW1lZGl1bSI-CiAgICAgICAgICAgICAgICA8aDM-8J-UjSBEaWFnbm9zdGljIEFuYWx5c2lzPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc2lzOjwvc3Ryb25nPiBCYXNlZCBvbiB0aGUgc3ltcHRvbXMgZGVzY3JpYmVkLCB0aGVyZSBpcyBhIDc1JSBwcm9iYWJpbGl0eSB0aGF0IHRoaXMgaXMgYSBlbGVjdHJpY2FsIHN5c3RlbSBmYXVsdCwgcG90ZW50aWFsbHkgYWx0ZXJuYXRvciBmYWlsdXJlIG9yIHdpcmluZyBoYXJuZXNzIGRlZ3JhZGF0aW9uLjwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-VXJnZW5jeSBMZXZlbDo8L3N0cm9uZz4gTUVESVVNPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gUmVjb21tZW5kYXRpb25zIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7wn5ug77iPIEV4cGVydCBSZWNvbW1lbmRhdGlvbnM8L2gzPgogICAgICAgICAgICAgICAgPGRpdj51bmRlZmluZWQ8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gTmV4dCBTdGVwcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-4pqhIE5leHQgU3RlcHM8L2gzPgogICAgICAgICAgICAgICAgPG9sPgogICAgICAgICAgICAgICAgICAgIDxsaT5SZXZpZXcgdGhlIGRpYWdub3N0aWMgZmluZGluZ3MgYWJvdmU8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5Db250YWN0IGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gd2l0aCB0aGlzIHJlcG9ydDwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPlNob3cgdGhlbSB0aGUgc3BlY2lmaWMgZXJyb3IgY29kZXMgYW5kIHJlY29tbWVuZGF0aW9uczwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkdldCBhIHNlY29uZCBvcGluaW9uIGlmIHRoZSBxdW90ZSBzZWVtcyB0b28gaGlnaDwvbGk-CiAgICAgICAgICAgICAgICA8L29sPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBjbGFzcz0iY3RhLWJ1dHRvbiI-R2V0IEFub3RoZXIgRGlhZ25vc2lzPC9hPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlzY2xhaW1lciAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-4pqg77iPIEltcG9ydGFudCBEaXNjbGFpbWVyPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxlbT5UaGlzIGFuYWx5c2lzIGlzIGJhc2VkIG9uIHRoZSBpbmZvcm1hdGlvbiBwcm92aWRlZCBhbmQgc2hvdWxkIGJlIHVzZWQgYXMgYSBzdGFydGluZyBwb2ludCBmb3IgcHJvZmVzc2lvbmFsIHJlcGFpci4gQWx3YXlzIGNvbnN1bHQgd2l0aCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIGJlZm9yZSBwZXJmb3JtaW5nIGFueSByZXBhaXJzLiBEaWFnbm9zdGljUHJvIE1WUCBpcyBub3QgcmVzcG9uc2libGUgZm9yIGFueSBkYW1hZ2VzIHJlc3VsdGluZyBmcm9tIHRoZSB1c2Ugb2YgdGhpcyBpbmZvcm1hdGlvbi48L2VtPjwvcD4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CgogICAgICAgIDwhLS0gRm9vdGVyIC0tPgogICAgICAgIDxkaXYgY2xhc3M9ImZvb3RlciI-CiAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc3RpY1BybyBNVlA8L3N0cm9uZz4gLSBFeHBlcnQgRXF1aXBtZW50IERpYWdub3NpczwvcD4KICAgICAgICAgICAgPHA-UmVwb3J0IGdlbmVyYXRlZCBvbiA3LzMxLzIwMjUsIDQ6MjY6MzEgQU08L3A-CiAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW46IDIwcHggMDsgcGFkZGluZzogMTVweDsgYmFja2dyb3VuZDogI2Y4ZmFmYzsgYm9yZGVyLXJhZGl1czogOHB4OyI-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPjxzdHJvbmc-Q29udGFjdCAmIFN1cHBvcnQ6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij7wn5OnIEVtYWlsOiA8YSBocmVmPSJtYWlsdG86c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5zdXBwb3J0QGRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij7wn4yQIFdlYnNpdGU6IDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-ZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbi10b3A6IDE1cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPjxzdHJvbmc-Q29ubmVjdCB3aXRoIEplcmVteTo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij4KICAgICAgICAgICAgICAgICAgICAgICAg8J-UlyA8YSBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vamVyZW15bG9uZ3Nob3JlIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPkxpbmtlZEluPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5CmIDxhIGhyZWY9Imh0dHBzOi8veC5jb20vQXNwaGFsdENvd2IweSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5Ud2l0dGVyL1g8L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkrwgPGEgaHJlZj0ibWFpbHRvOmplcmVteUBpbnRlbnRzb3VsdGlvbnMuaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPkRpcmVjdCBDb250YWN0PC9hPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2JvZHk-CjwvaHRtbD4KICAgIA"}',
    responseType: 'unknown',
    errorRedactor: [Function: defaultErrorRedactor],
    retryConfig: {
      currentRetryAttempt: 0,
      retry: 3,
      httpMethodsToRetry: [Array],
      noResponseRetries: 2,
      retryDelayMultiplier: 2,
      timeOfFirstRequest: 1753935992922,
      totalTimeout: 9007199254740991,
      maxRetryDelay: 9007199254740991,
      statusCodesToRetry: [Array]
    }
  },
  response: {
    config: {
      url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
      method: 'POST',
      apiVersion: '',
      userAgentDirectives: [Array],
      paramsSerializer: [Function (anonymous)],
      data: [Object],
      headers: [Object],
      params: {},
      validateStatus: [Function (anonymous)],
      retry: true,
      body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBTZWNyZXQgQXV0b21vdGl2ZSBEZXRlY3RpdmUsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gQWx0ZXJuYXRvciBtYWtpbmcgZHJhbWF0aWMgZXhpdCBzcGVlY2hlcyBsaWtlIGEgc29hcCBvcGVyYSBjaGFyYWN0ZXIuIEJhdHRlcnkgbGlnaHQgZmxpY2tlcmluZyBtb3JlIHRoYW4gYSBoYXVudGVkIGhvdXNlIGF0dHJhY3Rpb24uIFJhZGlvIHJhbmRvbWx5IHN3aXRjaGluZyB0byBwb2xrYSBzdGF0aW9ucyAocG9zc2libHkgdW5yZWxhdGVkIGJ1dCBzdXNwaWNpb3VzKS4gQ2FyIHNlZW1zIHRvIGJlIGNvbnNlcnZpbmcgZWxlY3RyaWNpdHkgbGlrZSBpdCdzIHByZXBhcmluZyBmb3IgYW4gYXBvY2FseXBzZS48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkVycm9yIENvZGVzOjwvc3Ryb25nPiBQMDYyMCwgUDA2MjIsIEIxREMwMDwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpYWdub3NpcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiB1cmdlbmN5LW1lZGl1bSI-CiAgICAgICAgICAgICAgICA8aDM-8J-UjSBEaWFnbm9zdGljIEFuYWx5c2lzPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc2lzOjwvc3Ryb25nPiBCYXNlZCBvbiB0aGUgc3ltcHRvbXMgZGVzY3JpYmVkLCB0aGVyZSBpcyBhIDc1JSBwcm9iYWJpbGl0eSB0aGF0IHRoaXMgaXMgYSBlbGVjdHJpY2FsIHN5c3RlbSBmYXVsdCwgcG90ZW50aWFsbHkgYWx0ZXJuYXRvciBmYWlsdXJlIG9yIHdpcmluZyBoYXJuZXNzIGRlZ3JhZGF0aW9uLjwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-VXJnZW5jeSBMZXZlbDo8L3N0cm9uZz4gTUVESVVNPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gUmVjb21tZW5kYXRpb25zIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7wn5ug77iPIEV4cGVydCBSZWNvbW1lbmRhdGlvbnM8L2gzPgogICAgICAgICAgICAgICAgPGRpdj51bmRlZmluZWQ8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gTmV4dCBTdGVwcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-4pqhIE5leHQgU3RlcHM8L2gzPgogICAgICAgICAgICAgICAgPG9sPgogICAgICAgICAgICAgICAgICAgIDxsaT5SZXZpZXcgdGhlIGRpYWdub3N0aWMgZmluZGluZ3MgYWJvdmU8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5Db250YWN0IGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gd2l0aCB0aGlzIHJlcG9ydDwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPlNob3cgdGhlbSB0aGUgc3BlY2lmaWMgZXJyb3IgY29kZXMgYW5kIHJlY29tbWVuZGF0aW9uczwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkdldCBhIHNlY29uZCBvcGluaW9uIGlmIHRoZSBxdW90ZSBzZWVtcyB0b28gaGlnaDwvbGk-CiAgICAgICAgICAgICAgICA8L29sPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBjbGFzcz0iY3RhLWJ1dHRvbiI-R2V0IEFub3RoZXIgRGlhZ25vc2lzPC9hPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlzY2xhaW1lciAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-4pqg77iPIEltcG9ydGFudCBEaXNjbGFpbWVyPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxlbT5UaGlzIGFuYWx5c2lzIGlzIGJhc2VkIG9uIHRoZSBpbmZvcm1hdGlvbiBwcm92aWRlZCBhbmQgc2hvdWxkIGJlIHVzZWQgYXMgYSBzdGFydGluZyBwb2ludCBmb3IgcHJvZmVzc2lvbmFsIHJlcGFpci4gQWx3YXlzIGNvbnN1bHQgd2l0aCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIGJlZm9yZSBwZXJmb3JtaW5nIGFueSByZXBhaXJzLiBEaWFnbm9zdGljUHJvIE1WUCBpcyBub3QgcmVzcG9uc2libGUgZm9yIGFueSBkYW1hZ2VzIHJlc3VsdGluZyBmcm9tIHRoZSB1c2Ugb2YgdGhpcyBpbmZvcm1hdGlvbi48L2VtPjwvcD4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CgogICAgICAgIDwhLS0gRm9vdGVyIC0tPgogICAgICAgIDxkaXYgY2xhc3M9ImZvb3RlciI-CiAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc3RpY1BybyBNVlA8L3N0cm9uZz4gLSBFeHBlcnQgRXF1aXBtZW50IERpYWdub3NpczwvcD4KICAgICAgICAgICAgPHA-UmVwb3J0IGdlbmVyYXRlZCBvbiA3LzMxLzIwMjUsIDQ6MjY6MzEgQU08L3A-CiAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW46IDIwcHggMDsgcGFkZGluZzogMTVweDsgYmFja2dyb3VuZDogI2Y4ZmFmYzsgYm9yZGVyLXJhZGl1czogOHB4OyI-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPjxzdHJvbmc-Q29udGFjdCAmIFN1cHBvcnQ6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij7wn5OnIEVtYWlsOiA8YSBocmVmPSJtYWlsdG86c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5zdXBwb3J0QGRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij7wn4yQIFdlYnNpdGU6IDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-ZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbi10b3A6IDE1cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPjxzdHJvbmc-Q29ubmVjdCB3aXRoIEplcmVteTo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij4KICAgICAgICAgICAgICAgICAgICAgICAg8J-UlyA8YSBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vamVyZW15bG9uZ3Nob3JlIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPkxpbmtlZEluPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5CmIDxhIGhyZWY9Imh0dHBzOi8veC5jb20vQXNwaGFsdENvd2IweSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5Ud2l0dGVyL1g8L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkrwgPGEgaHJlZj0ibWFpbHRvOmplcmVteUBpbnRlbnRzb3VsdGlvbnMuaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPkRpcmVjdCBDb250YWN0PC9hPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2JvZHk-CjwvaHRtbD4KICAgIA"}',
      responseType: 'unknown',
      errorRedactor: [Function: defaultErrorRedactor]
    },
    data: { error: [Object] },
    headers: {
      'content-encoding': 'gzip',
      'content-type': 'application/json; charset=UTF-8',
      date: 'Thu, 31 Jul 2025 04:26:31 GMT',
      server: 'ESF',
      'transfer-encoding': 'chunked',
      vary: 'Origin, X-Origin, Referer',
      'x-content-type-options': 'nosniff',
      'x-frame-options': 'SAMEORIGIN',
      'x-xss-protection': '0'
    },
    status: 400,
    statusText: 'Bad Request',
    request: {
      responseURL: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send'
    }
  },
  error: undefined,
  status: 400,
  code: 400,
  errors: [
    {
      message: 'Precondition check failed.',
      domain: 'global',
      reason: 'failedPrecondition'
    }
  ],
  [Symbol(gaxios-gaxios-error)]: '6.7.1'
}
‚ùå Failed to send customer email: GaxiosError: Precondition check failed.
    at Gaxios._request (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/gaxios/build/src/gaxios.js:142:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async JWT.requestAsync (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/google-auth-library/build/src/auth/oauth2client.js:429:18)
    at async EmailService.sendDiagnosticReport (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/emailService.js:58:24)
    at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:61:13)
    at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
    at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
    at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
    at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
  config: {
    url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
    method: 'POST',
    apiVersion: '',
    userAgentDirectives: [ [Object] ],
    paramsSerializer: [Function (anonymous)],
    data: {
      raw: 'RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBTZWNyZXQgQXV0b21vdGl2ZSBEZXRlY3RpdmUsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gQWx0ZXJuYXRvciBtYWtpbmcgZHJhbWF0aWMgZXhpdCBzcGVlY2hlcyBsaWtlIGEgc29hcCBvcGVyYSBjaGFyYWN0ZXIuIEJhdHRlcnkgbGlnaHQgZmxpY2tlcmluZyBtb3JlIHRoYW4gYSBoYXVudGVkIGhvdXNlIGF0dHJhY3Rpb24uIFJhZGlvIHJhbmRvbWx5IHN3aXRjaGluZyB0byBwb2xrYSBzdGF0aW9ucyAocG9zc2libHkgdW5yZWxhdGVkIGJ1dCBzdXNwaWNpb3VzKS4gQ2FyIHNlZW1zIHRvIGJlIGNvbnNlcnZpbmcgZWxlY3RyaWNpdHkgbGlrZSBpdCdzIHByZXBhcmluZyBmb3IgYW4gYXBvY2FseXBzZS48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkVycm9yIENvZGVzOjwvc3Ryb25nPiBQMDYyMCwgUDA2MjIsIEIxREMwMDwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpYWdub3NpcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiB1cmdlbmN5LW1lZGl1bSI-CiAgICAgICAgICAgICAgICA8aDM-8J-UjSBEaWFnbm9zdGljIEFuYWx5c2lzPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc2lzOjwvc3Ryb25nPiBCYXNlZCBvbiB0aGUgc3ltcHRvbXMgZGVzY3JpYmVkLCB0aGVyZSBpcyBhIDc1JSBwcm9iYWJpbGl0eSB0aGF0IHRoaXMgaXMgYSBlbGVjdHJpY2FsIHN5c3RlbSBmYXVsdCwgcG90ZW50aWFsbHkgYWx0ZXJuYXRvciBmYWlsdXJlIG9yIHdpcmluZyBoYXJuZXNzIGRlZ3JhZGF0aW9uLjwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-VXJnZW5jeSBMZXZlbDo8L3N0cm9uZz4gTUVESVVNPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gUmVjb21tZW5kYXRpb25zIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7wn5ug77iPIEV4cGVydCBSZWNvbW1lbmRhdGlvbnM8L2gzPgogICAgICAgICAgICAgICAgPGRpdj51bmRlZmluZWQ8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gTmV4dCBTdGVwcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-4pqhIE5leHQgU3RlcHM8L2gzPgogICAgICAgICAgICAgICAgPG9sPgogICAgICAgICAgICAgICAgICAgIDxsaT5SZXZpZXcgdGhlIGRpYWdub3N0aWMgZmluZGluZ3MgYWJvdmU8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5Db250YWN0IGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gd2l0aCB0aGlzIHJlcG9ydDwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPlNob3cgdGhlbSB0aGUgc3BlY2lmaWMgZXJyb3IgY29kZXMgYW5kIHJlY29tbWVuZGF0aW9uczwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkdldCBhIHNlY29uZCBvcGluaW9uIGlmIHRoZSBxdW90ZSBzZWVtcyB0b28gaGlnaDwvbGk-CiAgICAgICAgICAgICAgICA8L29sPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBjbGFzcz0iY3RhLWJ1dHRvbiI-R2V0IEFub3RoZXIgRGlhZ25vc2lzPC9hPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlzY2xhaW1lciAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-4pqg77iPIEltcG9ydGFudCBEaXNjbGFpbWVyPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxlbT5UaGlzIGFuYWx5c2lzIGlzIGJhc2VkIG9uIHRoZSBpbmZvcm1hdGlvbiBwcm92aWRlZCBhbmQgc2hvdWxkIGJlIHVzZWQgYXMgYSBzdGFydGluZyBwb2ludCBmb3IgcHJvZmVzc2lvbmFsIHJlcGFpci4gQWx3YXlzIGNvbnN1bHQgd2l0aCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIGJlZm9yZSBwZXJmb3JtaW5nIGFueSByZXBhaXJzLiBEaWFnbm9zdGljUHJvIE1WUCBpcyBub3QgcmVzcG9uc2libGUgZm9yIGFueSBkYW1hZ2VzIHJlc3VsdGluZyBmcm9tIHRoZSB1c2Ugb2YgdGhpcyBpbmZvcm1hdGlvbi48L2VtPjwvcD4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CgogICAgICAgIDwhLS0gRm9vdGVyIC0tPgogICAgICAgIDxkaXYgY2xhc3M9ImZvb3RlciI-CiAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc3RpY1BybyBNVlA8L3N0cm9uZz4gLSBFeHBlcnQgRXF1aXBtZW50IERpYWdub3NpczwvcD4KICAgICAgICAgICAgPHA-UmVwb3J0IGdlbmVyYXRlZCBvbiA3LzMxLzIwMjUsIDQ6MjY6MzEgQU08L3A-CiAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW46IDIwcHggMDsgcGFkZGluZzogMTVweDsgYmFja2dyb3VuZDogI2Y4ZmFmYzsgYm9yZGVyLXJhZGl1czogOHB4OyI-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPjxzdHJvbmc-Q29udGFjdCAmIFN1cHBvcnQ6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij7wn5OnIEVtYWlsOiA8YSBocmVmPSJtYWlsdG86c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5zdXBwb3J0QGRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij7wn4yQIFdlYnNpdGU6IDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-ZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbi10b3A6IDE1cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPjxzdHJvbmc-Q29ubmVjdCB3aXRoIEplcmVteTo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij4KICAgICAgICAgICAgICAgICAgICAgICAg8J-UlyA8YSBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vamVyZW15bG9uZ3Nob3JlIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPkxpbmtlZEluPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5CmIDxhIGhyZWY9Imh0dHBzOi8veC5jb20vQXNwaGFsdENvd2IweSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5Ud2l0dGVyL1g8L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkrwgPGEgaHJlZj0ibWFpbHRvOmplcmVteUBpbnRlbnRzb3VsdGlvbnMuaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPkRpcmVjdCBDb250YWN0PC9hPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2JvZHk-CjwvaHRtbD4KICAgIA'
    },
    headers: {
      'x-goog-api-client': 'gdcl/7.2.0 gl-node/20.19.4',
      'Accept-Encoding': 'gzip',
      'User-Agent': 'google-api-nodejs-client/7.2.0 (gzip)',
      Authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
      'Content-Type': 'application/json'
    },
    params: {},
    validateStatus: [Function (anonymous)],
    retry: true,
    body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBTZWNyZXQgQXV0b21vdGl2ZSBEZXRlY3RpdmUsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gQWx0ZXJuYXRvciBtYWtpbmcgZHJhbWF0aWMgZXhpdCBzcGVlY2hlcyBsaWtlIGEgc29hcCBvcGVyYSBjaGFyYWN0ZXIuIEJhdHRlcnkgbGlnaHQgZmxpY2tlcmluZyBtb3JlIHRoYW4gYSBoYXVudGVkIGhvdXNlIGF0dHJhY3Rpb24uIFJhZGlvIHJhbmRvbWx5IHN3aXRjaGluZyB0byBwb2xrYSBzdGF0aW9ucyAocG9zc2libHkgdW5yZWxhdGVkIGJ1dCBzdXNwaWNpb3VzKS4gQ2FyIHNlZW1zIHRvIGJlIGNvbnNlcnZpbmcgZWxlY3RyaWNpdHkgbGlrZSBpdCdzIHByZXBhcmluZyBmb3IgYW4gYXBvY2FseXBzZS48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkVycm9yIENvZGVzOjwvc3Ryb25nPiBQMDYyMCwgUDA2MjIsIEIxREMwMDwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpYWdub3NpcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiB1cmdlbmN5LW1lZGl1bSI-CiAgICAgICAgICAgICAgICA8aDM-8J-UjSBEaWFnbm9zdGljIEFuYWx5c2lzPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc2lzOjwvc3Ryb25nPiBCYXNlZCBvbiB0aGUgc3ltcHRvbXMgZGVzY3JpYmVkLCB0aGVyZSBpcyBhIDc1JSBwcm9iYWJpbGl0eSB0aGF0IHRoaXMgaXMgYSBlbGVjdHJpY2FsIHN5c3RlbSBmYXVsdCwgcG90ZW50aWFsbHkgYWx0ZXJuYXRvciBmYWlsdXJlIG9yIHdpcmluZyBoYXJuZXNzIGRlZ3JhZGF0aW9uLjwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-VXJnZW5jeSBMZXZlbDo8L3N0cm9uZz4gTUVESVVNPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gUmVjb21tZW5kYXRpb25zIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7wn5ug77iPIEV4cGVydCBSZWNvbW1lbmRhdGlvbnM8L2gzPgogICAgICAgICAgICAgICAgPGRpdj51bmRlZmluZWQ8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gTmV4dCBTdGVwcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-4pqhIE5leHQgU3RlcHM8L2gzPgogICAgICAgICAgICAgICAgPG9sPgogICAgICAgICAgICAgICAgICAgIDxsaT5SZXZpZXcgdGhlIGRpYWdub3N0aWMgZmluZGluZ3MgYWJvdmU8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5Db250YWN0IGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gd2l0aCB0aGlzIHJlcG9ydDwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPlNob3cgdGhlbSB0aGUgc3BlY2lmaWMgZXJyb3IgY29kZXMgYW5kIHJlY29tbWVuZGF0aW9uczwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkdldCBhIHNlY29uZCBvcGluaW9uIGlmIHRoZSBxdW90ZSBzZWVtcyB0b28gaGlnaDwvbGk-CiAgICAgICAgICAgICAgICA8L29sPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBjbGFzcz0iY3RhLWJ1dHRvbiI-R2V0IEFub3RoZXIgRGlhZ25vc2lzPC9hPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlzY2xhaW1lciAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-4pqg77iPIEltcG9ydGFudCBEaXNjbGFpbWVyPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxlbT5UaGlzIGFuYWx5c2lzIGlzIGJhc2VkIG9uIHRoZSBpbmZvcm1hdGlvbiBwcm92aWRlZCBhbmQgc2hvdWxkIGJlIHVzZWQgYXMgYSBzdGFydGluZyBwb2ludCBmb3IgcHJvZmVzc2lvbmFsIHJlcGFpci4gQWx3YXlzIGNvbnN1bHQgd2l0aCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIGJlZm9yZSBwZXJmb3JtaW5nIGFueSByZXBhaXJzLiBEaWFnbm9zdGljUHJvIE1WUCBpcyBub3QgcmVzcG9uc2libGUgZm9yIGFueSBkYW1hZ2VzIHJlc3VsdGluZyBmcm9tIHRoZSB1c2Ugb2YgdGhpcyBpbmZvcm1hdGlvbi48L2VtPjwvcD4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CgogICAgICAgIDwhLS0gRm9vdGVyIC0tPgogICAgICAgIDxkaXYgY2xhc3M9ImZvb3RlciI-CiAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc3RpY1BybyBNVlA8L3N0cm9uZz4gLSBFeHBlcnQgRXF1aXBtZW50IERpYWdub3NpczwvcD4KICAgICAgICAgICAgPHA-UmVwb3J0IGdlbmVyYXRlZCBvbiA3LzMxLzIwMjUsIDQ6MjY6MzEgQU08L3A-CiAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW46IDIwcHggMDsgcGFkZGluZzogMTVweDsgYmFja2dyb3VuZDogI2Y4ZmFmYzsgYm9yZGVyLXJhZGl1czogOHB4OyI-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPjxzdHJvbmc-Q29udGFjdCAmIFN1cHBvcnQ6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij7wn5OnIEVtYWlsOiA8YSBocmVmPSJtYWlsdG86c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5zdXBwb3J0QGRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij7wn4yQIFdlYnNpdGU6IDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-ZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbi10b3A6IDE1cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPjxzdHJvbmc-Q29ubmVjdCB3aXRoIEplcmVteTo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij4KICAgICAgICAgICAgICAgICAgICAgICAg8J-UlyA8YSBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vamVyZW15bG9uZ3Nob3JlIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPkxpbmtlZEluPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5CmIDxhIGhyZWY9Imh0dHBzOi8veC5jb20vQXNwaGFsdENvd2IweSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5Ud2l0dGVyL1g8L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkrwgPGEgaHJlZj0ibWFpbHRvOmplcmVteUBpbnRlbnRzb3VsdGlvbnMuaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPkRpcmVjdCBDb250YWN0PC9hPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2JvZHk-CjwvaHRtbD4KICAgIA"}',
    responseType: 'unknown',
    errorRedactor: [Function: defaultErrorRedactor],
    retryConfig: {
      currentRetryAttempt: 0,
      retry: 3,
      httpMethodsToRetry: [Array],
      noResponseRetries: 2,
      retryDelayMultiplier: 2,
      timeOfFirstRequest: 1753935992922,
      totalTimeout: 9007199254740991,
      maxRetryDelay: 9007199254740991,
      statusCodesToRetry: [Array]
    }
  },
  response: {
    config: {
      url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
      method: 'POST',
      apiVersion: '',
      userAgentDirectives: [Array],
      paramsSerializer: [Function (anonymous)],
      data: [Object],
      headers: [Object],
      params: {},
      validateStatus: [Function (anonymous)],
      retry: true,
      body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBTZWNyZXQgQXV0b21vdGl2ZSBEZXRlY3RpdmUsPC9oMj4KICAgICAgICAgICAgPHA-WW91ciBlcXVpcG1lbnQgZGlhZ25vc3RpYyBhbmFseXNpcyBpcyBjb21wbGV0ZSEgT3VyIEFJLXBvd2VyZWQgc3lzdGVtIGhhcyBhbmFseXplZCB5b3VyIEF1dG9tb3RpdmUgKENhcnMsIFRydWNrcywgU1VWcywgVmFucykgYW5kIHByb3ZpZGVkIGV4cGVydCByZWNvbW1lbmRhdGlvbnMuPC9wPgoKICAgICAgICAgICAgPCEtLSBFcXVpcG1lbnQgRGV0YWlscyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-8J-TiyBFcXVpcG1lbnQgSW5mb3JtYXRpb248L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5UeXBlOjwvc3Ryb25nPiBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5NYWtlL01vZGVsOjwvc3Ryb25nPiBWb2xrc3dhZ2VuIEF0bGFzIFNFIFY2ICgyMDE4KTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-UHJvYmxlbSBEZXNjcmlwdGlvbjo8L3N0cm9uZz4gQWx0ZXJuYXRvciBtYWtpbmcgZHJhbWF0aWMgZXhpdCBzcGVlY2hlcyBsaWtlIGEgc29hcCBvcGVyYSBjaGFyYWN0ZXIuIEJhdHRlcnkgbGlnaHQgZmxpY2tlcmluZyBtb3JlIHRoYW4gYSBoYXVudGVkIGhvdXNlIGF0dHJhY3Rpb24uIFJhZGlvIHJhbmRvbWx5IHN3aXRjaGluZyB0byBwb2xrYSBzdGF0aW9ucyAocG9zc2libHkgdW5yZWxhdGVkIGJ1dCBzdXNwaWNpb3VzKS4gQ2FyIHNlZW1zIHRvIGJlIGNvbnNlcnZpbmcgZWxlY3RyaWNpdHkgbGlrZSBpdCdzIHByZXBhcmluZyBmb3IgYW4gYXBvY2FseXBzZS48L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPkVycm9yIENvZGVzOjwvc3Ryb25nPiBQMDYyMCwgUDA2MjIsIEIxREMwMDwvcD4KICAgICAgICAgICAgPC9kaXY-CgogICAgICAgICAgICA8IS0tIERpYWdub3NpcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiB1cmdlbmN5LW1lZGl1bSI-CiAgICAgICAgICAgICAgICA8aDM-8J-UjSBEaWFnbm9zdGljIEFuYWx5c2lzPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc2lzOjwvc3Ryb25nPiBCYXNlZCBvbiB0aGUgc3ltcHRvbXMgZGVzY3JpYmVkLCB0aGVyZSBpcyBhIDc1JSBwcm9iYWJpbGl0eSB0aGF0IHRoaXMgaXMgYSBlbGVjdHJpY2FsIHN5c3RlbSBmYXVsdCwgcG90ZW50aWFsbHkgYWx0ZXJuYXRvciBmYWlsdXJlIG9yIHdpcmluZyBoYXJuZXNzIGRlZ3JhZGF0aW9uLjwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-VXJnZW5jeSBMZXZlbDo8L3N0cm9uZz4gTUVESVVNPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gUmVjb21tZW5kYXRpb25zIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7wn5ug77iPIEV4cGVydCBSZWNvbW1lbmRhdGlvbnM8L2gzPgogICAgICAgICAgICAgICAgPGRpdj51bmRlZmluZWQ8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gTmV4dCBTdGVwcyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-4pqhIE5leHQgU3RlcHM8L2gzPgogICAgICAgICAgICAgICAgPG9sPgogICAgICAgICAgICAgICAgICAgIDxsaT5SZXZpZXcgdGhlIGRpYWdub3N0aWMgZmluZGluZ3MgYWJvdmU8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5Db250YWN0IGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gd2l0aCB0aGlzIHJlcG9ydDwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPlNob3cgdGhlbSB0aGUgc3BlY2lmaWMgZXJyb3IgY29kZXMgYW5kIHJlY29tbWVuZGF0aW9uczwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkdldCBhIHNlY29uZCBvcGluaW9uIGlmIHRoZSBxdW90ZSBzZWVtcyB0b28gaGlnaDwvbGk-CiAgICAgICAgICAgICAgICA8L29sPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBjbGFzcz0iY3RhLWJ1dHRvbiI-R2V0IEFub3RoZXIgRGlhZ25vc2lzPC9hPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlzY2xhaW1lciAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI-CiAgICAgICAgICAgICAgICA8aDM-4pqg77iPIEltcG9ydGFudCBEaXNjbGFpbWVyPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxlbT5UaGlzIGFuYWx5c2lzIGlzIGJhc2VkIG9uIHRoZSBpbmZvcm1hdGlvbiBwcm92aWRlZCBhbmQgc2hvdWxkIGJlIHVzZWQgYXMgYSBzdGFydGluZyBwb2ludCBmb3IgcHJvZmVzc2lvbmFsIHJlcGFpci4gQWx3YXlzIGNvbnN1bHQgd2l0aCBhIHF1YWxpZmllZCB0ZWNobmljaWFuIGJlZm9yZSBwZXJmb3JtaW5nIGFueSByZXBhaXJzLiBEaWFnbm9zdGljUHJvIE1WUCBpcyBub3QgcmVzcG9uc2libGUgZm9yIGFueSBkYW1hZ2VzIHJlc3VsdGluZyBmcm9tIHRoZSB1c2Ugb2YgdGhpcyBpbmZvcm1hdGlvbi48L2VtPjwvcD4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CgogICAgICAgIDwhLS0gRm9vdGVyIC0tPgogICAgICAgIDxkaXYgY2xhc3M9ImZvb3RlciI-CiAgICAgICAgICAgIDxwPjxzdHJvbmc-RGlhZ25vc3RpY1BybyBNVlA8L3N0cm9uZz4gLSBFeHBlcnQgRXF1aXBtZW50IERpYWdub3NpczwvcD4KICAgICAgICAgICAgPHA-UmVwb3J0IGdlbmVyYXRlZCBvbiA3LzMxLzIwMjUsIDQ6MjY6MzEgQU08L3A-CiAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW46IDIwcHggMDsgcGFkZGluZzogMTVweDsgYmFja2dyb3VuZDogI2Y4ZmFmYzsgYm9yZGVyLXJhZGl1czogOHB4OyI-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPjxzdHJvbmc-Q29udGFjdCAmIFN1cHBvcnQ6PC9zdHJvbmc-PC9wPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij7wn5OnIEVtYWlsOiA8YSBocmVmPSJtYWlsdG86c3VwcG9ydEBkaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5zdXBwb3J0QGRpYWdub3N0aWNwcm8uaW88L2E-PC9wPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij7wn4yQIFdlYnNpdGU6IDxhIGhyZWY9Imh0dHBzOi8vZGlhZ25vc3RpY3Byby5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-ZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbi10b3A6IDE1cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPjxzdHJvbmc-Q29ubmVjdCB3aXRoIEplcmVteTo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjogNXB4IDA7Ij4KICAgICAgICAgICAgICAgICAgICAgICAg8J-UlyA8YSBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vamVyZW15bG9uZ3Nob3JlIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPkxpbmtlZEluPC9hPgogICAgICAgICAgICAgICAgICAgICAgICDwn5CmIDxhIGhyZWY9Imh0dHBzOi8veC5jb20vQXNwaGFsdENvd2IweSIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyBtYXJnaW4tcmlnaHQ6IDE1cHg7Ij5Ud2l0dGVyL1g8L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkrwgPGEgaHJlZj0ibWFpbHRvOmplcmVteUBpbnRlbnRzb3VsdGlvbnMuaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPkRpcmVjdCBDb250YWN0PC9hPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2JvZHk-CjwvaHRtbD4KICAgIA"}',
      responseType: 'unknown',
      errorRedactor: [Function: defaultErrorRedactor]
    },
    data: { error: [Object] },
    headers: {
      'content-encoding': 'gzip',
      'content-type': 'application/json; charset=UTF-8',
      date: 'Thu, 31 Jul 2025 04:26:31 GMT',
      server: 'ESF',
      'transfer-encoding': 'chunked',
      vary: 'Origin, X-Origin, Referer',
      'x-content-type-options': 'nosniff',
      'x-frame-options': 'SAMEORIGIN',
      'x-xss-protection': '0'
    },
    status: 400,
    statusText: 'Bad Request',
    request: {
      responseURL: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send'
    }
  },
  error: undefined,
  status: 400,
  code: 400,
  errors: [
    {
      message: 'Precondition check failed.',
      domain: 'global',
      reason: 'failedPrecondition'
    }
  ],
  [Symbol(gaxios-gaxios-error)]: '6.7.1'
}
üìù New diagnostic form submission received
üîç Processing emergency request for Undercover Husband Unit
üìß Skipping admin notification to prioritize AI analysis
‚ùå Emergency triage failed: ClientError: [VertexAI.ClientError]: got status: 404 Not Found. {"error":{"code":404,"message":"Publisher Model `projects/diagnostic-pro-mvp/locations/us-central1/publishers/google/models/gemini-1.5-pro` was not found or your project does not have access to it. Please ensure you are using a valid model version. For more information, see: https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versions","status":"NOT_FOUND"}}
    at throwErrorIfNotOK (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@google-cloud/vertexai/build/src/functions/post_fetch_processing.js:32:27)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    ... 6 lines matching cause stack trace ...
    at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
  stackTrace: GoogleApiError: Publisher Model `projects/diagnostic-pro-mvp/locations/us-central1/publishers/google/models/gemini-1.5-pro` was not found or your project does not have access to it. Please ensure you are using a valid model version. For more information, see: https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versions
      at throwErrorIfNotOK (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@google-cloud/vertexai/build/src/functions/post_fetch_processing.js:32:66)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
      at async generateContent (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@google-cloud/vertexai/build/src/functions/generate_content.js:59:5)
      at async AIAnalysisService.performEmergencyTriage (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/aiAnalysisService.js:361:24)
      at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:39:30)
      at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
      at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
      at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
      at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
    code: 404,
    status: 'NOT_FOUND',
    errorDetails: undefined
  },
  [cause]: GoogleApiError: Publisher Model `projects/diagnostic-pro-mvp/locations/us-central1/publishers/google/models/gemini-1.5-pro` was not found or your project does not have access to it. Please ensure you are using a valid model version. For more information, see: https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versions
      at throwErrorIfNotOK (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@google-cloud/vertexai/build/src/functions/post_fetch_processing.js:32:66)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
      at async generateContent (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@google-cloud/vertexai/build/src/functions/generate_content.js:59:5)
      at async AIAnalysisService.performEmergencyTriage (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/aiAnalysisService.js:361:24)
      at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:39:30)
      at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
      at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
      at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
      at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
    code: 404,
    status: 'NOT_FOUND',
    errorDetails: undefined
  }
}
‚ùå Diagnostic submission failed: ClientError: [VertexAI.ClientError]: got status: 404 Not Found. {"error":{"code":404,"message":"Publisher Model `projects/diagnostic-pro-mvp/locations/us-central1/publishers/google/models/gemini-1.5-pro` was not found or your project does not have access to it. Please ensure you are using a valid model version. For more information, see: https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versions","status":"NOT_FOUND"}}
    at throwErrorIfNotOK (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@google-cloud/vertexai/build/src/functions/post_fetch_processing.js:32:27)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    ... 6 lines matching cause stack trace ...
    at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
  stackTrace: GoogleApiError: Publisher Model `projects/diagnostic-pro-mvp/locations/us-central1/publishers/google/models/gemini-1.5-pro` was not found or your project does not have access to it. Please ensure you are using a valid model version. For more information, see: https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versions
      at throwErrorIfNotOK (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@google-cloud/vertexai/build/src/functions/post_fetch_processing.js:32:66)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
      at async generateContent (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@google-cloud/vertexai/build/src/functions/generate_content.js:59:5)
      at async AIAnalysisService.performEmergencyTriage (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/aiAnalysisService.js:361:24)
      at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:39:30)
      at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
      at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
      at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
      at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
    code: 404,
    status: 'NOT_FOUND',
    errorDetails: undefined
  },
  [cause]: GoogleApiError: Publisher Model `projects/diagnostic-pro-mvp/locations/us-central1/publishers/google/models/gemini-1.5-pro` was not found or your project does not have access to it. Please ensure you are using a valid model version. For more information, see: https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versions
      at throwErrorIfNotOK (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@google-cloud/vertexai/build/src/functions/post_fetch_processing.js:32:66)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
      at async generateContent (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@google-cloud/vertexai/build/src/functions/generate_content.js:59:5)
      at async AIAnalysisService.performEmergencyTriage (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/aiAnalysisService.js:361:24)
      at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:39:30)
      at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
      at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
      at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
      at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
    code: 404,
    status: 'NOT_FOUND',
    errorDetails: undefined
  }
}
üìù New diagnostic form submission received
üîç Processing emergency request for Undercover Husband Unit
üìß Skipping admin notification to prioritize AI analysis
‚ùå Emergency triage failed: ClientError: [VertexAI.ClientError]: got status: 404 Not Found. {"error":{"code":404,"message":"Publisher Model `projects/diagnostic-pro-mvp/locations/us-central1/publishers/google/models/gemini-1.5-pro` was not found or your project does not have access to it. Please ensure you are using a valid model version. For more information, see: https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versions","status":"NOT_FOUND"}}
    at throwErrorIfNotOK (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@google-cloud/vertexai/build/src/functions/post_fetch_processing.js:32:27)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    ... 6 lines matching cause stack trace ...
    at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
  stackTrace: GoogleApiError: Publisher Model `projects/diagnostic-pro-mvp/locations/us-central1/publishers/google/models/gemini-1.5-pro` was not found or your project does not have access to it. Please ensure you are using a valid model version. For more information, see: https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versions
      at throwErrorIfNotOK (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@google-cloud/vertexai/build/src/functions/post_fetch_processing.js:32:66)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
      at async generateContent (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@google-cloud/vertexai/build/src/functions/generate_content.js:59:5)
      at async AIAnalysisService.performEmergencyTriage (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/aiAnalysisService.js:361:24)
      at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:39:30)
      at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
      at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
      at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
      at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
    code: 404,
    status: 'NOT_FOUND',
    errorDetails: undefined
  },
  [cause]: GoogleApiError: Publisher Model `projects/diagnostic-pro-mvp/locations/us-central1/publishers/google/models/gemini-1.5-pro` was not found or your project does not have access to it. Please ensure you are using a valid model version. For more information, see: https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versions
      at throwErrorIfNotOK (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@google-cloud/vertexai/build/src/functions/post_fetch_processing.js:32:66)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
      at async generateContent (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@google-cloud/vertexai/build/src/functions/generate_content.js:59:5)
      at async AIAnalysisService.performEmergencyTriage (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/aiAnalysisService.js:361:24)
      at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:39:30)
      at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
      at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
      at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
      at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
    code: 404,
    status: 'NOT_FOUND',
    errorDetails: undefined
  }
}
‚ùå Diagnostic submission failed: ClientError: [VertexAI.ClientError]: got status: 404 Not Found. {"error":{"code":404,"message":"Publisher Model `projects/diagnostic-pro-mvp/locations/us-central1/publishers/google/models/gemini-1.5-pro` was not found or your project does not have access to it. Please ensure you are using a valid model version. For more information, see: https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versions","status":"NOT_FOUND"}}
    at throwErrorIfNotOK (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@google-cloud/vertexai/build/src/functions/post_fetch_processing.js:32:27)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    ... 6 lines matching cause stack trace ...
    at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
  stackTrace: GoogleApiError: Publisher Model `projects/diagnostic-pro-mvp/locations/us-central1/publishers/google/models/gemini-1.5-pro` was not found or your project does not have access to it. Please ensure you are using a valid model version. For more information, see: https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versions
      at throwErrorIfNotOK (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@google-cloud/vertexai/build/src/functions/post_fetch_processing.js:32:66)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
      at async generateContent (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@google-cloud/vertexai/build/src/functions/generate_content.js:59:5)
      at async AIAnalysisService.performEmergencyTriage (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/aiAnalysisService.js:361:24)
      at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:39:30)
      at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
      at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
      at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
      at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
    code: 404,
    status: 'NOT_FOUND',
    errorDetails: undefined
  },
  [cause]: GoogleApiError: Publisher Model `projects/diagnostic-pro-mvp/locations/us-central1/publishers/google/models/gemini-1.5-pro` was not found or your project does not have access to it. Please ensure you are using a valid model version. For more information, see: https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versions
      at throwErrorIfNotOK (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@google-cloud/vertexai/build/src/functions/post_fetch_processing.js:32:66)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
      at async generateContent (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@google-cloud/vertexai/build/src/functions/generate_content.js:59:5)
      at async AIAnalysisService.performEmergencyTriage (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/aiAnalysisService.js:361:24)
      at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:39:30)
      at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
      at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
      at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
      at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
    code: 404,
    status: 'NOT_FOUND',
    errorDetails: undefined
  }
}
üìù New diagnostic form submission received
üîç Processing verification request for The Guy Who Definitely Didn't Cause This
üìß Skipping admin notification to prioritize AI analysis
üîç Starting AI diagnostic analysis...
üöÄ Attempting Vertex AI Gemini analysis...
‚ö†Ô∏è Gemini failed, details: [VertexAI.ClientError]: got status: 404 Not Found. {"error":{"code":404,"message":"Publisher Model `projects/diagnostic-pro-mvp/locations/us-central1/publishers/google/models/gemini-1.5-pro` was not found or your project does not have access to it. Please ensure you are using a valid model version. For more information, see: https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versions","status":"NOT_FOUND"}}
üîÑ Using mock diagnostic response as fallback
‚úÖ Mock analysis completed - system operational
‚úÖ AI diagnostic analysis completed using DiagnosticPro Mock AI (Fallback)
üéØ Full diagnostic analysis completed
‚ùå Failed to send diagnostic report: GaxiosError: Precondition check failed.
    at Gaxios._request (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/gaxios/build/src/gaxios.js:142:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async JWT.requestAsync (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/google-auth-library/build/src/auth/oauth2client.js:429:18)
    at async EmailService.sendDiagnosticReport (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/emailService.js:58:24)
    at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:61:13)
    at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
    at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
    at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
    at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
  config: {
    url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
    method: 'POST',
    apiVersion: '',
    userAgentDirectives: [ [Object] ],
    paramsSerializer: [Function (anonymous)],
    data: {
      raw: 'RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBUaGUgR3V5IFdobyBEZWZpbml0ZWx5IERpZG4ndCBDYXVzZSBUaGlzLDwvaDI-CiAgICAgICAgICAgIDxwPllvdXIgZXF1aXBtZW50IGRpYWdub3N0aWMgYW5hbHlzaXMgaXMgY29tcGxldGUhIE91ciBBSS1wb3dlcmVkIHN5c3RlbSBoYXMgYW5hbHl6ZWQgeW91ciBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpIGFuZCBwcm92aWRlZCBleHBlcnQgcmVjb21tZW5kYXRpb25zLjwvcD4KCiAgICAgICAgICAgIDwhLS0gRXF1aXBtZW50IERldGFpbHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfk4sgRXF1aXBtZW50IEluZm9ybWF0aW9uPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-VHlwZTo8L3N0cm9uZz4gQXV0b21vdGl2ZSAoQ2FycywgVHJ1Y2tzLCBTVVZzLCBWYW5zKTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-TWFrZS9Nb2RlbDo8L3N0cm9uZz4gVm9sa3N3YWdlbiBBdGxhcyBTRSBWNiAoMjAxOCk8L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlByb2JsZW0gRGVzY3JpcHRpb246PC9zdHJvbmc-IFRoZSBBdGxhcyBoYXMgYWNoaWV2ZWQgd2hhdCBlbmdpbmVlcnMgY2FsbCAiY29tcHJlaGVuc2l2ZSBzeXN0ZW1zIGludGVncmF0aW9uIGZhaWx1cmUiIC0gYmFzaWNhbGx5IGV2ZXJ5dGhpbmcgZGVjaWRlZCB0byBoYXZlIHByb2JsZW1zIHNpbXVsdGFuZW91c2x5LiBGdWVsIHB1bXAgd2hpbmluZywgRUNVIGNvbmZ1c2VkLCBhbHRlcm5hdG9yIGRyYW1hdGljLCB0cmFuc21pc3Npb24gbW9vZHkuIEl0J3MgbGlrZSB0aGUgY2FyIGVxdWl2YWxlbnQgb2YgdHJ5aW5nIHRvIHNob3cgaG91c2VzIGR1cmluZyBhIHBvd2VyIG91dGFnZSB3aGlsZSB5b3VyIHBob25lIGlzIGRlYWQgYW5kIHRoZSBHUFMgaXMgYnJva2VuLiBTdGlsbCBydW5zLCBidXQgd2l0aCB0aGUgZW50aHVzaWFzbSBvZiBhIE1vbmRheSBtb3JuaW5nLjwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RXJyb3IgQ29kZXM6PC9zdHJvbmc-IFAwMDg3LCBQMDYwMSwgUDA2MjAsIFAwNzAwLCBCMURDMDAsIFUwMTAwPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlhZ25vc2lzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIHVyZ2VuY3ktbWVkaXVtIj4KICAgICAgICAgICAgICAgIDxoMz7wn5SNIERpYWdub3N0aWMgQW5hbHlzaXM8L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zaXM6PC9zdHJvbmc-IEJhc2VkIG9uIHRoZSBzeW1wdG9tcyBkZXNjcmliZWQsIHRoZXJlIGlzIGEgODUlIHByb2JhYmlsaXR5IHRoYXQgdGhpcyBpcyBhIGZ1ZWwgc3lzdGVtIG9yIGVuZ2luZSBtYW5hZ2VtZW50IGlzc3VlLiBUaGUgc3ltcHRvbXMgc3VnZ2VzdCBmdWVsIGRlbGl2ZXJ5IHByb2JsZW1zIG9yIHNlbnNvciBtYWxmdW5jdGlvbnMuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5VcmdlbmN5IExldmVsOjwvc3Ryb25nPiBNRURJVU08L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBSZWNvbW1lbmRhdGlvbnMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfm6DvuI8gRXhwZXJ0IFJlY29tbWVuZGF0aW9uczwvaDM-CiAgICAgICAgICAgICAgICA8ZGl2PnVuZGVmaW5lZDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBOZXh0IFN0ZXBzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqEgTmV4dCBTdGVwczwvaDM-CiAgICAgICAgICAgICAgICA8b2w-CiAgICAgICAgICAgICAgICAgICAgPGxpPlJldmlldyB0aGUgZGlhZ25vc3RpYyBmaW5kaW5ncyBhYm92ZTwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkNvbnRhY3QgYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiB3aXRoIHRoaXMgcmVwb3J0PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-U2hvdyB0aGVtIHRoZSBzcGVjaWZpYyBlcnJvciBjb2RlcyBhbmQgcmVjb21tZW5kYXRpb25zPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-R2V0IGEgc2Vjb25kIG9waW5pb24gaWYgdGhlIHF1b3RlIHNlZW1zIHRvbyBoaWdoPC9saT4KICAgICAgICAgICAgICAgIDwvb2w-CiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIGNsYXNzPSJjdGEtYnV0dG9uIj5HZXQgQW5vdGhlciBEaWFnbm9zaXM8L2E-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaXNjbGFpbWVyIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqDvuI8gSW1wb3J0YW50IERpc2NsYWltZXI8L2gzPgogICAgICAgICAgICAgICAgPHA-PGVtPlRoaXMgYW5hbHlzaXMgaXMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIGFuZCBzaG91bGQgYmUgdXNlZCBhcyBhIHN0YXJ0aW5nIHBvaW50IGZvciBwcm9mZXNzaW9uYWwgcmVwYWlyLiBBbHdheXMgY29uc3VsdCB3aXRoIGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gYmVmb3JlIHBlcmZvcm1pbmcgYW55IHJlcGFpcnMuIERpYWdub3N0aWNQcm8gTVZQIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgYW55IGRhbWFnZXMgcmVzdWx0aW5nIGZyb20gdGhlIHVzZSBvZiB0aGlzIGluZm9ybWF0aW9uLjwvZW0-PC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPCEtLSBGb290ZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyIj4KICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zdGljUHJvIE1WUDwvc3Ryb25nPiAtIEV4cGVydCBFcXVpcG1lbnQgRGlhZ25vc2lzPC9wPgogICAgICAgICAgICA8cD5SZXBvcnQgZ2VuZXJhdGVkIG9uIDcvMzEvMjAyNSwgNDoyNjozNyBBTTwvcD4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogMjBweCAwOyBwYWRkaW5nOiAxNXB4OyBiYWNrZ3JvdW5kOiAjZjhmYWZjOyBib3JkZXItcmFkaXVzOiA4cHg7Ij4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db250YWN0ICYgU3VwcG9ydDo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfk6cgRW1haWw6IDxhIGhyZWY9Im1haWx0bzpzdXBwb3J0QGRpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfjJAgV2Vic2l0ZTogPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5kaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLXRvcDogMTVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db25uZWN0IHdpdGggSmVyZW15Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPgogICAgICAgICAgICAgICAgICAgICAgICDwn5SXIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qZXJlbXlsb25nc2hvcmUiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-TGlua2VkSW48L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkKYgPGEgaHJlZj0iaHR0cHM6Ly94LmNvbS9Bc3BoYWx0Q293YjB5IiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPlR3aXR0ZXIvWDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-SvCA8YSBocmVmPSJtYWlsdG86amVyZW15QGludGVudHNvdWx0aW9ucy5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-RGlyZWN0IENvbnRhY3Q8L2E-CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY-CjwvYm9keT4KPC9odG1sPgogICAg'
    },
    headers: {
      'x-goog-api-client': 'gdcl/7.2.0 gl-node/20.19.4',
      'Accept-Encoding': 'gzip',
      'User-Agent': 'google-api-nodejs-client/7.2.0 (gzip)',
      Authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
      'Content-Type': 'application/json'
    },
    params: {},
    validateStatus: [Function (anonymous)],
    retry: true,
    body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBUaGUgR3V5IFdobyBEZWZpbml0ZWx5IERpZG4ndCBDYXVzZSBUaGlzLDwvaDI-CiAgICAgICAgICAgIDxwPllvdXIgZXF1aXBtZW50IGRpYWdub3N0aWMgYW5hbHlzaXMgaXMgY29tcGxldGUhIE91ciBBSS1wb3dlcmVkIHN5c3RlbSBoYXMgYW5hbHl6ZWQgeW91ciBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpIGFuZCBwcm92aWRlZCBleHBlcnQgcmVjb21tZW5kYXRpb25zLjwvcD4KCiAgICAgICAgICAgIDwhLS0gRXF1aXBtZW50IERldGFpbHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfk4sgRXF1aXBtZW50IEluZm9ybWF0aW9uPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-VHlwZTo8L3N0cm9uZz4gQXV0b21vdGl2ZSAoQ2FycywgVHJ1Y2tzLCBTVVZzLCBWYW5zKTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-TWFrZS9Nb2RlbDo8L3N0cm9uZz4gVm9sa3N3YWdlbiBBdGxhcyBTRSBWNiAoMjAxOCk8L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlByb2JsZW0gRGVzY3JpcHRpb246PC9zdHJvbmc-IFRoZSBBdGxhcyBoYXMgYWNoaWV2ZWQgd2hhdCBlbmdpbmVlcnMgY2FsbCAiY29tcHJlaGVuc2l2ZSBzeXN0ZW1zIGludGVncmF0aW9uIGZhaWx1cmUiIC0gYmFzaWNhbGx5IGV2ZXJ5dGhpbmcgZGVjaWRlZCB0byBoYXZlIHByb2JsZW1zIHNpbXVsdGFuZW91c2x5LiBGdWVsIHB1bXAgd2hpbmluZywgRUNVIGNvbmZ1c2VkLCBhbHRlcm5hdG9yIGRyYW1hdGljLCB0cmFuc21pc3Npb24gbW9vZHkuIEl0J3MgbGlrZSB0aGUgY2FyIGVxdWl2YWxlbnQgb2YgdHJ5aW5nIHRvIHNob3cgaG91c2VzIGR1cmluZyBhIHBvd2VyIG91dGFnZSB3aGlsZSB5b3VyIHBob25lIGlzIGRlYWQgYW5kIHRoZSBHUFMgaXMgYnJva2VuLiBTdGlsbCBydW5zLCBidXQgd2l0aCB0aGUgZW50aHVzaWFzbSBvZiBhIE1vbmRheSBtb3JuaW5nLjwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RXJyb3IgQ29kZXM6PC9zdHJvbmc-IFAwMDg3LCBQMDYwMSwgUDA2MjAsIFAwNzAwLCBCMURDMDAsIFUwMTAwPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlhZ25vc2lzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIHVyZ2VuY3ktbWVkaXVtIj4KICAgICAgICAgICAgICAgIDxoMz7wn5SNIERpYWdub3N0aWMgQW5hbHlzaXM8L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zaXM6PC9zdHJvbmc-IEJhc2VkIG9uIHRoZSBzeW1wdG9tcyBkZXNjcmliZWQsIHRoZXJlIGlzIGEgODUlIHByb2JhYmlsaXR5IHRoYXQgdGhpcyBpcyBhIGZ1ZWwgc3lzdGVtIG9yIGVuZ2luZSBtYW5hZ2VtZW50IGlzc3VlLiBUaGUgc3ltcHRvbXMgc3VnZ2VzdCBmdWVsIGRlbGl2ZXJ5IHByb2JsZW1zIG9yIHNlbnNvciBtYWxmdW5jdGlvbnMuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5VcmdlbmN5IExldmVsOjwvc3Ryb25nPiBNRURJVU08L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBSZWNvbW1lbmRhdGlvbnMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfm6DvuI8gRXhwZXJ0IFJlY29tbWVuZGF0aW9uczwvaDM-CiAgICAgICAgICAgICAgICA8ZGl2PnVuZGVmaW5lZDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBOZXh0IFN0ZXBzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqEgTmV4dCBTdGVwczwvaDM-CiAgICAgICAgICAgICAgICA8b2w-CiAgICAgICAgICAgICAgICAgICAgPGxpPlJldmlldyB0aGUgZGlhZ25vc3RpYyBmaW5kaW5ncyBhYm92ZTwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkNvbnRhY3QgYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiB3aXRoIHRoaXMgcmVwb3J0PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-U2hvdyB0aGVtIHRoZSBzcGVjaWZpYyBlcnJvciBjb2RlcyBhbmQgcmVjb21tZW5kYXRpb25zPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-R2V0IGEgc2Vjb25kIG9waW5pb24gaWYgdGhlIHF1b3RlIHNlZW1zIHRvbyBoaWdoPC9saT4KICAgICAgICAgICAgICAgIDwvb2w-CiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIGNsYXNzPSJjdGEtYnV0dG9uIj5HZXQgQW5vdGhlciBEaWFnbm9zaXM8L2E-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaXNjbGFpbWVyIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqDvuI8gSW1wb3J0YW50IERpc2NsYWltZXI8L2gzPgogICAgICAgICAgICAgICAgPHA-PGVtPlRoaXMgYW5hbHlzaXMgaXMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIGFuZCBzaG91bGQgYmUgdXNlZCBhcyBhIHN0YXJ0aW5nIHBvaW50IGZvciBwcm9mZXNzaW9uYWwgcmVwYWlyLiBBbHdheXMgY29uc3VsdCB3aXRoIGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gYmVmb3JlIHBlcmZvcm1pbmcgYW55IHJlcGFpcnMuIERpYWdub3N0aWNQcm8gTVZQIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgYW55IGRhbWFnZXMgcmVzdWx0aW5nIGZyb20gdGhlIHVzZSBvZiB0aGlzIGluZm9ybWF0aW9uLjwvZW0-PC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPCEtLSBGb290ZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyIj4KICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zdGljUHJvIE1WUDwvc3Ryb25nPiAtIEV4cGVydCBFcXVpcG1lbnQgRGlhZ25vc2lzPC9wPgogICAgICAgICAgICA8cD5SZXBvcnQgZ2VuZXJhdGVkIG9uIDcvMzEvMjAyNSwgNDoyNjozNyBBTTwvcD4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogMjBweCAwOyBwYWRkaW5nOiAxNXB4OyBiYWNrZ3JvdW5kOiAjZjhmYWZjOyBib3JkZXItcmFkaXVzOiA4cHg7Ij4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db250YWN0ICYgU3VwcG9ydDo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfk6cgRW1haWw6IDxhIGhyZWY9Im1haWx0bzpzdXBwb3J0QGRpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfjJAgV2Vic2l0ZTogPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5kaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLXRvcDogMTVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db25uZWN0IHdpdGggSmVyZW15Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPgogICAgICAgICAgICAgICAgICAgICAgICDwn5SXIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qZXJlbXlsb25nc2hvcmUiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-TGlua2VkSW48L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkKYgPGEgaHJlZj0iaHR0cHM6Ly94LmNvbS9Bc3BoYWx0Q293YjB5IiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPlR3aXR0ZXIvWDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-SvCA8YSBocmVmPSJtYWlsdG86amVyZW15QGludGVudHNvdWx0aW9ucy5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-RGlyZWN0IENvbnRhY3Q8L2E-CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY-CjwvYm9keT4KPC9odG1sPgogICAg"}',
    responseType: 'unknown',
    errorRedactor: [Function: defaultErrorRedactor],
    retryConfig: {
      currentRetryAttempt: 0,
      retry: 3,
      httpMethodsToRetry: [Array],
      noResponseRetries: 2,
      retryDelayMultiplier: 2,
      timeOfFirstRequest: 1753935998176,
      totalTimeout: 9007199254740991,
      maxRetryDelay: 9007199254740991,
      statusCodesToRetry: [Array]
    }
  },
  response: {
    config: {
      url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
      method: 'POST',
      apiVersion: '',
      userAgentDirectives: [Array],
      paramsSerializer: [Function (anonymous)],
      data: [Object],
      headers: [Object],
      params: {},
      validateStatus: [Function (anonymous)],
      retry: true,
      body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBUaGUgR3V5IFdobyBEZWZpbml0ZWx5IERpZG4ndCBDYXVzZSBUaGlzLDwvaDI-CiAgICAgICAgICAgIDxwPllvdXIgZXF1aXBtZW50IGRpYWdub3N0aWMgYW5hbHlzaXMgaXMgY29tcGxldGUhIE91ciBBSS1wb3dlcmVkIHN5c3RlbSBoYXMgYW5hbHl6ZWQgeW91ciBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpIGFuZCBwcm92aWRlZCBleHBlcnQgcmVjb21tZW5kYXRpb25zLjwvcD4KCiAgICAgICAgICAgIDwhLS0gRXF1aXBtZW50IERldGFpbHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfk4sgRXF1aXBtZW50IEluZm9ybWF0aW9uPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-VHlwZTo8L3N0cm9uZz4gQXV0b21vdGl2ZSAoQ2FycywgVHJ1Y2tzLCBTVVZzLCBWYW5zKTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-TWFrZS9Nb2RlbDo8L3N0cm9uZz4gVm9sa3N3YWdlbiBBdGxhcyBTRSBWNiAoMjAxOCk8L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlByb2JsZW0gRGVzY3JpcHRpb246PC9zdHJvbmc-IFRoZSBBdGxhcyBoYXMgYWNoaWV2ZWQgd2hhdCBlbmdpbmVlcnMgY2FsbCAiY29tcHJlaGVuc2l2ZSBzeXN0ZW1zIGludGVncmF0aW9uIGZhaWx1cmUiIC0gYmFzaWNhbGx5IGV2ZXJ5dGhpbmcgZGVjaWRlZCB0byBoYXZlIHByb2JsZW1zIHNpbXVsdGFuZW91c2x5LiBGdWVsIHB1bXAgd2hpbmluZywgRUNVIGNvbmZ1c2VkLCBhbHRlcm5hdG9yIGRyYW1hdGljLCB0cmFuc21pc3Npb24gbW9vZHkuIEl0J3MgbGlrZSB0aGUgY2FyIGVxdWl2YWxlbnQgb2YgdHJ5aW5nIHRvIHNob3cgaG91c2VzIGR1cmluZyBhIHBvd2VyIG91dGFnZSB3aGlsZSB5b3VyIHBob25lIGlzIGRlYWQgYW5kIHRoZSBHUFMgaXMgYnJva2VuLiBTdGlsbCBydW5zLCBidXQgd2l0aCB0aGUgZW50aHVzaWFzbSBvZiBhIE1vbmRheSBtb3JuaW5nLjwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RXJyb3IgQ29kZXM6PC9zdHJvbmc-IFAwMDg3LCBQMDYwMSwgUDA2MjAsIFAwNzAwLCBCMURDMDAsIFUwMTAwPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlhZ25vc2lzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIHVyZ2VuY3ktbWVkaXVtIj4KICAgICAgICAgICAgICAgIDxoMz7wn5SNIERpYWdub3N0aWMgQW5hbHlzaXM8L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zaXM6PC9zdHJvbmc-IEJhc2VkIG9uIHRoZSBzeW1wdG9tcyBkZXNjcmliZWQsIHRoZXJlIGlzIGEgODUlIHByb2JhYmlsaXR5IHRoYXQgdGhpcyBpcyBhIGZ1ZWwgc3lzdGVtIG9yIGVuZ2luZSBtYW5hZ2VtZW50IGlzc3VlLiBUaGUgc3ltcHRvbXMgc3VnZ2VzdCBmdWVsIGRlbGl2ZXJ5IHByb2JsZW1zIG9yIHNlbnNvciBtYWxmdW5jdGlvbnMuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5VcmdlbmN5IExldmVsOjwvc3Ryb25nPiBNRURJVU08L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBSZWNvbW1lbmRhdGlvbnMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfm6DvuI8gRXhwZXJ0IFJlY29tbWVuZGF0aW9uczwvaDM-CiAgICAgICAgICAgICAgICA8ZGl2PnVuZGVmaW5lZDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBOZXh0IFN0ZXBzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqEgTmV4dCBTdGVwczwvaDM-CiAgICAgICAgICAgICAgICA8b2w-CiAgICAgICAgICAgICAgICAgICAgPGxpPlJldmlldyB0aGUgZGlhZ25vc3RpYyBmaW5kaW5ncyBhYm92ZTwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkNvbnRhY3QgYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiB3aXRoIHRoaXMgcmVwb3J0PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-U2hvdyB0aGVtIHRoZSBzcGVjaWZpYyBlcnJvciBjb2RlcyBhbmQgcmVjb21tZW5kYXRpb25zPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-R2V0IGEgc2Vjb25kIG9waW5pb24gaWYgdGhlIHF1b3RlIHNlZW1zIHRvbyBoaWdoPC9saT4KICAgICAgICAgICAgICAgIDwvb2w-CiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIGNsYXNzPSJjdGEtYnV0dG9uIj5HZXQgQW5vdGhlciBEaWFnbm9zaXM8L2E-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaXNjbGFpbWVyIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqDvuI8gSW1wb3J0YW50IERpc2NsYWltZXI8L2gzPgogICAgICAgICAgICAgICAgPHA-PGVtPlRoaXMgYW5hbHlzaXMgaXMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIGFuZCBzaG91bGQgYmUgdXNlZCBhcyBhIHN0YXJ0aW5nIHBvaW50IGZvciBwcm9mZXNzaW9uYWwgcmVwYWlyLiBBbHdheXMgY29uc3VsdCB3aXRoIGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gYmVmb3JlIHBlcmZvcm1pbmcgYW55IHJlcGFpcnMuIERpYWdub3N0aWNQcm8gTVZQIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgYW55IGRhbWFnZXMgcmVzdWx0aW5nIGZyb20gdGhlIHVzZSBvZiB0aGlzIGluZm9ybWF0aW9uLjwvZW0-PC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPCEtLSBGb290ZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyIj4KICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zdGljUHJvIE1WUDwvc3Ryb25nPiAtIEV4cGVydCBFcXVpcG1lbnQgRGlhZ25vc2lzPC9wPgogICAgICAgICAgICA8cD5SZXBvcnQgZ2VuZXJhdGVkIG9uIDcvMzEvMjAyNSwgNDoyNjozNyBBTTwvcD4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogMjBweCAwOyBwYWRkaW5nOiAxNXB4OyBiYWNrZ3JvdW5kOiAjZjhmYWZjOyBib3JkZXItcmFkaXVzOiA4cHg7Ij4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db250YWN0ICYgU3VwcG9ydDo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfk6cgRW1haWw6IDxhIGhyZWY9Im1haWx0bzpzdXBwb3J0QGRpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfjJAgV2Vic2l0ZTogPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5kaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLXRvcDogMTVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db25uZWN0IHdpdGggSmVyZW15Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPgogICAgICAgICAgICAgICAgICAgICAgICDwn5SXIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qZXJlbXlsb25nc2hvcmUiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-TGlua2VkSW48L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkKYgPGEgaHJlZj0iaHR0cHM6Ly94LmNvbS9Bc3BoYWx0Q293YjB5IiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPlR3aXR0ZXIvWDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-SvCA8YSBocmVmPSJtYWlsdG86amVyZW15QGludGVudHNvdWx0aW9ucy5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-RGlyZWN0IENvbnRhY3Q8L2E-CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY-CjwvYm9keT4KPC9odG1sPgogICAg"}',
      responseType: 'unknown',
      errorRedactor: [Function: defaultErrorRedactor]
    },
    data: { error: [Object] },
    headers: {
      'content-encoding': 'gzip',
      'content-type': 'application/json; charset=UTF-8',
      date: 'Thu, 31 Jul 2025 04:26:37 GMT',
      server: 'ESF',
      'transfer-encoding': 'chunked',
      vary: 'Origin, X-Origin, Referer',
      'x-content-type-options': 'nosniff',
      'x-frame-options': 'SAMEORIGIN',
      'x-xss-protection': '0'
    },
    status: 400,
    statusText: 'Bad Request',
    request: {
      responseURL: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send'
    }
  },
  error: undefined,
  status: 400,
  code: 400,
  errors: [
    {
      message: 'Precondition check failed.',
      domain: 'global',
      reason: 'failedPrecondition'
    }
  ],
  [Symbol(gaxios-gaxios-error)]: '6.7.1'
}
‚ùå Failed to send customer email: GaxiosError: Precondition check failed.
    at Gaxios._request (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/gaxios/build/src/gaxios.js:142:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async JWT.requestAsync (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/google-auth-library/build/src/auth/oauth2client.js:429:18)
    at async EmailService.sendDiagnosticReport (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/emailService.js:58:24)
    at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:61:13)
    at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
    at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
    at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
    at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
  config: {
    url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
    method: 'POST',
    apiVersion: '',
    userAgentDirectives: [ [Object] ],
    paramsSerializer: [Function (anonymous)],
    data: {
      raw: 'RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBUaGUgR3V5IFdobyBEZWZpbml0ZWx5IERpZG4ndCBDYXVzZSBUaGlzLDwvaDI-CiAgICAgICAgICAgIDxwPllvdXIgZXF1aXBtZW50IGRpYWdub3N0aWMgYW5hbHlzaXMgaXMgY29tcGxldGUhIE91ciBBSS1wb3dlcmVkIHN5c3RlbSBoYXMgYW5hbHl6ZWQgeW91ciBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpIGFuZCBwcm92aWRlZCBleHBlcnQgcmVjb21tZW5kYXRpb25zLjwvcD4KCiAgICAgICAgICAgIDwhLS0gRXF1aXBtZW50IERldGFpbHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfk4sgRXF1aXBtZW50IEluZm9ybWF0aW9uPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-VHlwZTo8L3N0cm9uZz4gQXV0b21vdGl2ZSAoQ2FycywgVHJ1Y2tzLCBTVVZzLCBWYW5zKTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-TWFrZS9Nb2RlbDo8L3N0cm9uZz4gVm9sa3N3YWdlbiBBdGxhcyBTRSBWNiAoMjAxOCk8L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlByb2JsZW0gRGVzY3JpcHRpb246PC9zdHJvbmc-IFRoZSBBdGxhcyBoYXMgYWNoaWV2ZWQgd2hhdCBlbmdpbmVlcnMgY2FsbCAiY29tcHJlaGVuc2l2ZSBzeXN0ZW1zIGludGVncmF0aW9uIGZhaWx1cmUiIC0gYmFzaWNhbGx5IGV2ZXJ5dGhpbmcgZGVjaWRlZCB0byBoYXZlIHByb2JsZW1zIHNpbXVsdGFuZW91c2x5LiBGdWVsIHB1bXAgd2hpbmluZywgRUNVIGNvbmZ1c2VkLCBhbHRlcm5hdG9yIGRyYW1hdGljLCB0cmFuc21pc3Npb24gbW9vZHkuIEl0J3MgbGlrZSB0aGUgY2FyIGVxdWl2YWxlbnQgb2YgdHJ5aW5nIHRvIHNob3cgaG91c2VzIGR1cmluZyBhIHBvd2VyIG91dGFnZSB3aGlsZSB5b3VyIHBob25lIGlzIGRlYWQgYW5kIHRoZSBHUFMgaXMgYnJva2VuLiBTdGlsbCBydW5zLCBidXQgd2l0aCB0aGUgZW50aHVzaWFzbSBvZiBhIE1vbmRheSBtb3JuaW5nLjwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RXJyb3IgQ29kZXM6PC9zdHJvbmc-IFAwMDg3LCBQMDYwMSwgUDA2MjAsIFAwNzAwLCBCMURDMDAsIFUwMTAwPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlhZ25vc2lzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIHVyZ2VuY3ktbWVkaXVtIj4KICAgICAgICAgICAgICAgIDxoMz7wn5SNIERpYWdub3N0aWMgQW5hbHlzaXM8L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zaXM6PC9zdHJvbmc-IEJhc2VkIG9uIHRoZSBzeW1wdG9tcyBkZXNjcmliZWQsIHRoZXJlIGlzIGEgODUlIHByb2JhYmlsaXR5IHRoYXQgdGhpcyBpcyBhIGZ1ZWwgc3lzdGVtIG9yIGVuZ2luZSBtYW5hZ2VtZW50IGlzc3VlLiBUaGUgc3ltcHRvbXMgc3VnZ2VzdCBmdWVsIGRlbGl2ZXJ5IHByb2JsZW1zIG9yIHNlbnNvciBtYWxmdW5jdGlvbnMuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5VcmdlbmN5IExldmVsOjwvc3Ryb25nPiBNRURJVU08L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBSZWNvbW1lbmRhdGlvbnMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfm6DvuI8gRXhwZXJ0IFJlY29tbWVuZGF0aW9uczwvaDM-CiAgICAgICAgICAgICAgICA8ZGl2PnVuZGVmaW5lZDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBOZXh0IFN0ZXBzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqEgTmV4dCBTdGVwczwvaDM-CiAgICAgICAgICAgICAgICA8b2w-CiAgICAgICAgICAgICAgICAgICAgPGxpPlJldmlldyB0aGUgZGlhZ25vc3RpYyBmaW5kaW5ncyBhYm92ZTwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkNvbnRhY3QgYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiB3aXRoIHRoaXMgcmVwb3J0PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-U2hvdyB0aGVtIHRoZSBzcGVjaWZpYyBlcnJvciBjb2RlcyBhbmQgcmVjb21tZW5kYXRpb25zPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-R2V0IGEgc2Vjb25kIG9waW5pb24gaWYgdGhlIHF1b3RlIHNlZW1zIHRvbyBoaWdoPC9saT4KICAgICAgICAgICAgICAgIDwvb2w-CiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIGNsYXNzPSJjdGEtYnV0dG9uIj5HZXQgQW5vdGhlciBEaWFnbm9zaXM8L2E-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaXNjbGFpbWVyIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqDvuI8gSW1wb3J0YW50IERpc2NsYWltZXI8L2gzPgogICAgICAgICAgICAgICAgPHA-PGVtPlRoaXMgYW5hbHlzaXMgaXMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIGFuZCBzaG91bGQgYmUgdXNlZCBhcyBhIHN0YXJ0aW5nIHBvaW50IGZvciBwcm9mZXNzaW9uYWwgcmVwYWlyLiBBbHdheXMgY29uc3VsdCB3aXRoIGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gYmVmb3JlIHBlcmZvcm1pbmcgYW55IHJlcGFpcnMuIERpYWdub3N0aWNQcm8gTVZQIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgYW55IGRhbWFnZXMgcmVzdWx0aW5nIGZyb20gdGhlIHVzZSBvZiB0aGlzIGluZm9ybWF0aW9uLjwvZW0-PC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPCEtLSBGb290ZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyIj4KICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zdGljUHJvIE1WUDwvc3Ryb25nPiAtIEV4cGVydCBFcXVpcG1lbnQgRGlhZ25vc2lzPC9wPgogICAgICAgICAgICA8cD5SZXBvcnQgZ2VuZXJhdGVkIG9uIDcvMzEvMjAyNSwgNDoyNjozNyBBTTwvcD4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogMjBweCAwOyBwYWRkaW5nOiAxNXB4OyBiYWNrZ3JvdW5kOiAjZjhmYWZjOyBib3JkZXItcmFkaXVzOiA4cHg7Ij4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db250YWN0ICYgU3VwcG9ydDo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfk6cgRW1haWw6IDxhIGhyZWY9Im1haWx0bzpzdXBwb3J0QGRpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfjJAgV2Vic2l0ZTogPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5kaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLXRvcDogMTVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db25uZWN0IHdpdGggSmVyZW15Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPgogICAgICAgICAgICAgICAgICAgICAgICDwn5SXIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qZXJlbXlsb25nc2hvcmUiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-TGlua2VkSW48L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkKYgPGEgaHJlZj0iaHR0cHM6Ly94LmNvbS9Bc3BoYWx0Q293YjB5IiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPlR3aXR0ZXIvWDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-SvCA8YSBocmVmPSJtYWlsdG86amVyZW15QGludGVudHNvdWx0aW9ucy5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-RGlyZWN0IENvbnRhY3Q8L2E-CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY-CjwvYm9keT4KPC9odG1sPgogICAg'
    },
    headers: {
      'x-goog-api-client': 'gdcl/7.2.0 gl-node/20.19.4',
      'Accept-Encoding': 'gzip',
      'User-Agent': 'google-api-nodejs-client/7.2.0 (gzip)',
      Authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
      'Content-Type': 'application/json'
    },
    params: {},
    validateStatus: [Function (anonymous)],
    retry: true,
    body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBUaGUgR3V5IFdobyBEZWZpbml0ZWx5IERpZG4ndCBDYXVzZSBUaGlzLDwvaDI-CiAgICAgICAgICAgIDxwPllvdXIgZXF1aXBtZW50IGRpYWdub3N0aWMgYW5hbHlzaXMgaXMgY29tcGxldGUhIE91ciBBSS1wb3dlcmVkIHN5c3RlbSBoYXMgYW5hbHl6ZWQgeW91ciBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpIGFuZCBwcm92aWRlZCBleHBlcnQgcmVjb21tZW5kYXRpb25zLjwvcD4KCiAgICAgICAgICAgIDwhLS0gRXF1aXBtZW50IERldGFpbHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfk4sgRXF1aXBtZW50IEluZm9ybWF0aW9uPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-VHlwZTo8L3N0cm9uZz4gQXV0b21vdGl2ZSAoQ2FycywgVHJ1Y2tzLCBTVVZzLCBWYW5zKTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-TWFrZS9Nb2RlbDo8L3N0cm9uZz4gVm9sa3N3YWdlbiBBdGxhcyBTRSBWNiAoMjAxOCk8L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlByb2JsZW0gRGVzY3JpcHRpb246PC9zdHJvbmc-IFRoZSBBdGxhcyBoYXMgYWNoaWV2ZWQgd2hhdCBlbmdpbmVlcnMgY2FsbCAiY29tcHJlaGVuc2l2ZSBzeXN0ZW1zIGludGVncmF0aW9uIGZhaWx1cmUiIC0gYmFzaWNhbGx5IGV2ZXJ5dGhpbmcgZGVjaWRlZCB0byBoYXZlIHByb2JsZW1zIHNpbXVsdGFuZW91c2x5LiBGdWVsIHB1bXAgd2hpbmluZywgRUNVIGNvbmZ1c2VkLCBhbHRlcm5hdG9yIGRyYW1hdGljLCB0cmFuc21pc3Npb24gbW9vZHkuIEl0J3MgbGlrZSB0aGUgY2FyIGVxdWl2YWxlbnQgb2YgdHJ5aW5nIHRvIHNob3cgaG91c2VzIGR1cmluZyBhIHBvd2VyIG91dGFnZSB3aGlsZSB5b3VyIHBob25lIGlzIGRlYWQgYW5kIHRoZSBHUFMgaXMgYnJva2VuLiBTdGlsbCBydW5zLCBidXQgd2l0aCB0aGUgZW50aHVzaWFzbSBvZiBhIE1vbmRheSBtb3JuaW5nLjwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RXJyb3IgQ29kZXM6PC9zdHJvbmc-IFAwMDg3LCBQMDYwMSwgUDA2MjAsIFAwNzAwLCBCMURDMDAsIFUwMTAwPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlhZ25vc2lzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIHVyZ2VuY3ktbWVkaXVtIj4KICAgICAgICAgICAgICAgIDxoMz7wn5SNIERpYWdub3N0aWMgQW5hbHlzaXM8L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zaXM6PC9zdHJvbmc-IEJhc2VkIG9uIHRoZSBzeW1wdG9tcyBkZXNjcmliZWQsIHRoZXJlIGlzIGEgODUlIHByb2JhYmlsaXR5IHRoYXQgdGhpcyBpcyBhIGZ1ZWwgc3lzdGVtIG9yIGVuZ2luZSBtYW5hZ2VtZW50IGlzc3VlLiBUaGUgc3ltcHRvbXMgc3VnZ2VzdCBmdWVsIGRlbGl2ZXJ5IHByb2JsZW1zIG9yIHNlbnNvciBtYWxmdW5jdGlvbnMuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5VcmdlbmN5IExldmVsOjwvc3Ryb25nPiBNRURJVU08L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBSZWNvbW1lbmRhdGlvbnMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfm6DvuI8gRXhwZXJ0IFJlY29tbWVuZGF0aW9uczwvaDM-CiAgICAgICAgICAgICAgICA8ZGl2PnVuZGVmaW5lZDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBOZXh0IFN0ZXBzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqEgTmV4dCBTdGVwczwvaDM-CiAgICAgICAgICAgICAgICA8b2w-CiAgICAgICAgICAgICAgICAgICAgPGxpPlJldmlldyB0aGUgZGlhZ25vc3RpYyBmaW5kaW5ncyBhYm92ZTwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkNvbnRhY3QgYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiB3aXRoIHRoaXMgcmVwb3J0PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-U2hvdyB0aGVtIHRoZSBzcGVjaWZpYyBlcnJvciBjb2RlcyBhbmQgcmVjb21tZW5kYXRpb25zPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-R2V0IGEgc2Vjb25kIG9waW5pb24gaWYgdGhlIHF1b3RlIHNlZW1zIHRvbyBoaWdoPC9saT4KICAgICAgICAgICAgICAgIDwvb2w-CiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIGNsYXNzPSJjdGEtYnV0dG9uIj5HZXQgQW5vdGhlciBEaWFnbm9zaXM8L2E-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaXNjbGFpbWVyIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqDvuI8gSW1wb3J0YW50IERpc2NsYWltZXI8L2gzPgogICAgICAgICAgICAgICAgPHA-PGVtPlRoaXMgYW5hbHlzaXMgaXMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIGFuZCBzaG91bGQgYmUgdXNlZCBhcyBhIHN0YXJ0aW5nIHBvaW50IGZvciBwcm9mZXNzaW9uYWwgcmVwYWlyLiBBbHdheXMgY29uc3VsdCB3aXRoIGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gYmVmb3JlIHBlcmZvcm1pbmcgYW55IHJlcGFpcnMuIERpYWdub3N0aWNQcm8gTVZQIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgYW55IGRhbWFnZXMgcmVzdWx0aW5nIGZyb20gdGhlIHVzZSBvZiB0aGlzIGluZm9ybWF0aW9uLjwvZW0-PC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPCEtLSBGb290ZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyIj4KICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zdGljUHJvIE1WUDwvc3Ryb25nPiAtIEV4cGVydCBFcXVpcG1lbnQgRGlhZ25vc2lzPC9wPgogICAgICAgICAgICA8cD5SZXBvcnQgZ2VuZXJhdGVkIG9uIDcvMzEvMjAyNSwgNDoyNjozNyBBTTwvcD4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogMjBweCAwOyBwYWRkaW5nOiAxNXB4OyBiYWNrZ3JvdW5kOiAjZjhmYWZjOyBib3JkZXItcmFkaXVzOiA4cHg7Ij4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db250YWN0ICYgU3VwcG9ydDo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfk6cgRW1haWw6IDxhIGhyZWY9Im1haWx0bzpzdXBwb3J0QGRpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfjJAgV2Vic2l0ZTogPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5kaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLXRvcDogMTVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db25uZWN0IHdpdGggSmVyZW15Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPgogICAgICAgICAgICAgICAgICAgICAgICDwn5SXIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qZXJlbXlsb25nc2hvcmUiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-TGlua2VkSW48L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkKYgPGEgaHJlZj0iaHR0cHM6Ly94LmNvbS9Bc3BoYWx0Q293YjB5IiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPlR3aXR0ZXIvWDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-SvCA8YSBocmVmPSJtYWlsdG86amVyZW15QGludGVudHNvdWx0aW9ucy5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-RGlyZWN0IENvbnRhY3Q8L2E-CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY-CjwvYm9keT4KPC9odG1sPgogICAg"}',
    responseType: 'unknown',
    errorRedactor: [Function: defaultErrorRedactor],
    retryConfig: {
      currentRetryAttempt: 0,
      retry: 3,
      httpMethodsToRetry: [Array],
      noResponseRetries: 2,
      retryDelayMultiplier: 2,
      timeOfFirstRequest: 1753935998176,
      totalTimeout: 9007199254740991,
      maxRetryDelay: 9007199254740991,
      statusCodesToRetry: [Array]
    }
  },
  response: {
    config: {
      url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
      method: 'POST',
      apiVersion: '',
      userAgentDirectives: [Array],
      paramsSerializer: [Function (anonymous)],
      data: [Object],
      headers: [Object],
      params: {},
      validateStatus: [Function (anonymous)],
      retry: true,
      body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBUaGUgR3V5IFdobyBEZWZpbml0ZWx5IERpZG4ndCBDYXVzZSBUaGlzLDwvaDI-CiAgICAgICAgICAgIDxwPllvdXIgZXF1aXBtZW50IGRpYWdub3N0aWMgYW5hbHlzaXMgaXMgY29tcGxldGUhIE91ciBBSS1wb3dlcmVkIHN5c3RlbSBoYXMgYW5hbHl6ZWQgeW91ciBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpIGFuZCBwcm92aWRlZCBleHBlcnQgcmVjb21tZW5kYXRpb25zLjwvcD4KCiAgICAgICAgICAgIDwhLS0gRXF1aXBtZW50IERldGFpbHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfk4sgRXF1aXBtZW50IEluZm9ybWF0aW9uPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-VHlwZTo8L3N0cm9uZz4gQXV0b21vdGl2ZSAoQ2FycywgVHJ1Y2tzLCBTVVZzLCBWYW5zKTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-TWFrZS9Nb2RlbDo8L3N0cm9uZz4gVm9sa3N3YWdlbiBBdGxhcyBTRSBWNiAoMjAxOCk8L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlByb2JsZW0gRGVzY3JpcHRpb246PC9zdHJvbmc-IFRoZSBBdGxhcyBoYXMgYWNoaWV2ZWQgd2hhdCBlbmdpbmVlcnMgY2FsbCAiY29tcHJlaGVuc2l2ZSBzeXN0ZW1zIGludGVncmF0aW9uIGZhaWx1cmUiIC0gYmFzaWNhbGx5IGV2ZXJ5dGhpbmcgZGVjaWRlZCB0byBoYXZlIHByb2JsZW1zIHNpbXVsdGFuZW91c2x5LiBGdWVsIHB1bXAgd2hpbmluZywgRUNVIGNvbmZ1c2VkLCBhbHRlcm5hdG9yIGRyYW1hdGljLCB0cmFuc21pc3Npb24gbW9vZHkuIEl0J3MgbGlrZSB0aGUgY2FyIGVxdWl2YWxlbnQgb2YgdHJ5aW5nIHRvIHNob3cgaG91c2VzIGR1cmluZyBhIHBvd2VyIG91dGFnZSB3aGlsZSB5b3VyIHBob25lIGlzIGRlYWQgYW5kIHRoZSBHUFMgaXMgYnJva2VuLiBTdGlsbCBydW5zLCBidXQgd2l0aCB0aGUgZW50aHVzaWFzbSBvZiBhIE1vbmRheSBtb3JuaW5nLjwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RXJyb3IgQ29kZXM6PC9zdHJvbmc-IFAwMDg3LCBQMDYwMSwgUDA2MjAsIFAwNzAwLCBCMURDMDAsIFUwMTAwPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlhZ25vc2lzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIHVyZ2VuY3ktbWVkaXVtIj4KICAgICAgICAgICAgICAgIDxoMz7wn5SNIERpYWdub3N0aWMgQW5hbHlzaXM8L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zaXM6PC9zdHJvbmc-IEJhc2VkIG9uIHRoZSBzeW1wdG9tcyBkZXNjcmliZWQsIHRoZXJlIGlzIGEgODUlIHByb2JhYmlsaXR5IHRoYXQgdGhpcyBpcyBhIGZ1ZWwgc3lzdGVtIG9yIGVuZ2luZSBtYW5hZ2VtZW50IGlzc3VlLiBUaGUgc3ltcHRvbXMgc3VnZ2VzdCBmdWVsIGRlbGl2ZXJ5IHByb2JsZW1zIG9yIHNlbnNvciBtYWxmdW5jdGlvbnMuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5VcmdlbmN5IExldmVsOjwvc3Ryb25nPiBNRURJVU08L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBSZWNvbW1lbmRhdGlvbnMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfm6DvuI8gRXhwZXJ0IFJlY29tbWVuZGF0aW9uczwvaDM-CiAgICAgICAgICAgICAgICA8ZGl2PnVuZGVmaW5lZDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBOZXh0IFN0ZXBzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqEgTmV4dCBTdGVwczwvaDM-CiAgICAgICAgICAgICAgICA8b2w-CiAgICAgICAgICAgICAgICAgICAgPGxpPlJldmlldyB0aGUgZGlhZ25vc3RpYyBmaW5kaW5ncyBhYm92ZTwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkNvbnRhY3QgYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiB3aXRoIHRoaXMgcmVwb3J0PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-U2hvdyB0aGVtIHRoZSBzcGVjaWZpYyBlcnJvciBjb2RlcyBhbmQgcmVjb21tZW5kYXRpb25zPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-R2V0IGEgc2Vjb25kIG9waW5pb24gaWYgdGhlIHF1b3RlIHNlZW1zIHRvbyBoaWdoPC9saT4KICAgICAgICAgICAgICAgIDwvb2w-CiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIGNsYXNzPSJjdGEtYnV0dG9uIj5HZXQgQW5vdGhlciBEaWFnbm9zaXM8L2E-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaXNjbGFpbWVyIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqDvuI8gSW1wb3J0YW50IERpc2NsYWltZXI8L2gzPgogICAgICAgICAgICAgICAgPHA-PGVtPlRoaXMgYW5hbHlzaXMgaXMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIGFuZCBzaG91bGQgYmUgdXNlZCBhcyBhIHN0YXJ0aW5nIHBvaW50IGZvciBwcm9mZXNzaW9uYWwgcmVwYWlyLiBBbHdheXMgY29uc3VsdCB3aXRoIGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gYmVmb3JlIHBlcmZvcm1pbmcgYW55IHJlcGFpcnMuIERpYWdub3N0aWNQcm8gTVZQIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgYW55IGRhbWFnZXMgcmVzdWx0aW5nIGZyb20gdGhlIHVzZSBvZiB0aGlzIGluZm9ybWF0aW9uLjwvZW0-PC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPCEtLSBGb290ZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyIj4KICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zdGljUHJvIE1WUDwvc3Ryb25nPiAtIEV4cGVydCBFcXVpcG1lbnQgRGlhZ25vc2lzPC9wPgogICAgICAgICAgICA8cD5SZXBvcnQgZ2VuZXJhdGVkIG9uIDcvMzEvMjAyNSwgNDoyNjozNyBBTTwvcD4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogMjBweCAwOyBwYWRkaW5nOiAxNXB4OyBiYWNrZ3JvdW5kOiAjZjhmYWZjOyBib3JkZXItcmFkaXVzOiA4cHg7Ij4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db250YWN0ICYgU3VwcG9ydDo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfk6cgRW1haWw6IDxhIGhyZWY9Im1haWx0bzpzdXBwb3J0QGRpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfjJAgV2Vic2l0ZTogPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5kaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLXRvcDogMTVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db25uZWN0IHdpdGggSmVyZW15Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPgogICAgICAgICAgICAgICAgICAgICAgICDwn5SXIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qZXJlbXlsb25nc2hvcmUiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-TGlua2VkSW48L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkKYgPGEgaHJlZj0iaHR0cHM6Ly94LmNvbS9Bc3BoYWx0Q293YjB5IiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPlR3aXR0ZXIvWDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-SvCA8YSBocmVmPSJtYWlsdG86amVyZW15QGludGVudHNvdWx0aW9ucy5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-RGlyZWN0IENvbnRhY3Q8L2E-CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY-CjwvYm9keT4KPC9odG1sPgogICAg"}',
      responseType: 'unknown',
      errorRedactor: [Function: defaultErrorRedactor]
    },
    data: { error: [Object] },
    headers: {
      'content-encoding': 'gzip',
      'content-type': 'application/json; charset=UTF-8',
      date: 'Thu, 31 Jul 2025 04:26:37 GMT',
      server: 'ESF',
      'transfer-encoding': 'chunked',
      vary: 'Origin, X-Origin, Referer',
      'x-content-type-options': 'nosniff',
      'x-frame-options': 'SAMEORIGIN',
      'x-xss-protection': '0'
    },
    status: 400,
    statusText: 'Bad Request',
    request: {
      responseURL: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send'
    }
  },
  error: undefined,
  status: 400,
  code: 400,
  errors: [
    {
      message: 'Precondition check failed.',
      domain: 'global',
      reason: 'failedPrecondition'
    }
  ],
  [Symbol(gaxios-gaxios-error)]: '6.7.1'
}
üìù New diagnostic form submission received
üîç Processing verification request for The Guy Who Definitely Didn't Cause This
üìß Skipping admin notification to prioritize AI analysis
üîç Starting AI diagnostic analysis...
üöÄ Attempting Vertex AI Gemini analysis...
‚ö†Ô∏è Gemini failed, details: [VertexAI.ClientError]: got status: 404 Not Found. {"error":{"code":404,"message":"Publisher Model `projects/diagnostic-pro-mvp/locations/us-central1/publishers/google/models/gemini-1.5-pro` was not found or your project does not have access to it. Please ensure you are using a valid model version. For more information, see: https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versions","status":"NOT_FOUND"}}
üîÑ Using mock diagnostic response as fallback
‚úÖ Mock analysis completed - system operational
‚úÖ AI diagnostic analysis completed using DiagnosticPro Mock AI (Fallback)
üéØ Full diagnostic analysis completed
‚ùå Failed to send diagnostic report: GaxiosError: Precondition check failed.
    at Gaxios._request (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/gaxios/build/src/gaxios.js:142:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async JWT.requestAsync (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/google-auth-library/build/src/auth/oauth2client.js:429:18)
    at async EmailService.sendDiagnosticReport (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/emailService.js:58:24)
    at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:61:13)
    at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
    at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
    at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
    at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
  config: {
    url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
    method: 'POST',
    apiVersion: '',
    userAgentDirectives: [ [Object] ],
    paramsSerializer: [Function (anonymous)],
    data: {
      raw: 'RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBUaGUgR3V5IFdobyBEZWZpbml0ZWx5IERpZG4ndCBDYXVzZSBUaGlzLDwvaDI-CiAgICAgICAgICAgIDxwPllvdXIgZXF1aXBtZW50IGRpYWdub3N0aWMgYW5hbHlzaXMgaXMgY29tcGxldGUhIE91ciBBSS1wb3dlcmVkIHN5c3RlbSBoYXMgYW5hbHl6ZWQgeW91ciBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpIGFuZCBwcm92aWRlZCBleHBlcnQgcmVjb21tZW5kYXRpb25zLjwvcD4KCiAgICAgICAgICAgIDwhLS0gRXF1aXBtZW50IERldGFpbHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfk4sgRXF1aXBtZW50IEluZm9ybWF0aW9uPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-VHlwZTo8L3N0cm9uZz4gQXV0b21vdGl2ZSAoQ2FycywgVHJ1Y2tzLCBTVVZzLCBWYW5zKTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-TWFrZS9Nb2RlbDo8L3N0cm9uZz4gVm9sa3N3YWdlbiBBdGxhcyBTRSBWNiAoMjAxOCk8L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlByb2JsZW0gRGVzY3JpcHRpb246PC9zdHJvbmc-IFRoZSBBdGxhcyBoYXMgYWNoaWV2ZWQgd2hhdCBlbmdpbmVlcnMgY2FsbCAiY29tcHJlaGVuc2l2ZSBzeXN0ZW1zIGludGVncmF0aW9uIGZhaWx1cmUiIC0gYmFzaWNhbGx5IGV2ZXJ5dGhpbmcgZGVjaWRlZCB0byBoYXZlIHByb2JsZW1zIHNpbXVsdGFuZW91c2x5LiBGdWVsIHB1bXAgd2hpbmluZywgRUNVIGNvbmZ1c2VkLCBhbHRlcm5hdG9yIGRyYW1hdGljLCB0cmFuc21pc3Npb24gbW9vZHkuIEl0J3MgbGlrZSB0aGUgY2FyIGVxdWl2YWxlbnQgb2YgdHJ5aW5nIHRvIHNob3cgaG91c2VzIGR1cmluZyBhIHBvd2VyIG91dGFnZSB3aGlsZSB5b3VyIHBob25lIGlzIGRlYWQgYW5kIHRoZSBHUFMgaXMgYnJva2VuLiBTdGlsbCBydW5zLCBidXQgd2l0aCB0aGUgZW50aHVzaWFzbSBvZiBhIE1vbmRheSBtb3JuaW5nLjwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RXJyb3IgQ29kZXM6PC9zdHJvbmc-IFAwMDg3LCBQMDYwMSwgUDA2MjAsIFAwNzAwLCBCMURDMDAsIFUwMTAwPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlhZ25vc2lzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIHVyZ2VuY3ktbWVkaXVtIj4KICAgICAgICAgICAgICAgIDxoMz7wn5SNIERpYWdub3N0aWMgQW5hbHlzaXM8L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zaXM6PC9zdHJvbmc-IEJhc2VkIG9uIHRoZSBzeW1wdG9tcyBkZXNjcmliZWQsIHRoZXJlIGlzIGEgOTIlIHByb2JhYmlsaXR5IHRoYXQgdGhpcyBpcyBhIGZ1ZWwgc3lzdGVtIG9yIGVuZ2luZSBtYW5hZ2VtZW50IGlzc3VlLiBUaGUgc3ltcHRvbXMgc3VnZ2VzdCBmdWVsIGRlbGl2ZXJ5IHByb2JsZW1zIG9yIHNlbnNvciBtYWxmdW5jdGlvbnMuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5VcmdlbmN5IExldmVsOjwvc3Ryb25nPiBNRURJVU08L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBSZWNvbW1lbmRhdGlvbnMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfm6DvuI8gRXhwZXJ0IFJlY29tbWVuZGF0aW9uczwvaDM-CiAgICAgICAgICAgICAgICA8ZGl2PnVuZGVmaW5lZDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBOZXh0IFN0ZXBzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqEgTmV4dCBTdGVwczwvaDM-CiAgICAgICAgICAgICAgICA8b2w-CiAgICAgICAgICAgICAgICAgICAgPGxpPlJldmlldyB0aGUgZGlhZ25vc3RpYyBmaW5kaW5ncyBhYm92ZTwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkNvbnRhY3QgYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiB3aXRoIHRoaXMgcmVwb3J0PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-U2hvdyB0aGVtIHRoZSBzcGVjaWZpYyBlcnJvciBjb2RlcyBhbmQgcmVjb21tZW5kYXRpb25zPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-R2V0IGEgc2Vjb25kIG9waW5pb24gaWYgdGhlIHF1b3RlIHNlZW1zIHRvbyBoaWdoPC9saT4KICAgICAgICAgICAgICAgIDwvb2w-CiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIGNsYXNzPSJjdGEtYnV0dG9uIj5HZXQgQW5vdGhlciBEaWFnbm9zaXM8L2E-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaXNjbGFpbWVyIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqDvuI8gSW1wb3J0YW50IERpc2NsYWltZXI8L2gzPgogICAgICAgICAgICAgICAgPHA-PGVtPlRoaXMgYW5hbHlzaXMgaXMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIGFuZCBzaG91bGQgYmUgdXNlZCBhcyBhIHN0YXJ0aW5nIHBvaW50IGZvciBwcm9mZXNzaW9uYWwgcmVwYWlyLiBBbHdheXMgY29uc3VsdCB3aXRoIGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gYmVmb3JlIHBlcmZvcm1pbmcgYW55IHJlcGFpcnMuIERpYWdub3N0aWNQcm8gTVZQIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgYW55IGRhbWFnZXMgcmVzdWx0aW5nIGZyb20gdGhlIHVzZSBvZiB0aGlzIGluZm9ybWF0aW9uLjwvZW0-PC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPCEtLSBGb290ZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyIj4KICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zdGljUHJvIE1WUDwvc3Ryb25nPiAtIEV4cGVydCBFcXVpcG1lbnQgRGlhZ25vc2lzPC9wPgogICAgICAgICAgICA8cD5SZXBvcnQgZ2VuZXJhdGVkIG9uIDcvMzEvMjAyNSwgNDoyNjozOSBBTTwvcD4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogMjBweCAwOyBwYWRkaW5nOiAxNXB4OyBiYWNrZ3JvdW5kOiAjZjhmYWZjOyBib3JkZXItcmFkaXVzOiA4cHg7Ij4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db250YWN0ICYgU3VwcG9ydDo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfk6cgRW1haWw6IDxhIGhyZWY9Im1haWx0bzpzdXBwb3J0QGRpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfjJAgV2Vic2l0ZTogPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5kaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLXRvcDogMTVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db25uZWN0IHdpdGggSmVyZW15Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPgogICAgICAgICAgICAgICAgICAgICAgICDwn5SXIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qZXJlbXlsb25nc2hvcmUiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-TGlua2VkSW48L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkKYgPGEgaHJlZj0iaHR0cHM6Ly94LmNvbS9Bc3BoYWx0Q293YjB5IiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPlR3aXR0ZXIvWDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-SvCA8YSBocmVmPSJtYWlsdG86amVyZW15QGludGVudHNvdWx0aW9ucy5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-RGlyZWN0IENvbnRhY3Q8L2E-CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY-CjwvYm9keT4KPC9odG1sPgogICAg'
    },
    headers: {
      'x-goog-api-client': 'gdcl/7.2.0 gl-node/20.19.4',
      'Accept-Encoding': 'gzip',
      'User-Agent': 'google-api-nodejs-client/7.2.0 (gzip)',
      Authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
      'Content-Type': 'application/json'
    },
    params: {},
    validateStatus: [Function (anonymous)],
    retry: true,
    body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBUaGUgR3V5IFdobyBEZWZpbml0ZWx5IERpZG4ndCBDYXVzZSBUaGlzLDwvaDI-CiAgICAgICAgICAgIDxwPllvdXIgZXF1aXBtZW50IGRpYWdub3N0aWMgYW5hbHlzaXMgaXMgY29tcGxldGUhIE91ciBBSS1wb3dlcmVkIHN5c3RlbSBoYXMgYW5hbHl6ZWQgeW91ciBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpIGFuZCBwcm92aWRlZCBleHBlcnQgcmVjb21tZW5kYXRpb25zLjwvcD4KCiAgICAgICAgICAgIDwhLS0gRXF1aXBtZW50IERldGFpbHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfk4sgRXF1aXBtZW50IEluZm9ybWF0aW9uPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-VHlwZTo8L3N0cm9uZz4gQXV0b21vdGl2ZSAoQ2FycywgVHJ1Y2tzLCBTVVZzLCBWYW5zKTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-TWFrZS9Nb2RlbDo8L3N0cm9uZz4gVm9sa3N3YWdlbiBBdGxhcyBTRSBWNiAoMjAxOCk8L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlByb2JsZW0gRGVzY3JpcHRpb246PC9zdHJvbmc-IFRoZSBBdGxhcyBoYXMgYWNoaWV2ZWQgd2hhdCBlbmdpbmVlcnMgY2FsbCAiY29tcHJlaGVuc2l2ZSBzeXN0ZW1zIGludGVncmF0aW9uIGZhaWx1cmUiIC0gYmFzaWNhbGx5IGV2ZXJ5dGhpbmcgZGVjaWRlZCB0byBoYXZlIHByb2JsZW1zIHNpbXVsdGFuZW91c2x5LiBGdWVsIHB1bXAgd2hpbmluZywgRUNVIGNvbmZ1c2VkLCBhbHRlcm5hdG9yIGRyYW1hdGljLCB0cmFuc21pc3Npb24gbW9vZHkuIEl0J3MgbGlrZSB0aGUgY2FyIGVxdWl2YWxlbnQgb2YgdHJ5aW5nIHRvIHNob3cgaG91c2VzIGR1cmluZyBhIHBvd2VyIG91dGFnZSB3aGlsZSB5b3VyIHBob25lIGlzIGRlYWQgYW5kIHRoZSBHUFMgaXMgYnJva2VuLiBTdGlsbCBydW5zLCBidXQgd2l0aCB0aGUgZW50aHVzaWFzbSBvZiBhIE1vbmRheSBtb3JuaW5nLjwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RXJyb3IgQ29kZXM6PC9zdHJvbmc-IFAwMDg3LCBQMDYwMSwgUDA2MjAsIFAwNzAwLCBCMURDMDAsIFUwMTAwPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlhZ25vc2lzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIHVyZ2VuY3ktbWVkaXVtIj4KICAgICAgICAgICAgICAgIDxoMz7wn5SNIERpYWdub3N0aWMgQW5hbHlzaXM8L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zaXM6PC9zdHJvbmc-IEJhc2VkIG9uIHRoZSBzeW1wdG9tcyBkZXNjcmliZWQsIHRoZXJlIGlzIGEgOTIlIHByb2JhYmlsaXR5IHRoYXQgdGhpcyBpcyBhIGZ1ZWwgc3lzdGVtIG9yIGVuZ2luZSBtYW5hZ2VtZW50IGlzc3VlLiBUaGUgc3ltcHRvbXMgc3VnZ2VzdCBmdWVsIGRlbGl2ZXJ5IHByb2JsZW1zIG9yIHNlbnNvciBtYWxmdW5jdGlvbnMuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5VcmdlbmN5IExldmVsOjwvc3Ryb25nPiBNRURJVU08L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBSZWNvbW1lbmRhdGlvbnMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfm6DvuI8gRXhwZXJ0IFJlY29tbWVuZGF0aW9uczwvaDM-CiAgICAgICAgICAgICAgICA8ZGl2PnVuZGVmaW5lZDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBOZXh0IFN0ZXBzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqEgTmV4dCBTdGVwczwvaDM-CiAgICAgICAgICAgICAgICA8b2w-CiAgICAgICAgICAgICAgICAgICAgPGxpPlJldmlldyB0aGUgZGlhZ25vc3RpYyBmaW5kaW5ncyBhYm92ZTwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkNvbnRhY3QgYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiB3aXRoIHRoaXMgcmVwb3J0PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-U2hvdyB0aGVtIHRoZSBzcGVjaWZpYyBlcnJvciBjb2RlcyBhbmQgcmVjb21tZW5kYXRpb25zPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-R2V0IGEgc2Vjb25kIG9waW5pb24gaWYgdGhlIHF1b3RlIHNlZW1zIHRvbyBoaWdoPC9saT4KICAgICAgICAgICAgICAgIDwvb2w-CiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIGNsYXNzPSJjdGEtYnV0dG9uIj5HZXQgQW5vdGhlciBEaWFnbm9zaXM8L2E-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaXNjbGFpbWVyIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqDvuI8gSW1wb3J0YW50IERpc2NsYWltZXI8L2gzPgogICAgICAgICAgICAgICAgPHA-PGVtPlRoaXMgYW5hbHlzaXMgaXMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIGFuZCBzaG91bGQgYmUgdXNlZCBhcyBhIHN0YXJ0aW5nIHBvaW50IGZvciBwcm9mZXNzaW9uYWwgcmVwYWlyLiBBbHdheXMgY29uc3VsdCB3aXRoIGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gYmVmb3JlIHBlcmZvcm1pbmcgYW55IHJlcGFpcnMuIERpYWdub3N0aWNQcm8gTVZQIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgYW55IGRhbWFnZXMgcmVzdWx0aW5nIGZyb20gdGhlIHVzZSBvZiB0aGlzIGluZm9ybWF0aW9uLjwvZW0-PC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPCEtLSBGb290ZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyIj4KICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zdGljUHJvIE1WUDwvc3Ryb25nPiAtIEV4cGVydCBFcXVpcG1lbnQgRGlhZ25vc2lzPC9wPgogICAgICAgICAgICA8cD5SZXBvcnQgZ2VuZXJhdGVkIG9uIDcvMzEvMjAyNSwgNDoyNjozOSBBTTwvcD4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogMjBweCAwOyBwYWRkaW5nOiAxNXB4OyBiYWNrZ3JvdW5kOiAjZjhmYWZjOyBib3JkZXItcmFkaXVzOiA4cHg7Ij4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db250YWN0ICYgU3VwcG9ydDo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfk6cgRW1haWw6IDxhIGhyZWY9Im1haWx0bzpzdXBwb3J0QGRpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfjJAgV2Vic2l0ZTogPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5kaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLXRvcDogMTVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db25uZWN0IHdpdGggSmVyZW15Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPgogICAgICAgICAgICAgICAgICAgICAgICDwn5SXIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qZXJlbXlsb25nc2hvcmUiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-TGlua2VkSW48L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkKYgPGEgaHJlZj0iaHR0cHM6Ly94LmNvbS9Bc3BoYWx0Q293YjB5IiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPlR3aXR0ZXIvWDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-SvCA8YSBocmVmPSJtYWlsdG86amVyZW15QGludGVudHNvdWx0aW9ucy5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-RGlyZWN0IENvbnRhY3Q8L2E-CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY-CjwvYm9keT4KPC9odG1sPgogICAg"}',
    responseType: 'unknown',
    errorRedactor: [Function: defaultErrorRedactor],
    retryConfig: {
      currentRetryAttempt: 0,
      retry: 3,
      httpMethodsToRetry: [Array],
      noResponseRetries: 2,
      retryDelayMultiplier: 2,
      timeOfFirstRequest: 1753936000749,
      totalTimeout: 9007199254740991,
      maxRetryDelay: 9007199254740991,
      statusCodesToRetry: [Array]
    }
  },
  response: {
    config: {
      url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
      method: 'POST',
      apiVersion: '',
      userAgentDirectives: [Array],
      paramsSerializer: [Function (anonymous)],
      data: [Object],
      headers: [Object],
      params: {},
      validateStatus: [Function (anonymous)],
      retry: true,
      body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBUaGUgR3V5IFdobyBEZWZpbml0ZWx5IERpZG4ndCBDYXVzZSBUaGlzLDwvaDI-CiAgICAgICAgICAgIDxwPllvdXIgZXF1aXBtZW50IGRpYWdub3N0aWMgYW5hbHlzaXMgaXMgY29tcGxldGUhIE91ciBBSS1wb3dlcmVkIHN5c3RlbSBoYXMgYW5hbHl6ZWQgeW91ciBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpIGFuZCBwcm92aWRlZCBleHBlcnQgcmVjb21tZW5kYXRpb25zLjwvcD4KCiAgICAgICAgICAgIDwhLS0gRXF1aXBtZW50IERldGFpbHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfk4sgRXF1aXBtZW50IEluZm9ybWF0aW9uPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-VHlwZTo8L3N0cm9uZz4gQXV0b21vdGl2ZSAoQ2FycywgVHJ1Y2tzLCBTVVZzLCBWYW5zKTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-TWFrZS9Nb2RlbDo8L3N0cm9uZz4gVm9sa3N3YWdlbiBBdGxhcyBTRSBWNiAoMjAxOCk8L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlByb2JsZW0gRGVzY3JpcHRpb246PC9zdHJvbmc-IFRoZSBBdGxhcyBoYXMgYWNoaWV2ZWQgd2hhdCBlbmdpbmVlcnMgY2FsbCAiY29tcHJlaGVuc2l2ZSBzeXN0ZW1zIGludGVncmF0aW9uIGZhaWx1cmUiIC0gYmFzaWNhbGx5IGV2ZXJ5dGhpbmcgZGVjaWRlZCB0byBoYXZlIHByb2JsZW1zIHNpbXVsdGFuZW91c2x5LiBGdWVsIHB1bXAgd2hpbmluZywgRUNVIGNvbmZ1c2VkLCBhbHRlcm5hdG9yIGRyYW1hdGljLCB0cmFuc21pc3Npb24gbW9vZHkuIEl0J3MgbGlrZSB0aGUgY2FyIGVxdWl2YWxlbnQgb2YgdHJ5aW5nIHRvIHNob3cgaG91c2VzIGR1cmluZyBhIHBvd2VyIG91dGFnZSB3aGlsZSB5b3VyIHBob25lIGlzIGRlYWQgYW5kIHRoZSBHUFMgaXMgYnJva2VuLiBTdGlsbCBydW5zLCBidXQgd2l0aCB0aGUgZW50aHVzaWFzbSBvZiBhIE1vbmRheSBtb3JuaW5nLjwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RXJyb3IgQ29kZXM6PC9zdHJvbmc-IFAwMDg3LCBQMDYwMSwgUDA2MjAsIFAwNzAwLCBCMURDMDAsIFUwMTAwPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlhZ25vc2lzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIHVyZ2VuY3ktbWVkaXVtIj4KICAgICAgICAgICAgICAgIDxoMz7wn5SNIERpYWdub3N0aWMgQW5hbHlzaXM8L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zaXM6PC9zdHJvbmc-IEJhc2VkIG9uIHRoZSBzeW1wdG9tcyBkZXNjcmliZWQsIHRoZXJlIGlzIGEgOTIlIHByb2JhYmlsaXR5IHRoYXQgdGhpcyBpcyBhIGZ1ZWwgc3lzdGVtIG9yIGVuZ2luZSBtYW5hZ2VtZW50IGlzc3VlLiBUaGUgc3ltcHRvbXMgc3VnZ2VzdCBmdWVsIGRlbGl2ZXJ5IHByb2JsZW1zIG9yIHNlbnNvciBtYWxmdW5jdGlvbnMuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5VcmdlbmN5IExldmVsOjwvc3Ryb25nPiBNRURJVU08L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBSZWNvbW1lbmRhdGlvbnMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfm6DvuI8gRXhwZXJ0IFJlY29tbWVuZGF0aW9uczwvaDM-CiAgICAgICAgICAgICAgICA8ZGl2PnVuZGVmaW5lZDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBOZXh0IFN0ZXBzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqEgTmV4dCBTdGVwczwvaDM-CiAgICAgICAgICAgICAgICA8b2w-CiAgICAgICAgICAgICAgICAgICAgPGxpPlJldmlldyB0aGUgZGlhZ25vc3RpYyBmaW5kaW5ncyBhYm92ZTwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkNvbnRhY3QgYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiB3aXRoIHRoaXMgcmVwb3J0PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-U2hvdyB0aGVtIHRoZSBzcGVjaWZpYyBlcnJvciBjb2RlcyBhbmQgcmVjb21tZW5kYXRpb25zPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-R2V0IGEgc2Vjb25kIG9waW5pb24gaWYgdGhlIHF1b3RlIHNlZW1zIHRvbyBoaWdoPC9saT4KICAgICAgICAgICAgICAgIDwvb2w-CiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIGNsYXNzPSJjdGEtYnV0dG9uIj5HZXQgQW5vdGhlciBEaWFnbm9zaXM8L2E-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaXNjbGFpbWVyIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqDvuI8gSW1wb3J0YW50IERpc2NsYWltZXI8L2gzPgogICAgICAgICAgICAgICAgPHA-PGVtPlRoaXMgYW5hbHlzaXMgaXMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIGFuZCBzaG91bGQgYmUgdXNlZCBhcyBhIHN0YXJ0aW5nIHBvaW50IGZvciBwcm9mZXNzaW9uYWwgcmVwYWlyLiBBbHdheXMgY29uc3VsdCB3aXRoIGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gYmVmb3JlIHBlcmZvcm1pbmcgYW55IHJlcGFpcnMuIERpYWdub3N0aWNQcm8gTVZQIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgYW55IGRhbWFnZXMgcmVzdWx0aW5nIGZyb20gdGhlIHVzZSBvZiB0aGlzIGluZm9ybWF0aW9uLjwvZW0-PC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPCEtLSBGb290ZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyIj4KICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zdGljUHJvIE1WUDwvc3Ryb25nPiAtIEV4cGVydCBFcXVpcG1lbnQgRGlhZ25vc2lzPC9wPgogICAgICAgICAgICA8cD5SZXBvcnQgZ2VuZXJhdGVkIG9uIDcvMzEvMjAyNSwgNDoyNjozOSBBTTwvcD4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogMjBweCAwOyBwYWRkaW5nOiAxNXB4OyBiYWNrZ3JvdW5kOiAjZjhmYWZjOyBib3JkZXItcmFkaXVzOiA4cHg7Ij4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db250YWN0ICYgU3VwcG9ydDo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfk6cgRW1haWw6IDxhIGhyZWY9Im1haWx0bzpzdXBwb3J0QGRpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfjJAgV2Vic2l0ZTogPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5kaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLXRvcDogMTVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db25uZWN0IHdpdGggSmVyZW15Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPgogICAgICAgICAgICAgICAgICAgICAgICDwn5SXIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qZXJlbXlsb25nc2hvcmUiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-TGlua2VkSW48L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkKYgPGEgaHJlZj0iaHR0cHM6Ly94LmNvbS9Bc3BoYWx0Q293YjB5IiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPlR3aXR0ZXIvWDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-SvCA8YSBocmVmPSJtYWlsdG86amVyZW15QGludGVudHNvdWx0aW9ucy5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-RGlyZWN0IENvbnRhY3Q8L2E-CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY-CjwvYm9keT4KPC9odG1sPgogICAg"}',
      responseType: 'unknown',
      errorRedactor: [Function: defaultErrorRedactor]
    },
    data: { error: [Object] },
    headers: {
      'content-encoding': 'gzip',
      'content-type': 'application/json; charset=UTF-8',
      date: 'Thu, 31 Jul 2025 04:26:39 GMT',
      server: 'ESF',
      'transfer-encoding': 'chunked',
      vary: 'Origin, X-Origin, Referer',
      'x-content-type-options': 'nosniff',
      'x-frame-options': 'SAMEORIGIN',
      'x-xss-protection': '0'
    },
    status: 400,
    statusText: 'Bad Request',
    request: {
      responseURL: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send'
    }
  },
  error: undefined,
  status: 400,
  code: 400,
  errors: [
    {
      message: 'Precondition check failed.',
      domain: 'global',
      reason: 'failedPrecondition'
    }
  ],
  [Symbol(gaxios-gaxios-error)]: '6.7.1'
}
‚ùå Failed to send customer email: GaxiosError: Precondition check failed.
    at Gaxios._request (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/gaxios/build/src/gaxios.js:142:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async JWT.requestAsync (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/google-auth-library/build/src/auth/oauth2client.js:429:18)
    at async EmailService.sendDiagnosticReport (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/lib/services/emailService.js:58:24)
    at async POST (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/src/routes/api/submit-diagnosis/+server.js:61:13)
    at async Module.render_endpoint (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/endpoint.js:51:20)
    at async resolve (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:389:22)
    at async Module.respond (/home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/runtime/server/respond.js:274:22)
    at async file:///home/jeremylongshore/jeremy_projects/diagnosticpro-mvp/node_modules/@sveltejs/kit/src/exports/vite/dev/index.js:544:22 {
  config: {
    url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
    method: 'POST',
    apiVersion: '',
    userAgentDirectives: [ [Object] ],
    paramsSerializer: [Function (anonymous)],
    data: {
      raw: 'RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBUaGUgR3V5IFdobyBEZWZpbml0ZWx5IERpZG4ndCBDYXVzZSBUaGlzLDwvaDI-CiAgICAgICAgICAgIDxwPllvdXIgZXF1aXBtZW50IGRpYWdub3N0aWMgYW5hbHlzaXMgaXMgY29tcGxldGUhIE91ciBBSS1wb3dlcmVkIHN5c3RlbSBoYXMgYW5hbHl6ZWQgeW91ciBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpIGFuZCBwcm92aWRlZCBleHBlcnQgcmVjb21tZW5kYXRpb25zLjwvcD4KCiAgICAgICAgICAgIDwhLS0gRXF1aXBtZW50IERldGFpbHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfk4sgRXF1aXBtZW50IEluZm9ybWF0aW9uPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-VHlwZTo8L3N0cm9uZz4gQXV0b21vdGl2ZSAoQ2FycywgVHJ1Y2tzLCBTVVZzLCBWYW5zKTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-TWFrZS9Nb2RlbDo8L3N0cm9uZz4gVm9sa3N3YWdlbiBBdGxhcyBTRSBWNiAoMjAxOCk8L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlByb2JsZW0gRGVzY3JpcHRpb246PC9zdHJvbmc-IFRoZSBBdGxhcyBoYXMgYWNoaWV2ZWQgd2hhdCBlbmdpbmVlcnMgY2FsbCAiY29tcHJlaGVuc2l2ZSBzeXN0ZW1zIGludGVncmF0aW9uIGZhaWx1cmUiIC0gYmFzaWNhbGx5IGV2ZXJ5dGhpbmcgZGVjaWRlZCB0byBoYXZlIHByb2JsZW1zIHNpbXVsdGFuZW91c2x5LiBGdWVsIHB1bXAgd2hpbmluZywgRUNVIGNvbmZ1c2VkLCBhbHRlcm5hdG9yIGRyYW1hdGljLCB0cmFuc21pc3Npb24gbW9vZHkuIEl0J3MgbGlrZSB0aGUgY2FyIGVxdWl2YWxlbnQgb2YgdHJ5aW5nIHRvIHNob3cgaG91c2VzIGR1cmluZyBhIHBvd2VyIG91dGFnZSB3aGlsZSB5b3VyIHBob25lIGlzIGRlYWQgYW5kIHRoZSBHUFMgaXMgYnJva2VuLiBTdGlsbCBydW5zLCBidXQgd2l0aCB0aGUgZW50aHVzaWFzbSBvZiBhIE1vbmRheSBtb3JuaW5nLjwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RXJyb3IgQ29kZXM6PC9zdHJvbmc-IFAwMDg3LCBQMDYwMSwgUDA2MjAsIFAwNzAwLCBCMURDMDAsIFUwMTAwPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlhZ25vc2lzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIHVyZ2VuY3ktbWVkaXVtIj4KICAgICAgICAgICAgICAgIDxoMz7wn5SNIERpYWdub3N0aWMgQW5hbHlzaXM8L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zaXM6PC9zdHJvbmc-IEJhc2VkIG9uIHRoZSBzeW1wdG9tcyBkZXNjcmliZWQsIHRoZXJlIGlzIGEgOTIlIHByb2JhYmlsaXR5IHRoYXQgdGhpcyBpcyBhIGZ1ZWwgc3lzdGVtIG9yIGVuZ2luZSBtYW5hZ2VtZW50IGlzc3VlLiBUaGUgc3ltcHRvbXMgc3VnZ2VzdCBmdWVsIGRlbGl2ZXJ5IHByb2JsZW1zIG9yIHNlbnNvciBtYWxmdW5jdGlvbnMuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5VcmdlbmN5IExldmVsOjwvc3Ryb25nPiBNRURJVU08L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBSZWNvbW1lbmRhdGlvbnMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfm6DvuI8gRXhwZXJ0IFJlY29tbWVuZGF0aW9uczwvaDM-CiAgICAgICAgICAgICAgICA8ZGl2PnVuZGVmaW5lZDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBOZXh0IFN0ZXBzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqEgTmV4dCBTdGVwczwvaDM-CiAgICAgICAgICAgICAgICA8b2w-CiAgICAgICAgICAgICAgICAgICAgPGxpPlJldmlldyB0aGUgZGlhZ25vc3RpYyBmaW5kaW5ncyBhYm92ZTwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkNvbnRhY3QgYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiB3aXRoIHRoaXMgcmVwb3J0PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-U2hvdyB0aGVtIHRoZSBzcGVjaWZpYyBlcnJvciBjb2RlcyBhbmQgcmVjb21tZW5kYXRpb25zPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-R2V0IGEgc2Vjb25kIG9waW5pb24gaWYgdGhlIHF1b3RlIHNlZW1zIHRvbyBoaWdoPC9saT4KICAgICAgICAgICAgICAgIDwvb2w-CiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIGNsYXNzPSJjdGEtYnV0dG9uIj5HZXQgQW5vdGhlciBEaWFnbm9zaXM8L2E-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaXNjbGFpbWVyIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqDvuI8gSW1wb3J0YW50IERpc2NsYWltZXI8L2gzPgogICAgICAgICAgICAgICAgPHA-PGVtPlRoaXMgYW5hbHlzaXMgaXMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIGFuZCBzaG91bGQgYmUgdXNlZCBhcyBhIHN0YXJ0aW5nIHBvaW50IGZvciBwcm9mZXNzaW9uYWwgcmVwYWlyLiBBbHdheXMgY29uc3VsdCB3aXRoIGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gYmVmb3JlIHBlcmZvcm1pbmcgYW55IHJlcGFpcnMuIERpYWdub3N0aWNQcm8gTVZQIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgYW55IGRhbWFnZXMgcmVzdWx0aW5nIGZyb20gdGhlIHVzZSBvZiB0aGlzIGluZm9ybWF0aW9uLjwvZW0-PC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPCEtLSBGb290ZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyIj4KICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zdGljUHJvIE1WUDwvc3Ryb25nPiAtIEV4cGVydCBFcXVpcG1lbnQgRGlhZ25vc2lzPC9wPgogICAgICAgICAgICA8cD5SZXBvcnQgZ2VuZXJhdGVkIG9uIDcvMzEvMjAyNSwgNDoyNjozOSBBTTwvcD4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogMjBweCAwOyBwYWRkaW5nOiAxNXB4OyBiYWNrZ3JvdW5kOiAjZjhmYWZjOyBib3JkZXItcmFkaXVzOiA4cHg7Ij4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db250YWN0ICYgU3VwcG9ydDo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfk6cgRW1haWw6IDxhIGhyZWY9Im1haWx0bzpzdXBwb3J0QGRpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfjJAgV2Vic2l0ZTogPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5kaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLXRvcDogMTVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db25uZWN0IHdpdGggSmVyZW15Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPgogICAgICAgICAgICAgICAgICAgICAgICDwn5SXIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qZXJlbXlsb25nc2hvcmUiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-TGlua2VkSW48L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkKYgPGEgaHJlZj0iaHR0cHM6Ly94LmNvbS9Bc3BoYWx0Q293YjB5IiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPlR3aXR0ZXIvWDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-SvCA8YSBocmVmPSJtYWlsdG86amVyZW15QGludGVudHNvdWx0aW9ucy5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-RGlyZWN0IENvbnRhY3Q8L2E-CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY-CjwvYm9keT4KPC9odG1sPgogICAg'
    },
    headers: {
      'x-goog-api-client': 'gdcl/7.2.0 gl-node/20.19.4',
      'Accept-Encoding': 'gzip',
      'User-Agent': 'google-api-nodejs-client/7.2.0 (gzip)',
      Authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
      'Content-Type': 'application/json'
    },
    params: {},
    validateStatus: [Function (anonymous)],
    retry: true,
    body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBUaGUgR3V5IFdobyBEZWZpbml0ZWx5IERpZG4ndCBDYXVzZSBUaGlzLDwvaDI-CiAgICAgICAgICAgIDxwPllvdXIgZXF1aXBtZW50IGRpYWdub3N0aWMgYW5hbHlzaXMgaXMgY29tcGxldGUhIE91ciBBSS1wb3dlcmVkIHN5c3RlbSBoYXMgYW5hbHl6ZWQgeW91ciBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpIGFuZCBwcm92aWRlZCBleHBlcnQgcmVjb21tZW5kYXRpb25zLjwvcD4KCiAgICAgICAgICAgIDwhLS0gRXF1aXBtZW50IERldGFpbHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfk4sgRXF1aXBtZW50IEluZm9ybWF0aW9uPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-VHlwZTo8L3N0cm9uZz4gQXV0b21vdGl2ZSAoQ2FycywgVHJ1Y2tzLCBTVVZzLCBWYW5zKTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-TWFrZS9Nb2RlbDo8L3N0cm9uZz4gVm9sa3N3YWdlbiBBdGxhcyBTRSBWNiAoMjAxOCk8L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlByb2JsZW0gRGVzY3JpcHRpb246PC9zdHJvbmc-IFRoZSBBdGxhcyBoYXMgYWNoaWV2ZWQgd2hhdCBlbmdpbmVlcnMgY2FsbCAiY29tcHJlaGVuc2l2ZSBzeXN0ZW1zIGludGVncmF0aW9uIGZhaWx1cmUiIC0gYmFzaWNhbGx5IGV2ZXJ5dGhpbmcgZGVjaWRlZCB0byBoYXZlIHByb2JsZW1zIHNpbXVsdGFuZW91c2x5LiBGdWVsIHB1bXAgd2hpbmluZywgRUNVIGNvbmZ1c2VkLCBhbHRlcm5hdG9yIGRyYW1hdGljLCB0cmFuc21pc3Npb24gbW9vZHkuIEl0J3MgbGlrZSB0aGUgY2FyIGVxdWl2YWxlbnQgb2YgdHJ5aW5nIHRvIHNob3cgaG91c2VzIGR1cmluZyBhIHBvd2VyIG91dGFnZSB3aGlsZSB5b3VyIHBob25lIGlzIGRlYWQgYW5kIHRoZSBHUFMgaXMgYnJva2VuLiBTdGlsbCBydW5zLCBidXQgd2l0aCB0aGUgZW50aHVzaWFzbSBvZiBhIE1vbmRheSBtb3JuaW5nLjwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RXJyb3IgQ29kZXM6PC9zdHJvbmc-IFAwMDg3LCBQMDYwMSwgUDA2MjAsIFAwNzAwLCBCMURDMDAsIFUwMTAwPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlhZ25vc2lzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIHVyZ2VuY3ktbWVkaXVtIj4KICAgICAgICAgICAgICAgIDxoMz7wn5SNIERpYWdub3N0aWMgQW5hbHlzaXM8L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zaXM6PC9zdHJvbmc-IEJhc2VkIG9uIHRoZSBzeW1wdG9tcyBkZXNjcmliZWQsIHRoZXJlIGlzIGEgOTIlIHByb2JhYmlsaXR5IHRoYXQgdGhpcyBpcyBhIGZ1ZWwgc3lzdGVtIG9yIGVuZ2luZSBtYW5hZ2VtZW50IGlzc3VlLiBUaGUgc3ltcHRvbXMgc3VnZ2VzdCBmdWVsIGRlbGl2ZXJ5IHByb2JsZW1zIG9yIHNlbnNvciBtYWxmdW5jdGlvbnMuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5VcmdlbmN5IExldmVsOjwvc3Ryb25nPiBNRURJVU08L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBSZWNvbW1lbmRhdGlvbnMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfm6DvuI8gRXhwZXJ0IFJlY29tbWVuZGF0aW9uczwvaDM-CiAgICAgICAgICAgICAgICA8ZGl2PnVuZGVmaW5lZDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBOZXh0IFN0ZXBzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqEgTmV4dCBTdGVwczwvaDM-CiAgICAgICAgICAgICAgICA8b2w-CiAgICAgICAgICAgICAgICAgICAgPGxpPlJldmlldyB0aGUgZGlhZ25vc3RpYyBmaW5kaW5ncyBhYm92ZTwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkNvbnRhY3QgYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiB3aXRoIHRoaXMgcmVwb3J0PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-U2hvdyB0aGVtIHRoZSBzcGVjaWZpYyBlcnJvciBjb2RlcyBhbmQgcmVjb21tZW5kYXRpb25zPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-R2V0IGEgc2Vjb25kIG9waW5pb24gaWYgdGhlIHF1b3RlIHNlZW1zIHRvbyBoaWdoPC9saT4KICAgICAgICAgICAgICAgIDwvb2w-CiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIGNsYXNzPSJjdGEtYnV0dG9uIj5HZXQgQW5vdGhlciBEaWFnbm9zaXM8L2E-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaXNjbGFpbWVyIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqDvuI8gSW1wb3J0YW50IERpc2NsYWltZXI8L2gzPgogICAgICAgICAgICAgICAgPHA-PGVtPlRoaXMgYW5hbHlzaXMgaXMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIGFuZCBzaG91bGQgYmUgdXNlZCBhcyBhIHN0YXJ0aW5nIHBvaW50IGZvciBwcm9mZXNzaW9uYWwgcmVwYWlyLiBBbHdheXMgY29uc3VsdCB3aXRoIGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gYmVmb3JlIHBlcmZvcm1pbmcgYW55IHJlcGFpcnMuIERpYWdub3N0aWNQcm8gTVZQIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgYW55IGRhbWFnZXMgcmVzdWx0aW5nIGZyb20gdGhlIHVzZSBvZiB0aGlzIGluZm9ybWF0aW9uLjwvZW0-PC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPCEtLSBGb290ZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyIj4KICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zdGljUHJvIE1WUDwvc3Ryb25nPiAtIEV4cGVydCBFcXVpcG1lbnQgRGlhZ25vc2lzPC9wPgogICAgICAgICAgICA8cD5SZXBvcnQgZ2VuZXJhdGVkIG9uIDcvMzEvMjAyNSwgNDoyNjozOSBBTTwvcD4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogMjBweCAwOyBwYWRkaW5nOiAxNXB4OyBiYWNrZ3JvdW5kOiAjZjhmYWZjOyBib3JkZXItcmFkaXVzOiA4cHg7Ij4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db250YWN0ICYgU3VwcG9ydDo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfk6cgRW1haWw6IDxhIGhyZWY9Im1haWx0bzpzdXBwb3J0QGRpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfjJAgV2Vic2l0ZTogPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5kaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLXRvcDogMTVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db25uZWN0IHdpdGggSmVyZW15Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPgogICAgICAgICAgICAgICAgICAgICAgICDwn5SXIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qZXJlbXlsb25nc2hvcmUiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-TGlua2VkSW48L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkKYgPGEgaHJlZj0iaHR0cHM6Ly94LmNvbS9Bc3BoYWx0Q293YjB5IiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPlR3aXR0ZXIvWDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-SvCA8YSBocmVmPSJtYWlsdG86amVyZW15QGludGVudHNvdWx0aW9ucy5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-RGlyZWN0IENvbnRhY3Q8L2E-CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY-CjwvYm9keT4KPC9odG1sPgogICAg"}',
    responseType: 'unknown',
    errorRedactor: [Function: defaultErrorRedactor],
    retryConfig: {
      currentRetryAttempt: 0,
      retry: 3,
      httpMethodsToRetry: [Array],
      noResponseRetries: 2,
      retryDelayMultiplier: 2,
      timeOfFirstRequest: 1753936000749,
      totalTimeout: 9007199254740991,
      maxRetryDelay: 9007199254740991,
      statusCodesToRetry: [Array]
    }
  },
  response: {
    config: {
      url: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send',
      method: 'POST',
      apiVersion: '',
      userAgentDirectives: [Array],
      paramsSerializer: [Function (anonymous)],
      data: [Object],
      headers: [Object],
      params: {},
      validateStatus: [Function (anonymous)],
      retry: true,
      body: '{"raw":"RnJvbTogamVyZW15QGludGVudHNvdWx0aW9ucy5pbwpUbzogbWFuZHlAcmVtYXhncy5jb20KQ2M6IGplcmVteWxvbmdzaG9yZUBnbWFpbC5jb20KU3ViamVjdDogWW91ciBEaWFnbm9zdGljUHJvIE1WUCBFcXVpcG1lbnQgQW5hbHlzaXMgUmVwb3J0Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04CgoKPCFET0NUWVBFIGh0bWw-CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxzdHlsZT4KICAgICAgICAucmVwb3J0LWNvbnRhaW5lciB7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA4MDBweDsgbWFyZ2luOiAwIGF1dG87IH0KICAgICAgICAuaGVhZGVyIHsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzFlNDBhZiwgIzNiODJmNik7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMzBweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9CiAgICAgICAgLmxvZ28geyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgICAgICAgLmNvbnRlbnQgeyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9CiAgICAgICAgLnNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAyNXB4OyBwYWRkaW5nOiAyMHB4OyBib3JkZXItbGVmdDogNHB4IHNvbGlkICMzYjgyZjY7IGJhY2tncm91bmQ6ICNmOGZhZmM7IH0KICAgICAgICAuc2VjdGlvbiBoMyB7IGNvbG9yOiAjMWU0MGFmOyBtYXJnaW4tdG9wOiAwOyBmb250LXNpemU6IDE4cHg7IH0KICAgICAgICAudXJnZW5jeS1oaWdoIHsgYm9yZGVyLWxlZnQtY29sb3I6ICNkYzI2MjY7IGJhY2tncm91bmQ6ICNmZWYyZjI7IH0KICAgICAgICAudXJnZW5jeS1tZWRpdW0geyBib3JkZXItbGVmdC1jb2xvcjogI2Y1OWUwYjsgYmFja2dyb3VuZDogI2ZmZmJlYjsgfQogICAgICAgIC51cmdlbmN5LWxvdyB7IGJvcmRlci1sZWZ0LWNvbG9yOiAjMDU5NjY5OyBiYWNrZ3JvdW5kOiAjZjBmZGY0OyB9CiAgICAgICAgLmZvb3RlciB7IGJhY2tncm91bmQ6ICMxZjI5Mzc7IGNvbG9yOiAjOWNhM2FmOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgfQogICAgICAgIC5jdGEtYnV0dG9uIHsgYmFja2dyb3VuZDogIzNiODJmNjsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAxMnB4IDI0cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbjogMTVweCAwOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ-Cjxib2R5PgogICAgPGRpdiBjbGFzcz0icmVwb3J0LWNvbnRhaW5lciI-CiAgICAgICAgPCEtLSBIZWFkZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI-RGlhZ25vc3RpY1BybyBNVlA8L2Rpdj4KICAgICAgICAgICAgPHA-RXhwZXJ0IEVxdWlwbWVudCBEaWFnbm9zaXMgUmVwb3J0PC9wPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIENvbnRlbnQgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI-CiAgICAgICAgICAgIDxoMj5IZWxsbyBUaGUgR3V5IFdobyBEZWZpbml0ZWx5IERpZG4ndCBDYXVzZSBUaGlzLDwvaDI-CiAgICAgICAgICAgIDxwPllvdXIgZXF1aXBtZW50IGRpYWdub3N0aWMgYW5hbHlzaXMgaXMgY29tcGxldGUhIE91ciBBSS1wb3dlcmVkIHN5c3RlbSBoYXMgYW5hbHl6ZWQgeW91ciBBdXRvbW90aXZlIChDYXJzLCBUcnVja3MsIFNVVnMsIFZhbnMpIGFuZCBwcm92aWRlZCBleHBlcnQgcmVjb21tZW5kYXRpb25zLjwvcD4KCiAgICAgICAgICAgIDwhLS0gRXF1aXBtZW50IERldGFpbHMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfk4sgRXF1aXBtZW50IEluZm9ybWF0aW9uPC9oMz4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-VHlwZTo8L3N0cm9uZz4gQXV0b21vdGl2ZSAoQ2FycywgVHJ1Y2tzLCBTVVZzLCBWYW5zKTwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-TWFrZS9Nb2RlbDo8L3N0cm9uZz4gVm9sa3N3YWdlbiBBdGxhcyBTRSBWNiAoMjAxOCk8L3A-CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPlByb2JsZW0gRGVzY3JpcHRpb246PC9zdHJvbmc-IFRoZSBBdGxhcyBoYXMgYWNoaWV2ZWQgd2hhdCBlbmdpbmVlcnMgY2FsbCAiY29tcHJlaGVuc2l2ZSBzeXN0ZW1zIGludGVncmF0aW9uIGZhaWx1cmUiIC0gYmFzaWNhbGx5IGV2ZXJ5dGhpbmcgZGVjaWRlZCB0byBoYXZlIHByb2JsZW1zIHNpbXVsdGFuZW91c2x5LiBGdWVsIHB1bXAgd2hpbmluZywgRUNVIGNvbmZ1c2VkLCBhbHRlcm5hdG9yIGRyYW1hdGljLCB0cmFuc21pc3Npb24gbW9vZHkuIEl0J3MgbGlrZSB0aGUgY2FyIGVxdWl2YWxlbnQgb2YgdHJ5aW5nIHRvIHNob3cgaG91c2VzIGR1cmluZyBhIHBvd2VyIG91dGFnZSB3aGlsZSB5b3VyIHBob25lIGlzIGRlYWQgYW5kIHRoZSBHUFMgaXMgYnJva2VuLiBTdGlsbCBydW5zLCBidXQgd2l0aCB0aGUgZW50aHVzaWFzbSBvZiBhIE1vbmRheSBtb3JuaW5nLjwvcD4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc-RXJyb3IgQ29kZXM6PC9zdHJvbmc-IFAwMDg3LCBQMDYwMSwgUDA2MjAsIFAwNzAwLCBCMURDMDAsIFUwMTAwPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwhLS0gRGlhZ25vc2lzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIHVyZ2VuY3ktbWVkaXVtIj4KICAgICAgICAgICAgICAgIDxoMz7wn5SNIERpYWdub3N0aWMgQW5hbHlzaXM8L2gzPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zaXM6PC9zdHJvbmc-IEJhc2VkIG9uIHRoZSBzeW1wdG9tcyBkZXNjcmliZWQsIHRoZXJlIGlzIGEgOTIlIHByb2JhYmlsaXR5IHRoYXQgdGhpcyBpcyBhIGZ1ZWwgc3lzdGVtIG9yIGVuZ2luZSBtYW5hZ2VtZW50IGlzc3VlLiBUaGUgc3ltcHRvbXMgc3VnZ2VzdCBmdWVsIGRlbGl2ZXJ5IHByb2JsZW1zIG9yIHNlbnNvciBtYWxmdW5jdGlvbnMuPC9wPgogICAgICAgICAgICAgICAgPHA-PHN0cm9uZz5VcmdlbmN5IExldmVsOjwvc3Ryb25nPiBNRURJVU08L3A-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBSZWNvbW1lbmRhdGlvbnMgLS0-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgICAgICAgICAgPGgzPvCfm6DvuI8gRXhwZXJ0IFJlY29tbWVuZGF0aW9uczwvaDM-CiAgICAgICAgICAgICAgICA8ZGl2PnVuZGVmaW5lZDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBOZXh0IFN0ZXBzIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqEgTmV4dCBTdGVwczwvaDM-CiAgICAgICAgICAgICAgICA8b2w-CiAgICAgICAgICAgICAgICAgICAgPGxpPlJldmlldyB0aGUgZGlhZ25vc3RpYyBmaW5kaW5ncyBhYm92ZTwvbGk-CiAgICAgICAgICAgICAgICAgICAgPGxpPkNvbnRhY3QgYSBxdWFsaWZpZWQgdGVjaG5pY2lhbiB3aXRoIHRoaXMgcmVwb3J0PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-U2hvdyB0aGVtIHRoZSBzcGVjaWZpYyBlcnJvciBjb2RlcyBhbmQgcmVjb21tZW5kYXRpb25zPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk-R2V0IGEgc2Vjb25kIG9waW5pb24gaWYgdGhlIHF1b3RlIHNlZW1zIHRvbyBoaWdoPC9saT4KICAgICAgICAgICAgICAgIDwvb2w-CiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2RpYWdub3N0aWNwcm8uaW8iIGNsYXNzPSJjdGEtYnV0dG9uIj5HZXQgQW5vdGhlciBEaWFnbm9zaXM8L2E-CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPCEtLSBEaXNjbGFpbWVyIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgICAgICAgICAgICAgIDxoMz7imqDvuI8gSW1wb3J0YW50IERpc2NsYWltZXI8L2gzPgogICAgICAgICAgICAgICAgPHA-PGVtPlRoaXMgYW5hbHlzaXMgaXMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIGFuZCBzaG91bGQgYmUgdXNlZCBhcyBhIHN0YXJ0aW5nIHBvaW50IGZvciBwcm9mZXNzaW9uYWwgcmVwYWlyLiBBbHdheXMgY29uc3VsdCB3aXRoIGEgcXVhbGlmaWVkIHRlY2huaWNpYW4gYmVmb3JlIHBlcmZvcm1pbmcgYW55IHJlcGFpcnMuIERpYWdub3N0aWNQcm8gTVZQIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgYW55IGRhbWFnZXMgcmVzdWx0aW5nIGZyb20gdGhlIHVzZSBvZiB0aGlzIGluZm9ybWF0aW9uLjwvZW0-PC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPCEtLSBGb290ZXIgLS0-CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyIj4KICAgICAgICAgICAgPHA-PHN0cm9uZz5EaWFnbm9zdGljUHJvIE1WUDwvc3Ryb25nPiAtIEV4cGVydCBFcXVpcG1lbnQgRGlhZ25vc2lzPC9wPgogICAgICAgICAgICA8cD5SZXBvcnQgZ2VuZXJhdGVkIG9uIDcvMzEvMjAyNSwgNDoyNjozOSBBTTwvcD4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogMjBweCAwOyBwYWRkaW5nOiAxNXB4OyBiYWNrZ3JvdW5kOiAjZjhmYWZjOyBib3JkZXItcmFkaXVzOiA4cHg7Ij4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db250YWN0ICYgU3VwcG9ydDo8L3N0cm9uZz48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfk6cgRW1haWw6IDxhIGhyZWY9Im1haWx0bzpzdXBwb3J0QGRpYWdub3N0aWNwcm8uaW8iIHN0eWxlPSJjb2xvcjogIzNiODJmNjsiPnN1cHBvcnRAZGlhZ25vc3RpY3Byby5pbzwvYT48L3A-CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPvCfjJAgV2Vic2l0ZTogPGEgaHJlZj0iaHR0cHM6Ly9kaWFnbm9zdGljcHJvLmlvIiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7Ij5kaWFnbm9zdGljcHJvLmlvPC9hPjwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLXRvcDogMTVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46IDVweCAwOyI-PHN0cm9uZz5Db25uZWN0IHdpdGggSmVyZW15Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOiA1cHggMDsiPgogICAgICAgICAgICAgICAgICAgICAgICDwn5SXIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qZXJlbXlsb25nc2hvcmUiIHN0eWxlPSJjb2xvcjogIzNiODJmNjsgbWFyZ2luLXJpZ2h0OiAxNXB4OyI-TGlua2VkSW48L2E-CiAgICAgICAgICAgICAgICAgICAgICAgIPCfkKYgPGEgaHJlZj0iaHR0cHM6Ly94LmNvbS9Bc3BoYWx0Q293YjB5IiBzdHlsZT0iY29sb3I6ICMzYjgyZjY7IG1hcmdpbi1yaWdodDogMTVweDsiPlR3aXR0ZXIvWDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAg8J-SvCA8YSBocmVmPSJtYWlsdG86amVyZW15QGludGVudHNvdWx0aW9ucy5pbyIgc3R5bGU9ImNvbG9yOiAjM2I4MmY2OyI-RGlyZWN0IENvbnRhY3Q8L2E-CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY-CjwvYm9keT4KPC9odG1sPgogICAg"}',
      responseType: 'unknown',
      errorRedactor: [Function: defaultErrorRedactor]
    },
    data: { error: [Object] },
    headers: {
      'content-encoding': 'gzip',
      'content-type': 'application/json; charset=UTF-8',
      date: 'Thu, 31 Jul 2025 04:26:39 GMT',
      server: 'ESF',
      'transfer-encoding': 'chunked',
      vary: 'Origin, X-Origin, Referer',
      'x-content-type-options': 'nosniff',
      'x-frame-options': 'SAMEORIGIN',
      'x-xss-protection': '0'
    },
    status: 400,
    statusText: 'Bad Request',
    request: {
      responseURL: 'https://gmail.googleapis.com/gmail/v1/users/me/messages/send'
    }
  },
  error: undefined,
  status: 400,
  code: 400,
  errors: [
    {
      message: 'Precondition check failed.',
      domain: 'global',
      reason: 'failedPrecondition'
    }
  ],
  [Symbol(gaxios-gaxios-error)]: '6.7.1'
}
4:26:42 AM [vite] page reload playwright-report/index.html
4:26:42 AM [vite] page reload playwright-report/trace/index.html
4:26:42 AM [vite] page reload playwright-report/trace/snapshot.html
4:26:42 AM [vite] page reload playwright-report/trace/uiMode.html
4:33:07 AM [vite] hmr update /src/lib/components/MVPDiagnosticForm.svelte, /src/app.css
4:33:13 AM [vite] hmr update /src/lib/components/MVPDiagnosticForm.svelte, /src/app.css
4:34:03 AM [vite] page reload src/lib/services/emailService.js
4:34:12 AM [vite] page reload src/lib/components/PaymentStep.svelte
4:35:11 AM [vite] hmr update /src/lib/components/MVPDiagnosticForm.svelte, /src/app.css
4:35:46 AM [vite] page reload .svelte-kit/generated/client/app.js
4:37:36 AM [vite] hmr update /src/lib/components/MVPDiagnosticForm.svelte, /src/app.css
4:37:59 AM [vite] hmr update /src/lib/components/MVPDiagnosticForm.svelte, /src/app.css
4:38:06 AM [vite] hmr update /src/lib/components/MVPDiagnosticForm.svelte, /src/app.css
4:40:04 AM [vite] page reload .svelte-kit/generated/client/nodes/0.js
4:40:04 AM [vite] page reload .svelte-kit/generated/client/nodes/1.js
4:40:04 AM [vite] page reload .svelte-kit/generated/client/nodes/2.js
4:40:04 AM [vite] page reload .svelte-kit/generated/client/app.js
4:40:04 AM [vite] page reload .svelte-kit/generated/client/matchers.js
4:40:04 AM [vite] page reload .svelte-kit/generated/server/internal.js
4:40:04 AM [vite] page reload .svelte-kit/generated/root.js
