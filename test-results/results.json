{
  "config": {
    "configFile": "/home/jeremylongshore/diagnostic-pro-mvp/playwright.config.js",
    "rootDir": "/home/jeremylongshore/diagnostic-pro-mvp/tests",
    "forbidOnly": false,
    "fullyParallel": false,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 1
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "html",
        null
      ],
      [
        "json",
        {
          "outputFile": "test-results/results.json"
        }
      ],
      [
        "junit",
        {
          "outputFile": "test-results/results.xml"
        }
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/home/jeremylongshore/diagnostic-pro-mvp/test-results",
        "repeatEach": 1,
        "retries": 1,
        "metadata": {
          "actualWorkers": 1
        },
        "id": "setup",
        "name": "setup",
        "testDir": "/home/jeremylongshore/diagnostic-pro-mvp/tests",
        "testIgnore": [],
        "testMatch": [
          "/.*\\.setup\\.js/"
        ],
        "timeout": 120000
      },
      {
        "outputDir": "/home/jeremylongshore/diagnostic-pro-mvp/test-results",
        "repeatEach": 1,
        "retries": 1,
        "metadata": {
          "actualWorkers": 1
        },
        "id": "chromium",
        "name": "chromium",
        "testDir": "/home/jeremylongshore/diagnostic-pro-mvp/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.test.js"
        ],
        "timeout": 120000
      },
      {
        "outputDir": "/home/jeremylongshore/diagnostic-pro-mvp/test-results",
        "repeatEach": 1,
        "retries": 1,
        "metadata": {
          "actualWorkers": 1
        },
        "id": "firefox",
        "name": "firefox",
        "testDir": "/home/jeremylongshore/diagnostic-pro-mvp/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.test.js"
        ],
        "timeout": 120000
      },
      {
        "outputDir": "/home/jeremylongshore/diagnostic-pro-mvp/test-results",
        "repeatEach": 1,
        "retries": 1,
        "metadata": {
          "actualWorkers": 1
        },
        "id": "webkit",
        "name": "webkit",
        "testDir": "/home/jeremylongshore/diagnostic-pro-mvp/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.test.js"
        ],
        "timeout": 120000
      },
      {
        "outputDir": "/home/jeremylongshore/diagnostic-pro-mvp/test-results",
        "repeatEach": 1,
        "retries": 1,
        "metadata": {
          "actualWorkers": 1
        },
        "id": "mobile-chrome",
        "name": "mobile-chrome",
        "testDir": "/home/jeremylongshore/diagnostic-pro-mvp/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.test.js"
        ],
        "timeout": 120000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.54.1",
    "workers": 1,
    "webServer": {
      "command": "npm run dev",
      "url": "http://localhost:5173",
      "reuseExistingServer": true,
      "timeout": 120000
    }
  },
  "suites": [
    {
      "title": "setup.setup.js",
      "file": "setup.setup.js",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "verify system dependencies",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 120000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "setup",
              "projectName": "setup",
              "results": [
                {
                  "workerIndex": 0,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 1698,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "üîß Setting up DiagnosticPro MVP test environment...\n"
                    },
                    {
                      "text": "‚úÖ Google Cloud project: diagnostic-pro-legacy\n"
                    },
                    {
                      "text": "üöÄ Verifying application startup...\n"
                    },
                    {
                      "text": "‚úÖ Landing page accessible\n"
                    },
                    {
                      "text": "üöÄ Navigating to diagnostic form page...\n"
                    },
                    {
                      "text": "‚úÖ Perfect diagnostic form elements present\n"
                    },
                    {
                      "text": "üéâ Setup complete - ready for comprehensive testing!\n"
                    }
                  ],
                  "stderr": [
                    {
                      "text": "‚ùå Google Cloud authentication issue: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"diagnostic-pro-\u001b[7mmvp\u001b[27m\"\u001b[39m\nReceived: \u001b[31m\"diagnostic-pro-\u001b[7mlegacy\u001b[27m\"\u001b[39m\n"
                    }
                  ],
                  "retry": 0,
                  "startTime": "2025-08-01T06:22:34.570Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "84b7c86eb3d33e39df7f-63c40df9c1671f140787",
          "file": "setup.setup.js",
          "line": 8,
          "column": 1
        }
      ]
    },
    {
      "title": "complete-payment-test.test.js",
      "file": "complete-payment-test.test.js",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "complete payment workflow",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 120000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 1,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 4348,
                  "error": {
                    "message": "Error: locator.isVisible: Error: strict mode violation: locator('textarea') resolved to 2 elements:\n    1) <textarea rows=\"4\" required=\"\" placeholder=\"Describe what's wrong: symptoms, when it happens, any recent repairs, etc.\" class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 transition-all duration-200\"></textarea> aka getByRole('textbox', { name: 'Describe what\\'s wrong:' })\n    2) <textarea rows=\"3\" class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\" placeholder=\"What repairs were quoted? What's the price? Include all details from the estimate.\"></textarea> aka getByRole('textbox', { name: 'What repairs were quoted?' })\n\nCall log:\n\u001b[2m    - checking visibility of locator('textarea')\u001b[22m\n",
                    "stack": "Error: locator.isVisible: Error: strict mode violation: locator('textarea') resolved to 2 elements:\n    1) <textarea rows=\"4\" required=\"\" placeholder=\"Describe what's wrong: symptoms, when it happens, any recent repairs, etc.\" class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 transition-all duration-200\"></textarea> aka getByRole('textbox', { name: 'Describe what\\'s wrong:' })\n    2) <textarea rows=\"3\" class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\" placeholder=\"What repairs were quoted? What's the price? Include all details from the estimate.\"></textarea> aka getByRole('textbox', { name: 'What repairs were quoted?' })\n\nCall log:\n\u001b[2m    - checking visibility of locator('textarea')\u001b[22m\n\n    at /home/jeremylongshore/diagnostic-pro-mvp/tests/complete-payment-test.test.js:73:22",
                    "location": {
                      "file": "/home/jeremylongshore/diagnostic-pro-mvp/tests/complete-payment-test.test.js",
                      "column": 22,
                      "line": 73
                    },
                    "snippet": "  71 |   // Fill problem description\n  72 |   const textarea = await page.locator('textarea');\n> 73 |   if (await textarea.isVisible()) {\n     |                      ^\n  74 |     await textarea.fill('Engine making strange rattling noise during acceleration. Started 2 days ago.');\n  75 |     console.log('‚úÖ Problem description filled');\n  76 |   }"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/jeremylongshore/diagnostic-pro-mvp/tests/complete-payment-test.test.js",
                        "column": 22,
                        "line": 73
                      },
                      "message": "Error: locator.isVisible: Error: strict mode violation: locator('textarea') resolved to 2 elements:\n    1) <textarea rows=\"4\" required=\"\" placeholder=\"Describe what's wrong: symptoms, when it happens, any recent repairs, etc.\" class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 transition-all duration-200\"></textarea> aka getByRole('textbox', { name: 'Describe what\\'s wrong:' })\n    2) <textarea rows=\"3\" class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\" placeholder=\"What repairs were quoted? What's the price? Include all details from the estimate.\"></textarea> aka getByRole('textbox', { name: 'What repairs were quoted?' })\n\nCall log:\n\u001b[2m    - checking visibility of locator('textarea')\u001b[22m\n\n\n  71 |   // Fill problem description\n  72 |   const textarea = await page.locator('textarea');\n> 73 |   if (await textarea.isVisible()) {\n     |                      ^\n  74 |     await textarea.fill('Engine making strange rattling noise during acceleration. Started 2 days ago.');\n  75 |     console.log('‚úÖ Problem description filled');\n  76 |   }\n    at /home/jeremylongshore/diagnostic-pro-mvp/tests/complete-payment-test.test.js:73:22"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "üß™ Complete payment workflow test...\n"
                    },
                    {
                      "text": "üì∏ Taking initial screenshot...\n"
                    },
                    {
                      "text": "üîç Selecting Equipment Diagnosis service...\n"
                    },
                    {
                      "text": "‚úÖ Equipment Diagnosis service selected\n"
                    },
                    {
                      "text": "üìù Filling out diagnostic form...\n"
                    },
                    {
                      "text": "‚úÖ Name filled\n"
                    },
                    {
                      "text": "‚úÖ Email filled\n"
                    },
                    {
                      "text": "‚úÖ Phone filled\n"
                    },
                    {
                      "text": "‚úÖ Equipment type selected\n"
                    },
                    {
                      "text": "‚úÖ Vehicle details filled\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-08-01T06:22:36.690Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/jeremylongshore/diagnostic-pro-mvp/test-results/complete-payment-test-complete-payment-workflow-chromium/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/jeremylongshore/diagnostic-pro-mvp/test-results/complete-payment-test-complete-payment-workflow-chromium/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/jeremylongshore/diagnostic-pro-mvp/test-results/complete-payment-test-complete-payment-workflow-chromium/error-context.md"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/jeremylongshore/diagnostic-pro-mvp/test-results/complete-payment-test-complete-payment-workflow-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/jeremylongshore/diagnostic-pro-mvp/tests/complete-payment-test.test.js",
                    "column": 22,
                    "line": 73
                  }
                },
                {
                  "workerIndex": 2,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 4379,
                  "error": {
                    "message": "Error: locator.isVisible: Error: strict mode violation: locator('textarea') resolved to 2 elements:\n    1) <textarea rows=\"4\" required=\"\" placeholder=\"Describe what's wrong: symptoms, when it happens, any recent repairs, etc.\" class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 transition-all duration-200\"></textarea> aka getByRole('textbox', { name: 'Describe what\\'s wrong:' })\n    2) <textarea rows=\"3\" class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\" placeholder=\"What repairs were quoted? What's the price? Include all details from the estimate.\"></textarea> aka getByRole('textbox', { name: 'What repairs were quoted?' })\n\nCall log:\n\u001b[2m    - checking visibility of locator('textarea')\u001b[22m\n",
                    "stack": "Error: locator.isVisible: Error: strict mode violation: locator('textarea') resolved to 2 elements:\n    1) <textarea rows=\"4\" required=\"\" placeholder=\"Describe what's wrong: symptoms, when it happens, any recent repairs, etc.\" class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 transition-all duration-200\"></textarea> aka getByRole('textbox', { name: 'Describe what\\'s wrong:' })\n    2) <textarea rows=\"3\" class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\" placeholder=\"What repairs were quoted? What's the price? Include all details from the estimate.\"></textarea> aka getByRole('textbox', { name: 'What repairs were quoted?' })\n\nCall log:\n\u001b[2m    - checking visibility of locator('textarea')\u001b[22m\n\n    at /home/jeremylongshore/diagnostic-pro-mvp/tests/complete-payment-test.test.js:73:22",
                    "location": {
                      "file": "/home/jeremylongshore/diagnostic-pro-mvp/tests/complete-payment-test.test.js",
                      "column": 22,
                      "line": 73
                    },
                    "snippet": "  71 |   // Fill problem description\n  72 |   const textarea = await page.locator('textarea');\n> 73 |   if (await textarea.isVisible()) {\n     |                      ^\n  74 |     await textarea.fill('Engine making strange rattling noise during acceleration. Started 2 days ago.');\n  75 |     console.log('‚úÖ Problem description filled');\n  76 |   }"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/jeremylongshore/diagnostic-pro-mvp/tests/complete-payment-test.test.js",
                        "column": 22,
                        "line": 73
                      },
                      "message": "Error: locator.isVisible: Error: strict mode violation: locator('textarea') resolved to 2 elements:\n    1) <textarea rows=\"4\" required=\"\" placeholder=\"Describe what's wrong: symptoms, when it happens, any recent repairs, etc.\" class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 transition-all duration-200\"></textarea> aka getByRole('textbox', { name: 'Describe what\\'s wrong:' })\n    2) <textarea rows=\"3\" class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\" placeholder=\"What repairs were quoted? What's the price? Include all details from the estimate.\"></textarea> aka getByRole('textbox', { name: 'What repairs were quoted?' })\n\nCall log:\n\u001b[2m    - checking visibility of locator('textarea')\u001b[22m\n\n\n  71 |   // Fill problem description\n  72 |   const textarea = await page.locator('textarea');\n> 73 |   if (await textarea.isVisible()) {\n     |                      ^\n  74 |     await textarea.fill('Engine making strange rattling noise during acceleration. Started 2 days ago.');\n  75 |     console.log('‚úÖ Problem description filled');\n  76 |   }\n    at /home/jeremylongshore/diagnostic-pro-mvp/tests/complete-payment-test.test.js:73:22"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "üß™ Complete payment workflow test...\n"
                    },
                    {
                      "text": "üì∏ Taking initial screenshot...\n"
                    },
                    {
                      "text": "üîç Selecting Equipment Diagnosis service...\n"
                    },
                    {
                      "text": "‚úÖ Equipment Diagnosis service selected\n"
                    },
                    {
                      "text": "üìù Filling out diagnostic form...\n"
                    },
                    {
                      "text": "‚úÖ Name filled\n"
                    },
                    {
                      "text": "‚úÖ Email filled\n"
                    },
                    {
                      "text": "‚úÖ Phone filled\n"
                    },
                    {
                      "text": "‚úÖ Equipment type selected\n"
                    },
                    {
                      "text": "‚úÖ Vehicle details filled\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 1,
                  "startTime": "2025-08-01T06:22:41.542Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/jeremylongshore/diagnostic-pro-mvp/test-results/complete-payment-test-complete-payment-workflow-chromium-retry1/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/home/jeremylongshore/diagnostic-pro-mvp/test-results/complete-payment-test-complete-payment-workflow-chromium-retry1/video.webm"
                    },
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/home/jeremylongshore/diagnostic-pro-mvp/test-results/complete-payment-test-complete-payment-workflow-chromium-retry1/error-context.md"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/jeremylongshore/diagnostic-pro-mvp/test-results/complete-payment-test-complete-payment-workflow-chromium-retry1/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/jeremylongshore/diagnostic-pro-mvp/tests/complete-payment-test.test.js",
                    "column": 22,
                    "line": 73
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "d9bcc326d19dc7c5dbfe-0080d1ffc29faa7680c3",
          "file": "complete-payment-test.test.js",
          "line": 7,
          "column": 1
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-08-01T06:22:33.270Z",
    "duration": 12789.022,
    "expected": 1,
    "skipped": 0,
    "unexpected": 1,
    "flaky": 0
  }
}