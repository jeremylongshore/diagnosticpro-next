# COST-OPTIMIZED DOCKERFILE
# Reduces image size by 60-80% = lower storage/transfer costs

FROM node:20-alpine AS builder
WORKDIR /app
COPY package*.json ./
RUN npm ci --only=production --ignore-scripts && npm cache clean --force
COPY . .
RUN npm run build

FROM node:20-alpine AS runner
WORKDIR /app

# Install only production dependencies
COPY package*.json ./
RUN npm ci --only=production --omit=dev --ignore-scripts && npm cache clean --force && rm -rf /root/.npm

# Copy built app
COPY --from=builder /app/build ./build
COPY --from=builder /app/package.json ./

# Create non-root user (security + efficiency)
RUN addgroup -g 1001 -S nodejs && adduser -S svelte -u 1001
USER svelte

# Optimize for Cloud Run
EXPOSE 3000
ENV NODE_ENV=production
ENV PORT=3000

CMD ["node", "build"]